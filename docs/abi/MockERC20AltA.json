{
  "contractName": "MockERC20AltA",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol\":\"MockERC20AltA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol\":{\"keccak256\":\"0x164fa287cb7f0833d47f213c6563aac0c2f61a1f46575fbbadf7b030e3368721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bd4bd70c797afc8d134241311274a0bb1dfa311740d68363e86fdead06c205\",\"dweb:/ipfs/QmUeX8gZtoevYfimGeFeoC6os11fvVP2NAH2KjZ1HovgJo\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol\":{\"keccak256\":\"0xaec1ef50d3ffe65491e7e585b01d4b3d720978181f2a2cdf39f4f88e15f01447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42de7a229ffb238c0bdaffe81684d0255c51d66656df33e824c116cad026e929\",\"dweb:/ipfs/QmUGyMhLa1q5x13uFrxggZUPiN5Zs2TBFgUGXg3sdCseF4\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol\":{\"keccak256\":\"0xec22934ce79e5b432b1588d1067863141a0131b3acf2a7f5720d4af30140ff9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ee98aeae4cf87699cc6baaf33b512970c528bb5f6da72ab834f7647b9471be\",\"dweb:/ipfs/QmZK8Piyy7r65VG85UwdxgcHiBB4L37KqDkf2TP28saGfs\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/IAdapter.sol\":{\"keccak256\":\"0x9c0c8c5c306da5adf24ed7a812b8b762a60336e046de50e1a1434871031ee083\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53387787b79dbcd0044af7ec17936182ee1e727374652643f013b79b366aae34\",\"dweb:/ipfs/QmTWMRzFMBbYGu538JJaKFGuWXL2kPM9twzDmaeNGtWPhJ\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/ICERC20.sol\":{\"keccak256\":\"0x5a53741cc0ceb8e3cd8301ebb3e16c32d1f5d0351cd847781b07a678815064fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b0c373b5464bb0190587b30662539b5f529a50da38388f72d4ffe3234f0fdbc\",\"dweb:/ipfs/QmdekemkwwJgXYzKTAYx11piqwci6w3AXsYBfSu24ubPc8\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INut.sol\":{\"keccak256\":\"0x51a91900051435bf5db864c8c5b571534bc8c7c82ec8fe87c89b8fbb5446d3d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5fba848914fff401fe817f8817653db61e16b79737a73961ce7d7f21903a920\",\"dweb:/ipfs/QmSXoiFF79SrLwePefJ3dpabAG6jyZVuWu6jnFJyaPDf2g\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutDistributor.sol\":{\"keccak256\":\"0x441750edaefb061efe22deb9a76b990daa208488544010e2a7e9c792c12982f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b4ddc07e6e3b612a5ec6331bfa4ae6d50d5fe9a5176dfb092c9eff57974d7c3\",\"dweb:/ipfs/QmSphPKxWJJubH7H1Bwz9VEmhmNmJf82d8GP4DqkDn7yJS\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol\":{\"keccak256\":\"0x6b0be2736dddc06add4c6142ac5c583fa5a5fce16efa8599f06d3feb85c5fe6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1253a22c3183ffed23ba4c6324388267614e1e03aeda7d65d96199bdfbc4c21\",\"dweb:/ipfs/QmNv6vQYqn7ZE6c98vWi6KBLLQ5jsvVF3Uy2WSDtAfwZPc\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x1e35d99985588565937c6e0f0ac288dcff45b706bb5d68aacb3d2ff78568cbaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a038862ece49ded74cb16890cfd008ab1881e0974f001e7dfba06d7dbdf0b57b\",\"dweb:/ipfs/Qma9HfzmKHBhVM3waiQ3brWqcRUJhiFpKj9x84rdfL9a2T\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/lib/Governable.sol\":{\"keccak256\":\"0xc1b72d60ccb557e1bb582518ecc6c585399c0725dc9e3eed7a36c496985931ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e8db0b1250fb94ebe9ac42c4d120cdcbc469a04d2b39e820eb086bf436288cc\",\"dweb:/ipfs/QmS5kkFnLrSpRZbgWXfNftEobpDqvNZiAaidZ7rcjDxpuH\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/lib/Math.sol\":{\"keccak256\":\"0x9580aa583ab80b7790ff938253449a0941e3b8d1452564507bde181b9334b8bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c661596637988032f827d3ad463f5a5c95d7a2a108fdd6cc13e1646f78cae530\",\"dweb:/ipfs/QmWvd2c8hbiRfKLNLhq9Sd1ryZee3Tuv4YmoorAneD1dUd\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol\":{\"keccak256\":\"0x2d923fe611a66e33df9fed83f9e0c44cf3ebbde48fc6343638fa77f4c8406090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44a4e9e0aad14deec0e888d1ffbcfd52ebefadc260a97c460b17129948d1f227\",\"dweb:/ipfs/QmaDzdzBu3qGCqgg6vECKp3CLpEyaAD8FdmKJb7Xace9Bx\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol\":{\"keccak256\":\"0xcec8c1654f876aea2954f2fc98279a90ddd0c1022de02feb370dbbf138c56772\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e776574ead42e0a0083caf3fa121a6e9783638c3d9b549b95da76fbb370ad7e\",\"dweb:/ipfs/QmWkATJ3NeHv9ap7zqMxRzJez4JN7dk1Q3vc9DsPCfGhmM\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol\":{\"keccak256\":\"0x28c347a6d3819d61cb99c8e8339693a18dd97df1320ffc0ab26f759c3c77f499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb12ddb22284ea467ee67657cea1b530a299a1ec634cb0ee2c40f4be1b09fd0\",\"dweb:/ipfs/QmaqUv3uS9GGR4Ay8jr4jHiL6FiNFBLwH3mxti2ck4VVqV\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0x9abeffe138f098b16557187383ba0f9e8503602fa95cd668132986ee115237ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb863d688f8bf04b846369451afba15e8129b2ee16bd1631c12138c262d1bf68\",\"dweb:/ipfs/QmRE3EmJ1T4Hg5HjGHVupP2a3Vrnd8jRY8GtB6J52QNX9z\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600d81526020016c4d6f636b4552433230416c744160981b8152506040518060400160405280600d81526020016c4d4f434b4552433230414c544160981b8152506012828281600390805190602001906100779291906100c2565b50805161008b9060049060208401906100c2565b50506005805460ff19166012179055506100a4816100ac565b505050610163565b6005805460ff191660ff92909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100f8576000855561013e565b82601f1061011157805160ff191683800117855561013e565b8280016001018555821561013e579182015b8281111561013e578251825591602001919060010190610123565b5061014a92915061014e565b5090565b5b8082111561014a576000815560010161014f565b610b27806101726000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce9190610986565b60405180910390f35b6100ea6100e5366004610952565b610246565b6040516100ce919061097b565b6100ff610263565b6040516100ce91906109d9565b6100ea61011a366004610917565b610269565b6101276102f0565b6040516100ce91906109e2565b6100ea610142366004610952565b6102f9565b61015a610155366004610952565b610347565b005b6100ff61016a3660046108cb565b610355565b6100c1610374565b6100ea610185366004610952565b6103d5565b6100ea610198366004610952565b61043d565b6100ff6101ab3660046108e5565b610451565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561023c5780601f106102115761010080835404028352916020019161023c565b820191906000526020600020905b81548152906001019060200180831161021f57829003601f168201915b5050505050905090565b600061025a61025361047c565b8484610480565b50600192915050565b60025490565b600061027684848461056c565b6102e68461028261047c565b6102e185604051806060016040528060288152602001610a5c602891396001600160a01b038a166000908152600160205260408120906102c061047c565b6001600160a01b0316815260208101919091526040016000205491906106c7565b610480565b5060019392505050565b60055460ff1690565b600061025a61030661047c565b846102e1856001600061031761047c565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061075e565b61035182826107bf565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561023c5780601f106102115761010080835404028352916020019161023c565b600061025a6103e261047c565b846102e185604051806060016040528060258152602001610acd602591396001600061040c61047c565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906106c7565b600061025a61044a61047c565b848461056c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104c55760405162461bcd60e51b8152600401808060200182810382526024815260200180610aa96024913960400191505060405180910390fd5b6001600160a01b03821661050a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a146022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166105b15760405162461bcd60e51b8152600401808060200182810382526025815260200180610a846025913960400191505060405180910390fd5b6001600160a01b0382166105f65760405162461bcd60e51b81526004018080602001828103825260238152602001806109f16023913960400191505060405180910390fd5b6106018383836108af565b61063e81604051806060016040528060268152602001610a36602691396001600160a01b03861660009081526020819052604090205491906106c7565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461066d908261075e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156107565760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561071b578181015183820152602001610703565b50505050905090810190601f1680156107485780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107b8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661081a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610826600083836108af565b600254610833908261075e565b6002556001600160a01b038216600090815260208190526040902054610859908261075e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b80356001600160a01b038116811461036f57600080fd5b6000602082840312156108dc578081fd5b6107b8826108b4565b600080604083850312156108f7578081fd5b610900836108b4565b915061090e602084016108b4565b90509250929050565b60008060006060848603121561092b578081fd5b610934846108b4565b9250610942602085016108b4565b9150604084013590509250925092565b60008060408385031215610964578182fd5b61096d836108b4565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156109b257858101830151858201604001528201610996565b818111156109c35783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204a1b38708c49ad0eeb4df48705c5c08cb6e290f6ddca17be969d3c397e20a28264736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce9190610986565b60405180910390f35b6100ea6100e5366004610952565b610246565b6040516100ce919061097b565b6100ff610263565b6040516100ce91906109d9565b6100ea61011a366004610917565b610269565b6101276102f0565b6040516100ce91906109e2565b6100ea610142366004610952565b6102f9565b61015a610155366004610952565b610347565b005b6100ff61016a3660046108cb565b610355565b6100c1610374565b6100ea610185366004610952565b6103d5565b6100ea610198366004610952565b61043d565b6100ff6101ab3660046108e5565b610451565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561023c5780601f106102115761010080835404028352916020019161023c565b820191906000526020600020905b81548152906001019060200180831161021f57829003601f168201915b5050505050905090565b600061025a61025361047c565b8484610480565b50600192915050565b60025490565b600061027684848461056c565b6102e68461028261047c565b6102e185604051806060016040528060288152602001610a5c602891396001600160a01b038a166000908152600160205260408120906102c061047c565b6001600160a01b0316815260208101919091526040016000205491906106c7565b610480565b5060019392505050565b60055460ff1690565b600061025a61030661047c565b846102e1856001600061031761047c565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061075e565b61035182826107bf565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561023c5780601f106102115761010080835404028352916020019161023c565b600061025a6103e261047c565b846102e185604051806060016040528060258152602001610acd602591396001600061040c61047c565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906106c7565b600061025a61044a61047c565b848461056c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104c55760405162461bcd60e51b8152600401808060200182810382526024815260200180610aa96024913960400191505060405180910390fd5b6001600160a01b03821661050a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610a146022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166105b15760405162461bcd60e51b8152600401808060200182810382526025815260200180610a846025913960400191505060405180910390fd5b6001600160a01b0382166105f65760405162461bcd60e51b81526004018080602001828103825260238152602001806109f16023913960400191505060405180910390fd5b6106018383836108af565b61063e81604051806060016040528060268152602001610a36602691396001600160a01b03861660009081526020819052604090205491906106c7565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461066d908261075e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156107565760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561071b578181015183820152602001610703565b50505050905090810190601f1680156107485780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107b8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03821661081a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610826600083836108af565b600254610833908261075e565b6002556001600160a01b038216600090815260208190526040902054610859908261075e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b80356001600160a01b038116811461036f57600080fd5b6000602082840312156108dc578081fd5b6107b8826108b4565b600080604083850312156108f7578081fd5b610900836108b4565b915061090e602084016108b4565b90509250929050565b60008060006060848603121561092b578081fd5b610934846108b4565b9250610942602085016108b4565b9150604084013590509250925092565b60008060408385031215610964578182fd5b61096d836108b4565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156109b257858101830151858201604001528201610996565b818111156109c35783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204a1b38708c49ad0eeb4df48705c5c08cb6e290f6ddca17be969d3c397e20a28264736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2462:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:35",
                "type": ""
              }
            ],
            "src": "14:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:35",
                "type": ""
              }
            ],
            "src": "194:198:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:35",
                "type": ""
              }
            ],
            "src": "397:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:35"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:35",
                "type": ""
              }
            ],
            "src": "676:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:35",
                "type": ""
              }
            ],
            "src": "1023:266:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1399:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1411:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1407:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1399:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1441:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1466:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1459:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1452:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1434:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1434:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1434:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1358:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1369:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1380:4:35",
                "type": ""
              }
            ],
            "src": "1294:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1607:482:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1617:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1627:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1621:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1645:9:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1656:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1638:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1638:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1668:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1688:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1682:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1672:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1715:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1726:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1711:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1731:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1704:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1704:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1704:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1747:13:35",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1756:4:35"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1751:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1819:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1848:9:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1859:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1844:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1844:17:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1863:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1840:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1840:26:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1882:6:35"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1890:1:35"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1878:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1878:14:35"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1894:2:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1874:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1874:23:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1868:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1868:30:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1833:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1833:66:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1833:66:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1780:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1783:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1777:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1777:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1791:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1793:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1802:1:35"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1805:2:35"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1798:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1798:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1793:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1773:3:35",
                    "statements": []
                  },
                  "src": "1769:140:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1943:69:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1972:9:35"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1983:6:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1968:22:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1992:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1964:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1964:31:35"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1997:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1957:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1957:45:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1957:45:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1924:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1927:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1921:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1918:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2021:62:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2037:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2064:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:15:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2073:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2069:7:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2048:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2048:29:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:45:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2080:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2021:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1576:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1587:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1598:4:35",
                "type": ""
              }
            ],
            "src": "1486:603:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2195:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2205:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2217:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2228:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2213:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2205:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2247:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2258:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2240:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2240:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2164:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2175:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2186:4:35",
                "type": ""
              }
            ],
            "src": "2094:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2373:87:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2383:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2395:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2383:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2425:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2440:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2448:4:35",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2436:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2436:17:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:36:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2342:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2353:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2364:4:35",
                "type": ""
              }
            ],
            "src": "2276:184:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1275:77:16:-:0;;;;;;;;;;;;;178:141:23;;;;;;;;;;;;;-1:-1:-1;;;178:141:23;;;;;;;;;;;;;;;;-1:-1:-1;;;178:141:23;;;1345:2:16;270:4:23;276:6;2040:5:30;2032;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2055:17:30;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:30;:14;;-1:-1:-1;;2082:14:30;2094:2;2082:14;;;-1:-1:-1;290:24:23::1;305:8:::0;290:14:::1;:24::i;:::-;178:141:::0;;;1275:77:16;;10018:96:30;10086:9;:21;;-1:-1:-1;;10086:21:30;;;;;;;;;;;;10018:96::o;1275:77:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1275:77:16;;;-1:-1:-1;1275:77:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1275:77:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4244:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3235:106::-;;;:::i;:::-;;;;;;;:::i;4877:317::-;;;;;;:::i;:::-;;:::i;3086:89::-;;;:::i;:::-;;;;;;;:::i;5589:215::-;;;;;;:::i;:::-;;:::i;323:76:23:-;;;;;;:::i;:::-;;:::i;:::-;;3399:125:30;;;;;;:::i;:::-;;:::i;2370:93::-;;;:::i;6291:266::-;;;;;;:::i;:::-;;:::i;3727:172::-;;;;;;:::i;:::-;;:::i;3957:149::-;;;;;;:::i;:::-;;:::i;2168:89::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:30;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:30;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:30;;;;;;;;;;;;-1:-1:-1;5076:33:30;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:30;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:30;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:30;;;:34;;;;;;;;;;;:38;:50::i;323:76:23:-;377:17;383:2;387:6;377:5;:17::i;:::-;323:76;;:::o;3399:125:30:-;-1:-1:-1;;;;;3499:18:30;;3473:7;3499:18;;;;;;;;;;;3399:125;;;;:::o;2370:93::-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:30;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:30;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:30;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;598:104:34:-;685:10;598:104;:::o;9355:340:30:-;-1:-1:-1;;;;;9456:19:30;;9448:68;;;;-1:-1:-1;;;9448:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:30;;9526:68;;;;-1:-1:-1;;;9526:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:30;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:30;;7128:70;;;;-1:-1:-1;;;7128:70:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:30;;7208:71;;;;-1:-1:-1;;;7208:71:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:30;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:30;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:30;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:28:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:28;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:28:o;7832:370:30:-;-1:-1:-1;;;;;7915:21:30;;7907:65;;;;;-1:-1:-1;;;7907:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:30;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:30;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o;14:175:35:-;84:20;;-1:-1:-1;;;;;133:31:35;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:35:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:35;2052:15;-1:-1:-1;;2048:29:35;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:35:o;2094:177::-;2240:25;;;2228:2;2213:18;;2195:76::o;2276:184::-;2448:4;2436:17;;;;2418:36;;2406:2;2391:18;;2373:87::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\nimport \"../Nutmeg.sol\";\n\n// @notice This contract is a version of Nutmeg that contains additional\n// interfaces for testing\n\ncontract NutmegAltA is Nutmeg {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure returns (string memory) {\n        return \"nutmegalta\";\n   }\n}\n\ncontract NutmegAltB is Nutmeg {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure returns (string memory) {\n        return \"nutmegaltb\";\n   }\n}\n\nimport \"../NutDistributor.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\n// @notice This contract is a version of NutDistributor that allows\n// the epoch intervals to be changed for testing\n\ncontract NutDistributorAltA is NutDistributor {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure override returns (string memory) {\n        return \"nutdistributoralta\";\n   }\n}\n\ncontract NutDistributorAltB is NutDistributor {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure override returns (string memory) {\n        return \"nutdistributoraltb\";\n   }\n}\n\nimport \"./MockERC20.sol\";\n\ncontract MockERC20AltA is\nMockERC20(\"MockERC20AltA\", \"MOCKERC20ALTA\", 18) {\n}\n\ncontract MockERC20AltB is\nMockERC20(\"MockERC20AltB\", \"MOCKERC20ALTB\", 18) {\n}\n\ncontract MockERC20AltC is\nMockERC20(\"MockERC20AltC\", \"MOCKERC20ALTC\", 6) {\n}\n\nimport \"./MockCERC20.sol\";\n\ncontract MockCERC20AltA is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltA\", \"MOCKCERC20ALTA\", 18) {\n    }\n}\ncontract MockCERC20AltB is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltB\", \"MOCKCERC20ALTB\", 18) {\n    }\n}\ncontract MockCERC20AltC is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltC\", \"MOCKCERC20ALTC\", 6) {\n    }\n}\n\nimport \"../adapters/CompoundAdapter.sol\";\nimport \"../interfaces/INutmeg.sol\";\ncontract CompoundAdapterAltA is CompoundAdapter {\n    constructor(INutmeg nutmegAddr) CompoundAdapter(nutmegAddr) {\n    }\n}\n\ncontract CompoundAdapterAltB is CompoundAdapter {\n    constructor(INutmeg nutmegAddr) CompoundAdapter(nutmegAddr) {\n    }\n}\n",
  "sourcePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
  "ast": {
    "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
    "exportedSymbols": {
      "Address": [
        9433
      ],
      "CompoundAdapter": [
        5818
      ],
      "CompoundAdapterAltA": [
        6586
      ],
      "CompoundAdapterAltB": [
        6598
      ],
      "Context": [
        9456
      ],
      "ERC20": [
        8846
      ],
      "Governable": [
        6362
      ],
      "IAdapter": [
        5881
      ],
      "ICERC20": [
        5940
      ],
      "IERC20": [
        8924
      ],
      "INut": [
        5950
      ],
      "INutDistributor": [
        5969
      ],
      "INutmeg": [
        6233
      ],
      "IPriceOracle": [
        6243
      ],
      "Initializable": [
        8343
      ],
      "Math": [
        6455
      ],
      "MockCERC20": [
        7394
      ],
      "MockCERC20AltA": [
        6542
      ],
      "MockCERC20AltB": [
        6557
      ],
      "MockCERC20AltC": [
        6572
      ],
      "MockCERC20Base": [
        7379
      ],
      "MockERC20": [
        7431
      ],
      "MockERC20AltA": [
        6514
      ],
      "MockERC20AltB": [
        6520
      ],
      "MockERC20AltC": [
        6526
      ],
      "NutDistributor": [
        1345
      ],
      "NutDistributorAltA": [
        6495
      ],
      "NutDistributorAltB": [
        6507
      ],
      "Nutmeg": [
        4627
      ],
      "NutmegAltA": [
        6470
      ],
      "NutmegAltB": [
        6481
      ],
      "SafeERC20": [
        9137
      ],
      "SafeMath": [
        8277
      ]
    },
    "id": 6599,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6457,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:16"
      },
      {
        "id": 6458,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol",
        "file": "../Nutmeg.sol",
        "id": 6459,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 4628,
        "src": "90:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6460,
              "name": "Nutmeg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4627,
              "src": "238:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Nutmeg_$4627",
                "typeString": "contract Nutmeg"
              }
            },
            "id": 6461,
            "nodeType": "InheritanceSpecifier",
            "src": "238:6:16"
          }
        ],
        "contractDependencies": [
          4627,
          6233,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6470,
        "linearizedBaseContracts": [
          6470,
          4627,
          6233,
          6362,
          8343
        ],
        "name": "NutmegAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6468,
              "nodeType": "Block",
              "src": "365:35:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746d6567616c7461",
                    "id": 6466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "382:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_68fc9a7c0f4883b148292185cc10b645c38262342e4adeb1916364c2fbf9839c",
                      "typeString": "literal_string \"nutmegalta\""
                    },
                    "value": "nutmegalta"
                  },
                  "functionReturnParameters": 6465,
                  "id": 6467,
                  "nodeType": "Return",
                  "src": "375:19:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:16"
            },
            "returnParameters": {
              "id": 6465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6469,
                  "src": "350:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:15:16"
            },
            "scope": 6470,
            "src": "287:113:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "215:187:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6471,
              "name": "Nutmeg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4627,
              "src": "427:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Nutmeg_$4627",
                "typeString": "contract Nutmeg"
              }
            },
            "id": 6472,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:16"
          }
        ],
        "contractDependencies": [
          4627,
          6233,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6481,
        "linearizedBaseContracts": [
          6481,
          4627,
          6233,
          6362,
          8343
        ],
        "name": "NutmegAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "554:35:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746d6567616c7462",
                    "id": 6477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "571:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2e3ccd6b44f634abcabf2edef977d7c19c871bd07742ae8d30f3fce19b16423a",
                      "typeString": "literal_string \"nutmegaltb\""
                    },
                    "value": "nutmegaltb"
                  },
                  "functionReturnParameters": 6476,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "564:19:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:16"
            },
            "returnParameters": {
              "id": 6476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6475,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "539:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6474,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:15:16"
            },
            "scope": 6481,
            "src": "476:113:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "404:187:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol",
        "file": "../NutDistributor.sol",
        "id": 6482,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 1346,
        "src": "593:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 6483,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 9138,
        "src": "625:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6484,
              "name": "NutDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "835:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NutDistributor_$1345",
                "typeString": "contract NutDistributor"
              }
            },
            "id": 6485,
            "nodeType": "InheritanceSpecifier",
            "src": "835:14:16"
          }
        ],
        "contractDependencies": [
          1345,
          5969,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6495,
        "linearizedBaseContracts": [
          6495,
          1345,
          5969,
          6362,
          8343
        ],
        "name": "NutDistributorAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1344
            ],
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "979:43:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746469737472696275746f72616c7461",
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "996:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0a17200a43d7aef32ea20fe9bb2eb3cc4b0506245e0a4cbde1844dd721469385",
                      "typeString": "literal_string \"nutdistributoralta\""
                    },
                    "value": "nutdistributoralta"
                  },
                  "functionReturnParameters": 6490,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "989:27:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6487,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "946:8:16"
            },
            "parameters": {
              "id": 6486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:2:16"
            },
            "returnParameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6489,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "964:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:15:16"
            },
            "scope": 6495,
            "src": "892:130:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "804:220:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6496,
              "name": "NutDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "1057:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NutDistributor_$1345",
                "typeString": "contract NutDistributor"
              }
            },
            "id": 6497,
            "nodeType": "InheritanceSpecifier",
            "src": "1057:14:16"
          }
        ],
        "contractDependencies": [
          1345,
          5969,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6507,
        "linearizedBaseContracts": [
          6507,
          1345,
          5969,
          6362,
          8343
        ],
        "name": "NutDistributorAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1344
            ],
            "body": {
              "id": 6505,
              "nodeType": "Block",
              "src": "1201:43:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746469737472696275746f72616c7462",
                    "id": 6503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1218:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a352badae58a92a08e1b10953e081ea6c05bc3f621b4fef7d9682a33a7037a1c",
                      "typeString": "literal_string \"nutdistributoraltb\""
                    },
                    "value": "nutdistributoraltb"
                  },
                  "functionReturnParameters": 6502,
                  "id": 6504,
                  "nodeType": "Return",
                  "src": "1211:27:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1168:8:16"
            },
            "parameters": {
              "id": 6498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:16"
            },
            "returnParameters": {
              "id": 6502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6501,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6506,
                  "src": "1186:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:15:16"
            },
            "scope": 6507,
            "src": "1114:130:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "1026:220:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 6508,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 7432,
        "src": "1248:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7441",
                "id": 6510,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1311:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4794095f97bc7bebfb2b077916ba07f410c8c7ef5e70409878e2b356d86555a9",
                  "typeString": "literal_string \"MockERC20AltA\""
                },
                "value": "MockERC20AltA"
              },
              {
                "hexValue": "4d4f434b4552433230414c5441",
                "id": 6511,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1328:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1954f40dd366fe296c52abcb57b295865f6a3112bfaae10360cb7d753ffc46f1",
                  "typeString": "literal_string \"MOCKERC20ALTA\""
                },
                "value": "MOCKERC20ALTA"
              },
              {
                "hexValue": "3138",
                "id": 6512,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1345:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 6509,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1301:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6513,
            "nodeType": "InheritanceSpecifier",
            "src": "1301:47:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6514,
        "linearizedBaseContracts": [
          6514,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltA",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1275:77:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7442",
                "id": 6516,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1390:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_2932fd420ebf44dda08858ac23f678fe7f6d305b3e44678914ed16ec6d702306",
                  "typeString": "literal_string \"MockERC20AltB\""
                },
                "value": "MockERC20AltB"
              },
              {
                "hexValue": "4d4f434b4552433230414c5442",
                "id": 6517,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1407:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1475e0d2531587a7a406cb1943b50d036c5d602f4897fd573505d55cbd53204c",
                  "typeString": "literal_string \"MOCKERC20ALTB\""
                },
                "value": "MOCKERC20ALTB"
              },
              {
                "hexValue": "3138",
                "id": 6518,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1424:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 6515,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6519,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:47:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6520,
        "linearizedBaseContracts": [
          6520,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltB",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1354:77:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7443",
                "id": 6522,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1469:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_ecc58c110f2e1d5eccf0d0c4fd12886bf45355cc139f8093e463082c9d401a3e",
                  "typeString": "literal_string \"MockERC20AltC\""
                },
                "value": "MockERC20AltC"
              },
              {
                "hexValue": "4d4f434b4552433230414c5443",
                "id": 6523,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1486:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_0747507ac0fd3ba2b509098565a0ff84efb11d9fc1c6a8b9a9252aa751b99602",
                  "typeString": "literal_string \"MOCKERC20ALTC\""
                },
                "value": "MOCKERC20ALTC"
              },
              {
                "hexValue": "36",
                "id": 6524,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1503:1:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              }
            ],
            "baseName": {
              "id": 6521,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1459:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6525,
            "nodeType": "InheritanceSpecifier",
            "src": "1459:46:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6526,
        "linearizedBaseContracts": [
          6526,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1433:76:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol",
        "file": "./MockCERC20.sol",
        "id": 6527,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 7395,
        "src": "1511:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6528,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1566:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6529,
            "nodeType": "InheritanceSpecifier",
            "src": "1566:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6542,
        "linearizedBaseContracts": [
          6542,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6540,
              "nodeType": "Block",
              "src": "1689:7:16",
              "statements": []
            },
            "id": 6541,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6534,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6531,
                    "src": "1637:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7441",
                    "id": 6535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1648:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4e4716bdda18cfdfb45f5d9b9b258592724ae322f8c6d6a7bd6c36abd1f466cd",
                      "typeString": "literal_string \"MockCERC20 AltA\""
                    },
                    "value": "MockCERC20 AltA"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5441",
                    "id": 6536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1667:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7e5d3292b791f24b9f7396f87e4036c10dacf0ff53c6ef136f8d52b816d575f8",
                      "typeString": "literal_string \"MOCKCERC20ALTA\""
                    },
                    "value": "MOCKCERC20ALTA"
                  },
                  {
                    "hexValue": "3138",
                    "id": 6537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1685:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 6538,
                "modifierName": {
                  "id": 6533,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1622:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:66:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6531,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "1599:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1598:19:16"
            },
            "returnParameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:0:16"
            },
            "scope": 6542,
            "src": "1587:109:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1539:159:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6543,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1726:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6544,
            "nodeType": "InheritanceSpecifier",
            "src": "1726:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6557,
        "linearizedBaseContracts": [
          6557,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6555,
              "nodeType": "Block",
              "src": "1849:7:16",
              "statements": []
            },
            "id": 6556,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6549,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6546,
                    "src": "1797:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7442",
                    "id": 6550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1808:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7920623c35eeca5023e957c83f7494b39add9c6181a973a4e51a4149ebb7345d",
                      "typeString": "literal_string \"MockCERC20 AltB\""
                    },
                    "value": "MockCERC20 AltB"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5442",
                    "id": 6551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1827:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f68135a7b15ec8d6fd78bfedea8e8613392787a291ebbec336e70198d7ced0d9",
                      "typeString": "literal_string \"MOCKCERC20ALTB\""
                    },
                    "value": "MOCKCERC20ALTB"
                  },
                  {
                    "hexValue": "3138",
                    "id": 6552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1845:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 6553,
                "modifierName": {
                  "id": 6548,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1782:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1782:66:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6546,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6556,
                  "src": "1759:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:19:16"
            },
            "returnParameters": {
              "id": 6554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1849:0:16"
            },
            "scope": 6557,
            "src": "1747:109:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1699:159:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6558,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1886:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6559,
            "nodeType": "InheritanceSpecifier",
            "src": "1886:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6572,
        "linearizedBaseContracts": [
          6572,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6570,
              "nodeType": "Block",
              "src": "2008:7:16",
              "statements": []
            },
            "id": 6571,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6564,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6561,
                    "src": "1957:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7443",
                    "id": 6565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1968:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_660d9a53823ace49920838655fc49235019dad2062c232237ec4efde95964ca9",
                      "typeString": "literal_string \"MockCERC20 AltC\""
                    },
                    "value": "MockCERC20 AltC"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5443",
                    "id": 6566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1987:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1fff02425a6285e0e9e5b4c110f8b8b2a8718a36542dbcf67744f39727202c57",
                      "typeString": "literal_string \"MOCKCERC20ALTC\""
                    },
                    "value": "MOCKCERC20ALTC"
                  },
                  {
                    "hexValue": "36",
                    "id": 6567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2005:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  }
                ],
                "id": 6568,
                "modifierName": {
                  "id": 6563,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1942:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1942:65:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6561,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6571,
                  "src": "1919:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1918:19:16"
            },
            "returnParameters": {
              "id": 6569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:16"
            },
            "scope": 6572,
            "src": "1907:108:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1859:158:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol",
        "file": "../adapters/CompoundAdapter.sol",
        "id": 6573,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 5819,
        "src": "2019:41:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol",
        "file": "../interfaces/INutmeg.sol",
        "id": 6574,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 6234,
        "src": "2061:35:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6575,
              "name": "CompoundAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5818,
              "src": "2129:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CompoundAdapter_$5818",
                "typeString": "contract CompoundAdapter"
              }
            },
            "id": 6576,
            "nodeType": "InheritanceSpecifier",
            "src": "2129:15:16"
          }
        ],
        "contractDependencies": [
          5818,
          5881,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6586,
        "linearizedBaseContracts": [
          6586,
          5818,
          5881,
          6362,
          8343
        ],
        "name": "CompoundAdapterAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6584,
              "nodeType": "Block",
              "src": "2211:7:16",
              "statements": []
            },
            "id": 6585,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6581,
                    "name": "nutmegAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6578,
                    "src": "2199:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  }
                ],
                "id": 6582,
                "modifierName": {
                  "id": 6580,
                  "name": "CompoundAdapter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5818,
                  "src": "2183:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CompoundAdapter_$5818_$",
                    "typeString": "type(contract CompoundAdapter)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:27:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6578,
                  "mutability": "mutable",
                  "name": "nutmegAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "2163:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INutmeg_$6233",
                    "typeString": "contract INutmeg"
                  },
                  "typeName": {
                    "id": 6577,
                    "name": "INutmeg",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6233,
                    "src": "2163:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2162:20:16"
            },
            "returnParameters": {
              "id": 6583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:16"
            },
            "scope": 6586,
            "src": "2151:67:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "2097:123:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6587,
              "name": "CompoundAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5818,
              "src": "2254:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CompoundAdapter_$5818",
                "typeString": "contract CompoundAdapter"
              }
            },
            "id": 6588,
            "nodeType": "InheritanceSpecifier",
            "src": "2254:15:16"
          }
        ],
        "contractDependencies": [
          5818,
          5881,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6598,
        "linearizedBaseContracts": [
          6598,
          5818,
          5881,
          6362,
          8343
        ],
        "name": "CompoundAdapterAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6596,
              "nodeType": "Block",
              "src": "2336:7:16",
              "statements": []
            },
            "id": 6597,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6593,
                    "name": "nutmegAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6590,
                    "src": "2324:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  }
                ],
                "id": 6594,
                "modifierName": {
                  "id": 6592,
                  "name": "CompoundAdapter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5818,
                  "src": "2308:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CompoundAdapter_$5818_$",
                    "typeString": "type(contract CompoundAdapter)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2308:27:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6590,
                  "mutability": "mutable",
                  "name": "nutmegAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6597,
                  "src": "2288:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INutmeg_$6233",
                    "typeString": "contract INutmeg"
                  },
                  "typeName": {
                    "id": 6589,
                    "name": "INutmeg",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6233,
                    "src": "2288:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:20:16"
            },
            "returnParameters": {
              "id": 6595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:16"
            },
            "scope": 6598,
            "src": "2276:67:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "2222:123:16"
      }
    ],
    "src": "33:2313:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
      "exportedSymbols": {
        "Address": [
          9433
        ],
        "CompoundAdapter": [
          5818
        ],
        "CompoundAdapterAltA": [
          6586
        ],
        "CompoundAdapterAltB": [
          6598
        ],
        "Context": [
          9456
        ],
        "ERC20": [
          8846
        ],
        "Governable": [
          6362
        ],
        "IAdapter": [
          5881
        ],
        "ICERC20": [
          5940
        ],
        "IERC20": [
          8924
        ],
        "INut": [
          5950
        ],
        "INutDistributor": [
          5969
        ],
        "INutmeg": [
          6233
        ],
        "IPriceOracle": [
          6243
        ],
        "Initializable": [
          8343
        ],
        "Math": [
          6455
        ],
        "MockCERC20": [
          7394
        ],
        "MockCERC20AltA": [
          6542
        ],
        "MockCERC20AltB": [
          6557
        ],
        "MockCERC20AltC": [
          6572
        ],
        "MockCERC20Base": [
          7379
        ],
        "MockERC20": [
          7431
        ],
        "MockERC20AltA": [
          6514
        ],
        "MockERC20AltB": [
          6520
        ],
        "MockERC20AltC": [
          6526
        ],
        "NutDistributor": [
          1345
        ],
        "NutDistributorAltA": [
          6495
        ],
        "NutDistributorAltB": [
          6507
        ],
        "Nutmeg": [
          4627
        ],
        "NutmegAltA": [
          6470
        ],
        "NutmegAltB": [
          6481
        ],
        "SafeERC20": [
          9137
        ],
        "SafeMath": [
          8277
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 6457,
        "name": "PragmaDirective",
        "src": "33:22:16"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 6458,
        "name": "PragmaDirective",
        "src": "56:33:16"
      },
      {
        "attributes": {
          "SourceUnit": 4628,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol",
          "file": "../Nutmeg.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6459,
        "name": "ImportDirective",
        "src": "90:23:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4627,
            6233,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6470,
            4627,
            6233,
            6362,
            8343
          ],
          "name": "NutmegAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Nutmeg",
                  "referencedDeclaration": 4627,
                  "type": "contract Nutmeg"
                },
                "id": 6460,
                "name": "UserDefinedTypeName",
                "src": "238:6:16"
              }
            ],
            "id": 6461,
            "name": "InheritanceSpecifier",
            "src": "238:6:16"
          },
          {
            "attributes": {
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6470,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6462,
                "name": "ParameterList",
                "src": "312:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6469,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6463,
                        "name": "ElementaryTypeName",
                        "src": "350:6:16"
                      }
                    ],
                    "id": 6464,
                    "name": "VariableDeclaration",
                    "src": "350:13:16"
                  }
                ],
                "id": 6465,
                "name": "ParameterList",
                "src": "349:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6465
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746d6567616c7461",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutmegalta\"",
                          "value": "nutmegalta"
                        },
                        "id": 6466,
                        "name": "Literal",
                        "src": "382:12:16"
                      }
                    ],
                    "id": 6467,
                    "name": "Return",
                    "src": "375:19:16"
                  }
                ],
                "id": 6468,
                "name": "Block",
                "src": "365:35:16"
              }
            ],
            "id": 6469,
            "name": "FunctionDefinition",
            "src": "287:113:16"
          }
        ],
        "id": 6470,
        "name": "ContractDefinition",
        "src": "215:187:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4627,
            6233,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6481,
            4627,
            6233,
            6362,
            8343
          ],
          "name": "NutmegAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Nutmeg",
                  "referencedDeclaration": 4627,
                  "type": "contract Nutmeg"
                },
                "id": 6471,
                "name": "UserDefinedTypeName",
                "src": "427:6:16"
              }
            ],
            "id": 6472,
            "name": "InheritanceSpecifier",
            "src": "427:6:16"
          },
          {
            "attributes": {
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6481,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6473,
                "name": "ParameterList",
                "src": "501:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6480,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6474,
                        "name": "ElementaryTypeName",
                        "src": "539:6:16"
                      }
                    ],
                    "id": 6475,
                    "name": "VariableDeclaration",
                    "src": "539:13:16"
                  }
                ],
                "id": 6476,
                "name": "ParameterList",
                "src": "538:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6476
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746d6567616c7462",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutmegaltb\"",
                          "value": "nutmegaltb"
                        },
                        "id": 6477,
                        "name": "Literal",
                        "src": "571:12:16"
                      }
                    ],
                    "id": 6478,
                    "name": "Return",
                    "src": "564:19:16"
                  }
                ],
                "id": 6479,
                "name": "Block",
                "src": "554:35:16"
              }
            ],
            "id": 6480,
            "name": "FunctionDefinition",
            "src": "476:113:16"
          }
        ],
        "id": 6481,
        "name": "ContractDefinition",
        "src": "404:187:16"
      },
      {
        "attributes": {
          "SourceUnit": 1346,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol",
          "file": "../NutDistributor.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6482,
        "name": "ImportDirective",
        "src": "593:31:16"
      },
      {
        "attributes": {
          "SourceUnit": 9138,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6483,
        "name": "ImportDirective",
        "src": "625:59:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1345,
            5969,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6495,
            1345,
            5969,
            6362,
            8343
          ],
          "name": "NutDistributorAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NutDistributor",
                  "referencedDeclaration": 1345,
                  "type": "contract NutDistributor"
                },
                "id": 6484,
                "name": "UserDefinedTypeName",
                "src": "835:14:16"
              }
            ],
            "id": 6485,
            "name": "InheritanceSpecifier",
            "src": "835:14:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                1344
              ],
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6495,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 6487,
                "name": "OverrideSpecifier",
                "src": "946:8:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6486,
                "name": "ParameterList",
                "src": "917:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6494,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6488,
                        "name": "ElementaryTypeName",
                        "src": "964:6:16"
                      }
                    ],
                    "id": 6489,
                    "name": "VariableDeclaration",
                    "src": "964:13:16"
                  }
                ],
                "id": 6490,
                "name": "ParameterList",
                "src": "963:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6490
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746469737472696275746f72616c7461",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutdistributoralta\"",
                          "value": "nutdistributoralta"
                        },
                        "id": 6491,
                        "name": "Literal",
                        "src": "996:20:16"
                      }
                    ],
                    "id": 6492,
                    "name": "Return",
                    "src": "989:27:16"
                  }
                ],
                "id": 6493,
                "name": "Block",
                "src": "979:43:16"
              }
            ],
            "id": 6494,
            "name": "FunctionDefinition",
            "src": "892:130:16"
          }
        ],
        "id": 6495,
        "name": "ContractDefinition",
        "src": "804:220:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1345,
            5969,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6507,
            1345,
            5969,
            6362,
            8343
          ],
          "name": "NutDistributorAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NutDistributor",
                  "referencedDeclaration": 1345,
                  "type": "contract NutDistributor"
                },
                "id": 6496,
                "name": "UserDefinedTypeName",
                "src": "1057:14:16"
              }
            ],
            "id": 6497,
            "name": "InheritanceSpecifier",
            "src": "1057:14:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                1344
              ],
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6507,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 6499,
                "name": "OverrideSpecifier",
                "src": "1168:8:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6498,
                "name": "ParameterList",
                "src": "1139:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6506,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6500,
                        "name": "ElementaryTypeName",
                        "src": "1186:6:16"
                      }
                    ],
                    "id": 6501,
                    "name": "VariableDeclaration",
                    "src": "1186:13:16"
                  }
                ],
                "id": 6502,
                "name": "ParameterList",
                "src": "1185:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6502
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746469737472696275746f72616c7462",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutdistributoraltb\"",
                          "value": "nutdistributoraltb"
                        },
                        "id": 6503,
                        "name": "Literal",
                        "src": "1218:20:16"
                      }
                    ],
                    "id": 6504,
                    "name": "Return",
                    "src": "1211:27:16"
                  }
                ],
                "id": 6505,
                "name": "Block",
                "src": "1201:43:16"
              }
            ],
            "id": 6506,
            "name": "FunctionDefinition",
            "src": "1114:130:16"
          }
        ],
        "id": 6507,
        "name": "ContractDefinition",
        "src": "1026:220:16"
      },
      {
        "attributes": {
          "SourceUnit": 7432,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol",
          "file": "./MockERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6508,
        "name": "ImportDirective",
        "src": "1248:25:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6514,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltA",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6509,
                "name": "UserDefinedTypeName",
                "src": "1301:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7441",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltA\"",
                  "value": "MockERC20AltA"
                },
                "id": 6510,
                "name": "Literal",
                "src": "1311:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5441",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTA\"",
                  "value": "MOCKERC20ALTA"
                },
                "id": 6511,
                "name": "Literal",
                "src": "1328:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 6512,
                "name": "Literal",
                "src": "1345:2:16"
              }
            ],
            "id": 6513,
            "name": "InheritanceSpecifier",
            "src": "1301:47:16"
          }
        ],
        "id": 6514,
        "name": "ContractDefinition",
        "src": "1275:77:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6520,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltB",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6515,
                "name": "UserDefinedTypeName",
                "src": "1380:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7442",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltB\"",
                  "value": "MockERC20AltB"
                },
                "id": 6516,
                "name": "Literal",
                "src": "1390:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5442",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTB\"",
                  "value": "MOCKERC20ALTB"
                },
                "id": 6517,
                "name": "Literal",
                "src": "1407:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 6518,
                "name": "Literal",
                "src": "1424:2:16"
              }
            ],
            "id": 6519,
            "name": "InheritanceSpecifier",
            "src": "1380:47:16"
          }
        ],
        "id": 6520,
        "name": "ContractDefinition",
        "src": "1354:77:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6526,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltC",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6521,
                "name": "UserDefinedTypeName",
                "src": "1459:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7443",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltC\"",
                  "value": "MockERC20AltC"
                },
                "id": 6522,
                "name": "Literal",
                "src": "1469:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5443",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTC\"",
                  "value": "MOCKERC20ALTC"
                },
                "id": 6523,
                "name": "Literal",
                "src": "1486:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "36",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 6",
                  "value": "6"
                },
                "id": 6524,
                "name": "Literal",
                "src": "1503:1:16"
              }
            ],
            "id": 6525,
            "name": "InheritanceSpecifier",
            "src": "1459:46:16"
          }
        ],
        "id": 6526,
        "name": "ContractDefinition",
        "src": "1433:76:16"
      },
      {
        "attributes": {
          "SourceUnit": 7395,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol",
          "file": "./MockCERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6527,
        "name": "ImportDirective",
        "src": "1511:26:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6542,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6528,
                "name": "UserDefinedTypeName",
                "src": "1566:14:16"
              }
            ],
            "id": 6529,
            "name": "InheritanceSpecifier",
            "src": "1566:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6542,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6530,
                        "name": "ElementaryTypeName",
                        "src": "1599:7:16"
                      }
                    ],
                    "id": 6531,
                    "name": "VariableDeclaration",
                    "src": "1599:17:16"
                  }
                ],
                "id": 6532,
                "name": "ParameterList",
                "src": "1598:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6539,
                "name": "ParameterList",
                "src": "1689:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6533,
                    "name": "Identifier",
                    "src": "1622:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6531,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6534,
                    "name": "Identifier",
                    "src": "1637:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7441",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltA\"",
                      "value": "MockCERC20 AltA"
                    },
                    "id": 6535,
                    "name": "Literal",
                    "src": "1648:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5441",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTA\"",
                      "value": "MOCKCERC20ALTA"
                    },
                    "id": 6536,
                    "name": "Literal",
                    "src": "1667:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 6537,
                    "name": "Literal",
                    "src": "1685:2:16"
                  }
                ],
                "id": 6538,
                "name": "ModifierInvocation",
                "src": "1622:66:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6540,
                "name": "Block",
                "src": "1689:7:16"
              }
            ],
            "id": 6541,
            "name": "FunctionDefinition",
            "src": "1587:109:16"
          }
        ],
        "id": 6542,
        "name": "ContractDefinition",
        "src": "1539:159:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6557,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6543,
                "name": "UserDefinedTypeName",
                "src": "1726:14:16"
              }
            ],
            "id": 6544,
            "name": "InheritanceSpecifier",
            "src": "1726:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6557,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6556,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6545,
                        "name": "ElementaryTypeName",
                        "src": "1759:7:16"
                      }
                    ],
                    "id": 6546,
                    "name": "VariableDeclaration",
                    "src": "1759:17:16"
                  }
                ],
                "id": 6547,
                "name": "ParameterList",
                "src": "1758:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6554,
                "name": "ParameterList",
                "src": "1849:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6548,
                    "name": "Identifier",
                    "src": "1782:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6546,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6549,
                    "name": "Identifier",
                    "src": "1797:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7442",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltB\"",
                      "value": "MockCERC20 AltB"
                    },
                    "id": 6550,
                    "name": "Literal",
                    "src": "1808:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5442",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTB\"",
                      "value": "MOCKCERC20ALTB"
                    },
                    "id": 6551,
                    "name": "Literal",
                    "src": "1827:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 6552,
                    "name": "Literal",
                    "src": "1845:2:16"
                  }
                ],
                "id": 6553,
                "name": "ModifierInvocation",
                "src": "1782:66:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6555,
                "name": "Block",
                "src": "1849:7:16"
              }
            ],
            "id": 6556,
            "name": "FunctionDefinition",
            "src": "1747:109:16"
          }
        ],
        "id": 6557,
        "name": "ContractDefinition",
        "src": "1699:159:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6572,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltC",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6558,
                "name": "UserDefinedTypeName",
                "src": "1886:14:16"
              }
            ],
            "id": 6559,
            "name": "InheritanceSpecifier",
            "src": "1886:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6572,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6571,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6560,
                        "name": "ElementaryTypeName",
                        "src": "1919:7:16"
                      }
                    ],
                    "id": 6561,
                    "name": "VariableDeclaration",
                    "src": "1919:17:16"
                  }
                ],
                "id": 6562,
                "name": "ParameterList",
                "src": "1918:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6569,
                "name": "ParameterList",
                "src": "2008:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6563,
                    "name": "Identifier",
                    "src": "1942:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6561,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6564,
                    "name": "Identifier",
                    "src": "1957:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltC\"",
                      "value": "MockCERC20 AltC"
                    },
                    "id": 6565,
                    "name": "Literal",
                    "src": "1968:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTC\"",
                      "value": "MOCKCERC20ALTC"
                    },
                    "id": 6566,
                    "name": "Literal",
                    "src": "1987:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "36",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 6",
                      "value": "6"
                    },
                    "id": 6567,
                    "name": "Literal",
                    "src": "2005:1:16"
                  }
                ],
                "id": 6568,
                "name": "ModifierInvocation",
                "src": "1942:65:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6570,
                "name": "Block",
                "src": "2008:7:16"
              }
            ],
            "id": 6571,
            "name": "FunctionDefinition",
            "src": "1907:108:16"
          }
        ],
        "id": 6572,
        "name": "ContractDefinition",
        "src": "1859:158:16"
      },
      {
        "attributes": {
          "SourceUnit": 5819,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol",
          "file": "../adapters/CompoundAdapter.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6573,
        "name": "ImportDirective",
        "src": "2019:41:16"
      },
      {
        "attributes": {
          "SourceUnit": 6234,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol",
          "file": "../interfaces/INutmeg.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6574,
        "name": "ImportDirective",
        "src": "2061:35:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5818,
            5881,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6586,
            5818,
            5881,
            6362,
            8343
          ],
          "name": "CompoundAdapterAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "CompoundAdapter",
                  "referencedDeclaration": 5818,
                  "type": "contract CompoundAdapter"
                },
                "id": 6575,
                "name": "UserDefinedTypeName",
                "src": "2129:15:16"
              }
            ],
            "id": 6576,
            "name": "InheritanceSpecifier",
            "src": "2129:15:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6586,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nutmegAddr",
                      "scope": 6585,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract INutmeg",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "INutmeg",
                          "referencedDeclaration": 6233,
                          "type": "contract INutmeg"
                        },
                        "id": 6577,
                        "name": "UserDefinedTypeName",
                        "src": "2163:7:16"
                      }
                    ],
                    "id": 6578,
                    "name": "VariableDeclaration",
                    "src": "2163:18:16"
                  }
                ],
                "id": 6579,
                "name": "ParameterList",
                "src": "2162:20:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6583,
                "name": "ParameterList",
                "src": "2211:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5818,
                      "type": "type(contract CompoundAdapter)",
                      "value": "CompoundAdapter"
                    },
                    "id": 6580,
                    "name": "Identifier",
                    "src": "2183:15:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6578,
                      "type": "contract INutmeg",
                      "value": "nutmegAddr"
                    },
                    "id": 6581,
                    "name": "Identifier",
                    "src": "2199:10:16"
                  }
                ],
                "id": 6582,
                "name": "ModifierInvocation",
                "src": "2183:27:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6584,
                "name": "Block",
                "src": "2211:7:16"
              }
            ],
            "id": 6585,
            "name": "FunctionDefinition",
            "src": "2151:67:16"
          }
        ],
        "id": 6586,
        "name": "ContractDefinition",
        "src": "2097:123:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5818,
            5881,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6598,
            5818,
            5881,
            6362,
            8343
          ],
          "name": "CompoundAdapterAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "CompoundAdapter",
                  "referencedDeclaration": 5818,
                  "type": "contract CompoundAdapter"
                },
                "id": 6587,
                "name": "UserDefinedTypeName",
                "src": "2254:15:16"
              }
            ],
            "id": 6588,
            "name": "InheritanceSpecifier",
            "src": "2254:15:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6598,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nutmegAddr",
                      "scope": 6597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract INutmeg",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "INutmeg",
                          "referencedDeclaration": 6233,
                          "type": "contract INutmeg"
                        },
                        "id": 6589,
                        "name": "UserDefinedTypeName",
                        "src": "2288:7:16"
                      }
                    ],
                    "id": 6590,
                    "name": "VariableDeclaration",
                    "src": "2288:18:16"
                  }
                ],
                "id": 6591,
                "name": "ParameterList",
                "src": "2287:20:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6595,
                "name": "ParameterList",
                "src": "2336:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5818,
                      "type": "type(contract CompoundAdapter)",
                      "value": "CompoundAdapter"
                    },
                    "id": 6592,
                    "name": "Identifier",
                    "src": "2308:15:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6590,
                      "type": "contract INutmeg",
                      "value": "nutmegAddr"
                    },
                    "id": 6593,
                    "name": "Identifier",
                    "src": "2324:10:16"
                  }
                ],
                "id": 6594,
                "name": "ModifierInvocation",
                "src": "2308:27:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6596,
                "name": "Block",
                "src": "2336:7:16"
              }
            ],
            "id": 6597,
            "name": "FunctionDefinition",
            "src": "2276:67:16"
          }
        ],
        "id": 6598,
        "name": "ContractDefinition",
        "src": "2222:123:16"
      }
    ],
    "id": 6599,
    "name": "SourceUnit",
    "src": "33:2313:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xe2340841B939de4a4FB559e4C46b3B3a9bCD69EF",
      "transactionHash": "0x383c263d736c8414b7ed739fbe2078d202f433ae0245966d188a78f2312fb438"
    },
    "1619955814413": {
      "events": {},
      "links": {},
      "address": "0x047D13c257A5007e779197F6143190d669A4ee92",
      "transactionHash": "0xc945688196d8f74f508ee90095ac14addcdbdee46d4cd29bc041fa68ed461135"
    },
    "1619955875320": {
      "events": {},
      "links": {},
      "address": "0x5eD936E702D28f7a422F428aBE79E8670554ca19",
      "transactionHash": "0xeabf26c3405f506ce1b7aeb3e8bb8a5ae73245300a1273d19cfb109976908c3c"
    },
    "1620017498392": {
      "events": {},
      "links": {},
      "address": "0x047D13c257A5007e779197F6143190d669A4ee92",
      "transactionHash": "0xc945688196d8f74f508ee90095ac14addcdbdee46d4cd29bc041fa68ed461135"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-04T05:14:42.026Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}