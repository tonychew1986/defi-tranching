{
  "contractName": "TestNutDistributor",
  "abi": [
    {
      "inputs": [],
      "name": "BLOCKS_PER_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CURRENT_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DIST_MIN_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DIST_START_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DIST_START_BLOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_NUM_POOLS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUM_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "distCompletionMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "echoMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCollectionAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getTotalVtb",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getVtb",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inNutDistribution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nut",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nutmeg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setNutmegAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalNutMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalVtbMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "incAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decAmount",
          "type": "uint256"
        }
      ],
      "name": "updateVtb",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vtbMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nutAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blocks_per_epoch",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nutAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BLOCKS_PER_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURRENT_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_MIN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_START_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_START_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUM_POOLS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distCompletionMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"echoMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getTotalVtb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getVtb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inNutDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nutAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blocks_per_epoch\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nutAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nut\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nutmeg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setNutmegAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setPendingGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalNutMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalVtbMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"incAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decAmount\",\"type\":\"uint256\"}],\"name\":\"updateVtb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vtbMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGovernor()\":{\"details\":\"Accept to become the new governor. Must be called by the pending governor.\"},\"collect()\":{\"details\":\"Collect Nut tokens\"},\"distribute()\":{\"details\":\"Distribute NUT tokens for the previous epoch\"},\"getCollectionAmount()\":{\"details\":\"getCollectionAmount get the # of NUT tokens for collection\"},\"setNutmegAddress(address)\":{\"details\":\"Set the Nutmeg\"},\"setPendingGovernor(address)\":{\"details\":\"Set the pending governor, which will be the governor once accepted.\",\"params\":{\"addr\":\"The address of the pending governor.\"}},\"setPriceOracle(address)\":{\"details\":\"Set the oracle\"},\"updateVtb(address,address,uint256,uint256)\":{\"params\":{\"decAmount\":\"false=subtract/unstake true=add/stake\",\"incAmount\":\"to stake or unstake\",\"lender\":\"Address of the lender.\",\"token\":\"Base token of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateVtb(address,address,uint256,uint256)\":{\"notice\":\"Update valueTimesBlocks of pools and the lender when they stake or unstake\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/joe/local2/bench/git/nutmeg/contracts/mock/TestNutDistributor.sol\":\"TestNutDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/joe/local2/bench/git/nutmeg/contracts/NutDistributor.sol\":{\"keccak256\":\"0x164fa287cb7f0833d47f213c6563aac0c2f61a1f46575fbbadf7b030e3368721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bd4bd70c797afc8d134241311274a0bb1dfa311740d68363e86fdead06c205\",\"dweb:/ipfs/QmUeX8gZtoevYfimGeFeoC6os11fvVP2NAH2KjZ1HovgJo\"]},\"/home/joe/local2/bench/git/nutmeg/contracts/interfaces/INut.sol\":{\"keccak256\":\"0x51a91900051435bf5db864c8c5b571534bc8c7c82ec8fe87c89b8fbb5446d3d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5fba848914fff401fe817f8817653db61e16b79737a73961ce7d7f21903a920\",\"dweb:/ipfs/QmSXoiFF79SrLwePefJ3dpabAG6jyZVuWu6jnFJyaPDf2g\"]},\"/home/joe/local2/bench/git/nutmeg/contracts/interfaces/INutDistributor.sol\":{\"keccak256\":\"0x441750edaefb061efe22deb9a76b990daa208488544010e2a7e9c792c12982f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b4ddc07e6e3b612a5ec6331bfa4ae6d50d5fe9a5176dfb092c9eff57974d7c3\",\"dweb:/ipfs/QmSphPKxWJJubH7H1Bwz9VEmhmNmJf82d8GP4DqkDn7yJS\"]},\"/home/joe/local2/bench/git/nutmeg/contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x1e35d99985588565937c6e0f0ac288dcff45b706bb5d68aacb3d2ff78568cbaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a038862ece49ded74cb16890cfd008ab1881e0974f001e7dfba06d7dbdf0b57b\",\"dweb:/ipfs/Qma9HfzmKHBhVM3waiQ3brWqcRUJhiFpKj9x84rdfL9a2T\"]},\"/home/joe/local2/bench/git/nutmeg/contracts/lib/Governable.sol\":{\"keccak256\":\"0xc1b72d60ccb557e1bb582518ecc6c585399c0725dc9e3eed7a36c496985931ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e8db0b1250fb94ebe9ac42c4d120cdcbc469a04d2b39e820eb086bf436288cc\",\"dweb:/ipfs/QmS5kkFnLrSpRZbgWXfNftEobpDqvNZiAaidZ7rcjDxpuH\"]},\"/home/joe/local2/bench/git/nutmeg/contracts/mock/TestNutDistributor.sol\":{\"keccak256\":\"0xcce6a5426aa37492868d40997f9d334b5ed239ad788c7e6a53589635862d5542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cb1c208736afe7fa1abdbe176c4427c443b013de1221aa698e3e6995b76b1b9\",\"dweb:/ipfs/QmeqJu244Fz2v2YsDhghaW5ouz25t9u68kVNtYAjg9bHKd\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0x9abeffe138f098b16557187383ba0f9e8503602fa95cd668132986ee115237ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb863d688f8bf04b846369451afba15e8129b2ee16bd1631c12138c262d1bf68\",\"dweb:/ipfs/QmRE3EmJ1T4Hg5HjGHVupP2a3Vrnd8jRY8GtB6J52QNX9z\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061221a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063625372db1161010f578063ad8102fa116100a2578063e4fc6b6d11610071578063e4fc6b6d146103b2578063e5225381146103ba578063e58bb639146103c2578063f235757f146103ca576101f0565b8063ad8102fa1461037c578063bf47c26414610384578063d44b7af114610397578063e3056a34146103aa576101f0565b80638b159cee116100de5780638b159cee1461033b5780639107a25f1461034e578063960874d814610356578063ac4afa3814610369576101f0565b8063625372db14610310578063656d565e14610323578063763f31a21461032b5780637dc0d1d014610333576101f0565b80632c6bb55411610187578063485cc95511610156578063485cc955146102b55780634ce41ac0146102c85780634d24cff0146102ea578063530e784f146102fd576101f0565b80632c6bb5541461028a578063325140ea146102925780633d02df6f1461029a5780633fde3f9f146102a2576101f0565b806315d3b7a0116101c357806315d3b7a01461025d5780631794bb3c146102655780631f3adc0f1461027a5780632962420714610282576101f0565b80630374119e146101f557806305b540f2146102135780630c340a2414610228578063153173d61461023d575b600080fd5b6101fd6103dd565b60405161020a919061205d565b60405180910390f35b61021b6103eb565b60405161020a919061200a565b610230610414565b60405161020a9190611feb565b61025061024b366004611fd3565b610429565b60405161020a9190611fff565b61023061043e565b610278610273366004611f2e565b61044d565b005b6101fd6105a3565b6101fd6105a9565b6101fd6105af565b6101fd610710565b610250610716565b6101fd6102b0366004611faa565b61073f565b6102786102c3366004611efc565b610764565b6102db6102d6366004611fd3565b6108b6565b60405161020a93929190612066565b6101fd6102f8366004611faa565b6108d7565b61027861030b366004611ee2565b61098d565b61027861031e366004611f69565b6109fe565b610230610efb565b6101fd610f0a565b610230610f10565b6101fd610349366004611faa565b610f1f565b6101fd610f3b565b6101fd610364366004611f2e565b610f40565b610230610377366004611fd3565b611017565b6101fd611041565b6101fd610392366004611f2e565b61104f565b6102786103a5366004611ee2565b611081565b6102306110f2565b610278611101565b6102786115f3565b6102786119cf565b6102786103d8366004611ee2565b611a43565b6934f086f3b33b6840000081565b60408051808201909152600f81526e3a32b9ba17373aba3234b9ba3934b160891b602082015290565b6000546201000090046001600160a01b031681565b600b6020526000908152604090205460ff1681565b6003546001600160a01b031681565b600054610100900460ff16806104665750610466611ab4565b80610474575060005460ff16155b6104af5760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff161580156104da576000805460ff1961ff0019909116610100171660011790555b6104e48484610764565b600682905560005b600f81101561058a576000818152600a60205260409020818155610529610520610517846001611ac5565b60065490611b1f565b60055490611ac5565b8160010181905550600061055b61054a600185611ac590919063ffffffff16565b6934f086f3b33b6840000090611b78565b90506903f870857a3e0e38000081101561057c57506903f870857a3e0e3800005b6002909101556001016104ec565b50801561059d576000805461ff00191690555b50505050565b60065481565b60075481565b6000806105d36006546105cd60055443611bdf90919063ffffffff16565b90611b78565b9050600081116106145760405162461bcd60e51b815260040180806020018281038252602e815260200180612143602e913960400191505060405180910390fd5b60095433906000906101001161062c57610100610630565b6009545b90506000805b828110156107075760006009828154811061064d57fe5b60009182526020822001546001600160a01b031691505b86811080156106735750600f81105b156106fd576000610685838884610f40565b90506000811180156106a05750600061069e84846108d7565b115b156106f45760006106e46106b485856108d7565b6001600160a01b0386166000908152600d602052604090206105cd9086600f81106106db57fe5b01548590611b1f565b90506106f08682611ac5565b9550505b50600101610664565b5050600101610636565b50935050505090565b60055481565b6000600554431015801561073a57506006546107379061052090600f611b1f565b43105b905090565b600c60205281600052604060002081600f811061075b57600080fd5b01549150829050565b600054610100900460ff168061077d575061077d611ab4565b8061078b575060005460ff16155b6107c65760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff161580156107f1576000805460ff1961ff0019909116610100171660011790555b600380546001600160a01b0319166001600160a01b0385161790554360055562013b0060065561082082611c3c565b60005b600f81101561089e576000818152600a6020526040902081815561084e610520610517846001611ac5565b8160010181905550600061086f61054a600185611ac590919063ffffffff16565b90506903f870857a3e0e38000081101561089057506903f870857a3e0e3800005b600290910155600101610823565b5080156108b1576000805461ff00191690555b505050565b600a6020526000908152604090208054600182015460029092015490919083565b6000600f8210610921576040805162461bcd60e51b815260206004820152601060248201526f3a37ba30b62b3a311034b23c1032b93960811b604482015290519081900360640190fd5b6001600160a01b038316600090815260116020526040902054821061095e576001600160a01b0383166000908152600f6020526040902054610984565b6001600160a01b0383166000908152600c6020526040902082600f811061098157fe5b01545b90505b92915050565b6000546201000090046001600160a01b031633146109dc576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610a54576040805162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b9d5d1b5959c818d85b8818d85b1b60621b604482015290519081900360640190fd5b600554431015610aab576040805162461bcd60e51b815260206004820152601f60248201527f7570646174655674623a20696e76616c696420626c6f636b206e756d62657200604482015290519081900360640190fd5b811580610ab6575080155b610af15760405162461bcd60e51b81526004018080602001828103825260238152602001806121716023913960400191505060405180910390fd5b6000610afd8383611ac5565b905060008111610b3e5760405162461bcd60e51b815260040180806020018281038252602b81526020018061209f602b913960400191505060405180910390fd5b610b596006546105cd60055443611bdf90919063ffffffff16565b6007819055600f11610b6b575061059d565b610b758585611d01565b610b7e85611e01565b6007546000908152600a6020526040812060010154610ba9908390610ba39043611bdf565b90611b1f565b90506000610bc283600654611b1f90919063ffffffff16565b90508415610d1e576001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610c0a918491600f8110610c0257fe5b015490611ac5565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610c3c57fe5b01556001600160a01b0387166000908152600c60205260409020600754610c69918491600f8110610c0257fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610c8e57fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610cc09082611ac5565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610d009082611ac5565b6001600160a01b0388166000908152600f6020526040902055610e6e565b6001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610d5e918491600f8110610d5657fe5b015490611bdf565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610d9057fe5b01556001600160a01b0387166000908152600c60205260409020600754610dbd918491600f8110610d5657fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610de257fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610e149082611bdf565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610e549082611bdf565b6001600160a01b0388166000908152600f60205260409020555b6001600160a01b03871660009081526008602052604090205460ff16610ef2576009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b038a169081179091556000908152600860205260409020805460ff191690911790555b50505050505050565b6002546001600160a01b031681565b61010081565b6004546001600160a01b031681565b600d60205281600052604060002081600f811061075b57600080fd5b600f81565b6000600f8210610f85576040805162461bcd60e51b815260206004820152600b60248201526a3b3a311034b23c1032b93960a91b604482015290519081900360640190fd5b6001600160a01b038085166000908152601260209081526040808320938716835292905220548210610fdc576001600160a01b0380851660009081526010602090815260408083209387168352929052205461100f565b6001600160a01b038085166000908152600e6020908152604080832093871683529290522082600f811061100c57fe5b01545b949350505050565b6009818154811061102757600080fd5b6000918252602090912001546001600160a01b0316905081565b6903f870857a3e0e38000081565b600e60205282600052604060002060205281600052604060002081600f811061107757600080fd5b0154925083915050565b6000546201000090046001600160a01b031633146110d0576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546201000090046001600160a01b03163314611150576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b6004546001600160a01b03166111ad576040805162461bcd60e51b815260206004820152601f60248201527f646973747269627574653a206e6f206f7261636c6520617661696c61626c6500604482015290519081900360640190fd5b60006111ca6006546105cd60055443611bdf90919063ffffffff16565b90506000811161120b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806121b9602c913960400191505060405180910390fd5b611217600f6001611ac5565b81106112545760405162461bcd60e51b815260040180806020018281038252602a815260200180612119602a913960400191505060405180910390fd5b6000611261826001611bdf565b6000818152600b602052604090205490915060ff16156112b25760405162461bcd60e51b81526004018080602001828103825260258152602001806121946025913960400191505060405180910390fd5b6000818152600a60205260408082206002015460035482516340c10f1960e01b815230600482015260248101839052925191936001600160a01b03909116926340c10f19926044808301939282900301818387803b15801561131357600080fd5b505af1158015611327573d6000803e3d6000fd5b5050505060006101006009805490501061134357610100611347565b6009545b905060008060005b8381101561144b57600454600980546000926001600160a01b0316916341976e09918590811061137b57fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b1580156113c957600080fd5b505afa1580156113dd573d6000803e3d6000fd5b505050506040513d60208110156113f357600080fd5b5051600980549192506000916114339161142c918690811061141157fe5b6000918252602090912001546001600160a01b03168a6108d7565b8390611b1f565b905061143f8582611ac5565b9450505060010161134f565b5081156115875760005b8381101561158557600454600980546000926001600160a01b0316916341976e09918590811061148157fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b1580156114cf57600080fd5b505afa1580156114e3573d6000803e3d6000fd5b505050506040513d60208110156114f957600080fd5b5051600980549192506000916115179161142c918690811061141157fe5b90506000611529866105cd848b611b1f565b90506115358582611ac5565b945080600d60006009878154811061154957fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190208a600f811061157857fe5b0155505050600101611455565b505b838111156115d3576040805162461bcd60e51b8152602060048201526014602482015273646973747269627574653a206f766572666c6f7760601b604482015290519081900360640190fd5b505050600091825250600b60205260409020805460ff1916600117905550565b60006116106006546105cd60055443611bdf90919063ffffffff16565b9050600081116116515760405162461bcd60e51b815260040180806020018281038252602281526020018061207d6022913960400191505060405180910390fd5b6009543390600090610100116116695761010061166d565b6009545b90506000805b8281101561174a5760006009828154811061168a57fe5b60009182526020822001546001600160a01b031691505b86811080156116b05750600f81105b156117405760006116c2838884610f40565b90506000811180156116dd575060006116db84846108d7565b115b156117375760006116f16106b485856108d7565b90506116fd8682611ac5565b6001600160a01b038086166000908152600e60209081526040808320938d1683529290529081209197509084600f811061173357fe5b0155505b506001016116a1565b5050600101611673565b50801561059d576003546040805163095ea7b360e01b815230600482015260006024820181905291516001600160a01b039093169263095ea7b392604480840193602093929083900390910190829087803b1580156117a857600080fd5b505af11580156117bc573d6000803e3d6000fd5b505050506040513d60208110156117d257600080fd5b5051611825576040805162461bcd60e51b815260206004820152601a60248201527f6469737472696275746f7220617070726f7665206661696c6564000000000000604482015290519081900360640190fd5b6003546040805163095ea7b360e01b81523060048201526024810184905290516001600160a01b039092169163095ea7b3916044808201926020929091908290030181600087803b15801561187957600080fd5b505af115801561188d573d6000803e3d6000fd5b505050506040513d60208110156118a357600080fd5b50516118f6576040805162461bcd60e51b815260206004820152601d60248201527f4e75744469737420617070726f766520616d6f756e74206661696c6564000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523060048201526001600160a01b03868116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561195257600080fd5b505af1158015611966573d6000803e3d6000fd5b505050506040513d602081101561197c57600080fd5b505161059d576040805162461bcd60e51b815260206004820152601760248201527f4e757444697374207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b6001546001600160a01b03163314611a18576040805162461bcd60e51b81526020600482015260076024820152661b9bc81c195b9960ca1b604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000002179055565b6000546201000090046001600160a01b03163314611a92576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000611abf30611ec1565b15905090565b600082820183811015610984576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b2e57506000610987565b82820282848281611b3b57fe5b04146109845760405162461bcd60e51b81526004018080602001828103825260218152602001806120f86021913960400191505060405180910390fd5b6000808211611bce576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611bd757fe5b049392505050565b600082821115611c36576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600054610100900460ff1680611c555750611c55611ab4565b80611c63575060005460ff16155b611c9e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff16158015611cc9576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015611cfd576000805461ff00191690555b5050565b6007546001600160a01b038084166000908152601260209081526040808320938616835292905220541180611d395750600f60075410155b15611d4357611cfd565b6001600160a01b038083166000818152601060209081526040808320948616808452948252808320549383526012825280832094835293905291909120545b6007548111611dc7576001600160a01b038085166000908152600e60209081526040808320938716835292905220829082600f8110611dbd57fe5b0155600101611d82565b50600754611dd6906001611ac5565b6001600160a01b03808516600090815260126020908152604080832093871683529290522055505050565b6007546001600160a01b0382166000908152601160205260409020541180611e2c5750600f60075410155b15611e3657611ebe565b6001600160a01b0381166000908152600f60209081526040808320546011909252909120545b6007548111611e94576001600160a01b0383166000908152600c60205260409020829082600f8110611e8a57fe5b0155600101611e5c565b50600754611ea3906001611ac5565b6001600160a01b038316600090815260116020526040902055505b50565b803b15155b919050565b80356001600160a01b0381168114611ec657600080fd5b600060208284031215611ef3578081fd5b61098482611ecb565b60008060408385031215611f0e578081fd5b611f1783611ecb565b9150611f2560208401611ecb565b90509250929050565b600080600060608486031215611f42578081fd5b611f4b84611ecb565b9250611f5960208501611ecb565b9150604084013590509250925092565b60008060008060808587031215611f7e578081fd5b611f8785611ecb565b9350611f9560208601611ecb565b93969395505050506040820135916060013590565b60008060408385031215611fbc578182fd5b611fc583611ecb565b946020939093013593505050565b600060208284031215611fe4578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156120365785810183015185820160400152820161201a565b818111156120475783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b928352602083019190915260408201526060019056fe636f6c6c6563743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e742073686f756c6420626520706f736974697665496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206973206f766572676574436f6c6c656374696f6e416d6f756e743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e7420697320696e76616c6964646973747269627574653a20646973747269627574696f6e20697320636f6d706c65746564646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206e6f74207265616479a264697066735822122049588ad6861f3f8fb5b30af5cb1284698cf2b58cea8b3676b5f28384fcf530aa64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c8063625372db1161010f578063ad8102fa116100a2578063e4fc6b6d11610071578063e4fc6b6d146103b2578063e5225381146103ba578063e58bb639146103c2578063f235757f146103ca576101f0565b8063ad8102fa1461037c578063bf47c26414610384578063d44b7af114610397578063e3056a34146103aa576101f0565b80638b159cee116100de5780638b159cee1461033b5780639107a25f1461034e578063960874d814610356578063ac4afa3814610369576101f0565b8063625372db14610310578063656d565e14610323578063763f31a21461032b5780637dc0d1d014610333576101f0565b80632c6bb55411610187578063485cc95511610156578063485cc955146102b55780634ce41ac0146102c85780634d24cff0146102ea578063530e784f146102fd576101f0565b80632c6bb5541461028a578063325140ea146102925780633d02df6f1461029a5780633fde3f9f146102a2576101f0565b806315d3b7a0116101c357806315d3b7a01461025d5780631794bb3c146102655780631f3adc0f1461027a5780632962420714610282576101f0565b80630374119e146101f557806305b540f2146102135780630c340a2414610228578063153173d61461023d575b600080fd5b6101fd6103dd565b60405161020a919061205d565b60405180910390f35b61021b6103eb565b60405161020a919061200a565b610230610414565b60405161020a9190611feb565b61025061024b366004611fd3565b610429565b60405161020a9190611fff565b61023061043e565b610278610273366004611f2e565b61044d565b005b6101fd6105a3565b6101fd6105a9565b6101fd6105af565b6101fd610710565b610250610716565b6101fd6102b0366004611faa565b61073f565b6102786102c3366004611efc565b610764565b6102db6102d6366004611fd3565b6108b6565b60405161020a93929190612066565b6101fd6102f8366004611faa565b6108d7565b61027861030b366004611ee2565b61098d565b61027861031e366004611f69565b6109fe565b610230610efb565b6101fd610f0a565b610230610f10565b6101fd610349366004611faa565b610f1f565b6101fd610f3b565b6101fd610364366004611f2e565b610f40565b610230610377366004611fd3565b611017565b6101fd611041565b6101fd610392366004611f2e565b61104f565b6102786103a5366004611ee2565b611081565b6102306110f2565b610278611101565b6102786115f3565b6102786119cf565b6102786103d8366004611ee2565b611a43565b6934f086f3b33b6840000081565b60408051808201909152600f81526e3a32b9ba17373aba3234b9ba3934b160891b602082015290565b6000546201000090046001600160a01b031681565b600b6020526000908152604090205460ff1681565b6003546001600160a01b031681565b600054610100900460ff16806104665750610466611ab4565b80610474575060005460ff16155b6104af5760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff161580156104da576000805460ff1961ff0019909116610100171660011790555b6104e48484610764565b600682905560005b600f81101561058a576000818152600a60205260409020818155610529610520610517846001611ac5565b60065490611b1f565b60055490611ac5565b8160010181905550600061055b61054a600185611ac590919063ffffffff16565b6934f086f3b33b6840000090611b78565b90506903f870857a3e0e38000081101561057c57506903f870857a3e0e3800005b6002909101556001016104ec565b50801561059d576000805461ff00191690555b50505050565b60065481565b60075481565b6000806105d36006546105cd60055443611bdf90919063ffffffff16565b90611b78565b9050600081116106145760405162461bcd60e51b815260040180806020018281038252602e815260200180612143602e913960400191505060405180910390fd5b60095433906000906101001161062c57610100610630565b6009545b90506000805b828110156107075760006009828154811061064d57fe5b60009182526020822001546001600160a01b031691505b86811080156106735750600f81105b156106fd576000610685838884610f40565b90506000811180156106a05750600061069e84846108d7565b115b156106f45760006106e46106b485856108d7565b6001600160a01b0386166000908152600d602052604090206105cd9086600f81106106db57fe5b01548590611b1f565b90506106f08682611ac5565b9550505b50600101610664565b5050600101610636565b50935050505090565b60055481565b6000600554431015801561073a57506006546107379061052090600f611b1f565b43105b905090565b600c60205281600052604060002081600f811061075b57600080fd5b01549150829050565b600054610100900460ff168061077d575061077d611ab4565b8061078b575060005460ff16155b6107c65760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff161580156107f1576000805460ff1961ff0019909116610100171660011790555b600380546001600160a01b0319166001600160a01b0385161790554360055562013b0060065561082082611c3c565b60005b600f81101561089e576000818152600a6020526040902081815561084e610520610517846001611ac5565b8160010181905550600061086f61054a600185611ac590919063ffffffff16565b90506903f870857a3e0e38000081101561089057506903f870857a3e0e3800005b600290910155600101610823565b5080156108b1576000805461ff00191690555b505050565b600a6020526000908152604090208054600182015460029092015490919083565b6000600f8210610921576040805162461bcd60e51b815260206004820152601060248201526f3a37ba30b62b3a311034b23c1032b93960811b604482015290519081900360640190fd5b6001600160a01b038316600090815260116020526040902054821061095e576001600160a01b0383166000908152600f6020526040902054610984565b6001600160a01b0383166000908152600c6020526040902082600f811061098157fe5b01545b90505b92915050565b6000546201000090046001600160a01b031633146109dc576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610a54576040805162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b9d5d1b5959c818d85b8818d85b1b60621b604482015290519081900360640190fd5b600554431015610aab576040805162461bcd60e51b815260206004820152601f60248201527f7570646174655674623a20696e76616c696420626c6f636b206e756d62657200604482015290519081900360640190fd5b811580610ab6575080155b610af15760405162461bcd60e51b81526004018080602001828103825260238152602001806121716023913960400191505060405180910390fd5b6000610afd8383611ac5565b905060008111610b3e5760405162461bcd60e51b815260040180806020018281038252602b81526020018061209f602b913960400191505060405180910390fd5b610b596006546105cd60055443611bdf90919063ffffffff16565b6007819055600f11610b6b575061059d565b610b758585611d01565b610b7e85611e01565b6007546000908152600a6020526040812060010154610ba9908390610ba39043611bdf565b90611b1f565b90506000610bc283600654611b1f90919063ffffffff16565b90508415610d1e576001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610c0a918491600f8110610c0257fe5b015490611ac5565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610c3c57fe5b01556001600160a01b0387166000908152600c60205260409020600754610c69918491600f8110610c0257fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610c8e57fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610cc09082611ac5565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610d009082611ac5565b6001600160a01b0388166000908152600f6020526040902055610e6e565b6001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610d5e918491600f8110610d5657fe5b015490611bdf565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610d9057fe5b01556001600160a01b0387166000908152600c60205260409020600754610dbd918491600f8110610d5657fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610de257fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610e149082611bdf565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610e549082611bdf565b6001600160a01b0388166000908152600f60205260409020555b6001600160a01b03871660009081526008602052604090205460ff16610ef2576009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b038a169081179091556000908152600860205260409020805460ff191690911790555b50505050505050565b6002546001600160a01b031681565b61010081565b6004546001600160a01b031681565b600d60205281600052604060002081600f811061075b57600080fd5b600f81565b6000600f8210610f85576040805162461bcd60e51b815260206004820152600b60248201526a3b3a311034b23c1032b93960a91b604482015290519081900360640190fd5b6001600160a01b038085166000908152601260209081526040808320938716835292905220548210610fdc576001600160a01b0380851660009081526010602090815260408083209387168352929052205461100f565b6001600160a01b038085166000908152600e6020908152604080832093871683529290522082600f811061100c57fe5b01545b949350505050565b6009818154811061102757600080fd5b6000918252602090912001546001600160a01b0316905081565b6903f870857a3e0e38000081565b600e60205282600052604060002060205281600052604060002081600f811061107757600080fd5b0154925083915050565b6000546201000090046001600160a01b031633146110d0576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546201000090046001600160a01b03163314611150576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b6004546001600160a01b03166111ad576040805162461bcd60e51b815260206004820152601f60248201527f646973747269627574653a206e6f206f7261636c6520617661696c61626c6500604482015290519081900360640190fd5b60006111ca6006546105cd60055443611bdf90919063ffffffff16565b90506000811161120b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806121b9602c913960400191505060405180910390fd5b611217600f6001611ac5565b81106112545760405162461bcd60e51b815260040180806020018281038252602a815260200180612119602a913960400191505060405180910390fd5b6000611261826001611bdf565b6000818152600b602052604090205490915060ff16156112b25760405162461bcd60e51b81526004018080602001828103825260258152602001806121946025913960400191505060405180910390fd5b6000818152600a60205260408082206002015460035482516340c10f1960e01b815230600482015260248101839052925191936001600160a01b03909116926340c10f19926044808301939282900301818387803b15801561131357600080fd5b505af1158015611327573d6000803e3d6000fd5b5050505060006101006009805490501061134357610100611347565b6009545b905060008060005b8381101561144b57600454600980546000926001600160a01b0316916341976e09918590811061137b57fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b1580156113c957600080fd5b505afa1580156113dd573d6000803e3d6000fd5b505050506040513d60208110156113f357600080fd5b5051600980549192506000916114339161142c918690811061141157fe5b6000918252602090912001546001600160a01b03168a6108d7565b8390611b1f565b905061143f8582611ac5565b9450505060010161134f565b5081156115875760005b8381101561158557600454600980546000926001600160a01b0316916341976e09918590811061148157fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b1580156114cf57600080fd5b505afa1580156114e3573d6000803e3d6000fd5b505050506040513d60208110156114f957600080fd5b5051600980549192506000916115179161142c918690811061141157fe5b90506000611529866105cd848b611b1f565b90506115358582611ac5565b945080600d60006009878154811061154957fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190208a600f811061157857fe5b0155505050600101611455565b505b838111156115d3576040805162461bcd60e51b8152602060048201526014602482015273646973747269627574653a206f766572666c6f7760601b604482015290519081900360640190fd5b505050600091825250600b60205260409020805460ff1916600117905550565b60006116106006546105cd60055443611bdf90919063ffffffff16565b9050600081116116515760405162461bcd60e51b815260040180806020018281038252602281526020018061207d6022913960400191505060405180910390fd5b6009543390600090610100116116695761010061166d565b6009545b90506000805b8281101561174a5760006009828154811061168a57fe5b60009182526020822001546001600160a01b031691505b86811080156116b05750600f81105b156117405760006116c2838884610f40565b90506000811180156116dd575060006116db84846108d7565b115b156117375760006116f16106b485856108d7565b90506116fd8682611ac5565b6001600160a01b038086166000908152600e60209081526040808320938d1683529290529081209197509084600f811061173357fe5b0155505b506001016116a1565b5050600101611673565b50801561059d576003546040805163095ea7b360e01b815230600482015260006024820181905291516001600160a01b039093169263095ea7b392604480840193602093929083900390910190829087803b1580156117a857600080fd5b505af11580156117bc573d6000803e3d6000fd5b505050506040513d60208110156117d257600080fd5b5051611825576040805162461bcd60e51b815260206004820152601a60248201527f6469737472696275746f7220617070726f7665206661696c6564000000000000604482015290519081900360640190fd5b6003546040805163095ea7b360e01b81523060048201526024810184905290516001600160a01b039092169163095ea7b3916044808201926020929091908290030181600087803b15801561187957600080fd5b505af115801561188d573d6000803e3d6000fd5b505050506040513d60208110156118a357600080fd5b50516118f6576040805162461bcd60e51b815260206004820152601d60248201527f4e75744469737420617070726f766520616d6f756e74206661696c6564000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523060048201526001600160a01b03868116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561195257600080fd5b505af1158015611966573d6000803e3d6000fd5b505050506040513d602081101561197c57600080fd5b505161059d576040805162461bcd60e51b815260206004820152601760248201527f4e757444697374207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b6001546001600160a01b03163314611a18576040805162461bcd60e51b81526020600482015260076024820152661b9bc81c195b9960ca1b604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000002179055565b6000546201000090046001600160a01b03163314611a92576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000611abf30611ec1565b15905090565b600082820183811015610984576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082611b2e57506000610987565b82820282848281611b3b57fe5b04146109845760405162461bcd60e51b81526004018080602001828103825260218152602001806120f86021913960400191505060405180910390fd5b6000808211611bce576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611bd757fe5b049392505050565b600082821115611c36576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600054610100900460ff1680611c555750611c55611ab4565b80611c63575060005460ff16155b611c9e5760405162461bcd60e51b815260040180806020018281038252602e8152602001806120ca602e913960400191505060405180910390fd5b600054610100900460ff16158015611cc9576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015611cfd576000805461ff00191690555b5050565b6007546001600160a01b038084166000908152601260209081526040808320938616835292905220541180611d395750600f60075410155b15611d4357611cfd565b6001600160a01b038083166000818152601060209081526040808320948616808452948252808320549383526012825280832094835293905291909120545b6007548111611dc7576001600160a01b038085166000908152600e60209081526040808320938716835292905220829082600f8110611dbd57fe5b0155600101611d82565b50600754611dd6906001611ac5565b6001600160a01b03808516600090815260126020908152604080832093871683529290522055505050565b6007546001600160a01b0382166000908152601160205260409020541180611e2c5750600f60075410155b15611e3657611ebe565b6001600160a01b0381166000908152600f60209081526040808320546011909252909120545b6007548111611e94576001600160a01b0383166000908152600c60205260409020829082600f8110611e8a57fe5b0155600101611e5c565b50600754611ea3906001611ac5565b6001600160a01b038316600090815260116020526040902055505b50565b803b15155b919050565b80356001600160a01b0381168114611ec657600080fd5b600060208284031215611ef3578081fd5b61098482611ecb565b60008060408385031215611f0e578081fd5b611f1783611ecb565b9150611f2560208401611ecb565b90509250929050565b600080600060608486031215611f42578081fd5b611f4b84611ecb565b9250611f5960208501611ecb565b9150604084013590509250925092565b60008060008060808587031215611f7e578081fd5b611f8785611ecb565b9350611f9560208601611ecb565b93969395505050506040820135916060013590565b60008060408385031215611fbc578182fd5b611fc583611ecb565b946020939093013593505050565b600060208284031215611fe4578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156120365785810183015185820160400152820161201a565b818111156120475783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b928352602083019190915260408201526060019056fe636f6c6c6563743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e742073686f756c6420626520706f736974697665496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206973206f766572676574436f6c6c656374696f6e416d6f756e743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e7420697320696e76616c6964646973747269627574653a20646973747269627574696f6e20697320636f6d706c65746564646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206e6f74207265616479a264697066735822122049588ad6861f3f8fb5b30af5cb1284698cf2b58cea8b3676b5f28384fcf530aa64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3416:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:35",
                "type": ""
              }
            ],
            "src": "14:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:35",
                "type": ""
              }
            ],
            "src": "194:198:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:35",
                "type": ""
              }
            ],
            "src": "397:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:35"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:35",
                "type": ""
              }
            ],
            "src": "676:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:290:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1191:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1200:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1208:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1193:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1193:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1226:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1257:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1236:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1276:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1286:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1276:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1335:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1362:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1373:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1358:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1358:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1345:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1413:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1424:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1396:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1086:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1097:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1109:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1117:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1125:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1133:6:35",
                "type": ""
              }
            ],
            "src": "1023:411:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1526:179:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1572:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1581:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1589:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1574:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1574:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1574:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1547:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1556:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1543:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1543:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1539:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1536:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1607:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1617:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1617:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1607:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1657:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1684:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1695:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1667:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1657:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1515:6:35",
                "type": ""
              }
            ],
            "src": "1439:266:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:120:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1835:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1861:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1884:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1871:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1861:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1746:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1757:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1769:6:35",
                "type": ""
              }
            ],
            "src": "1710:190:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2016:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2028:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2039:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2024:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2016:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2058:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2073:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2089:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2094:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2085:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2085:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2098:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2081:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2081:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2069:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2069:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1975:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1986:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1997:4:35",
                "type": ""
              }
            ],
            "src": "1905:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2208:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2218:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2230:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2241:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2226:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2218:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2260:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2285:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2278:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2278:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2271:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2271:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2253:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2177:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2188:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2199:4:35",
                "type": ""
              }
            ],
            "src": "2113:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2426:482:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2436:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2446:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2440:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2464:9:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2475:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2487:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2507:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2501:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2501:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2491:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2534:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2545:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2550:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2523:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2523:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2523:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2566:13:35",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "2575:4:35"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2570:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2638:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2667:9:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2678:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2663:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2663:17:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2682:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2659:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2659:26:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2701:6:35"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2709:1:35"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2697:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2697:14:35"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2713:2:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2693:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2693:23:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2687:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2687:30:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2652:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2652:66:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2652:66:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2599:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2602:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2596:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2610:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2612:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2621:1:35"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2624:2:35"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2617:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2617:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2612:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2592:3:35",
                    "statements": []
                  },
                  "src": "2588:140:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2762:69:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2791:9:35"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2802:6:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2787:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2787:22:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2811:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2783:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2783:31:35"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2816:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2776:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2776:45:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2776:45:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2743:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2746:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2740:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2737:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2840:62:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2856:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2875:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2883:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2871:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2871:15:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2892:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2888:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2888:7:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2867:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2867:29:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2852:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:45:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2899:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2848:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2840:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2395:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2406:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2417:4:35",
                "type": ""
              }
            ],
            "src": "2305:603:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3014:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3024:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3036:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3047:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3032:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3024:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3066:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3077:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3059:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3059:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2983:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2994:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3005:4:35",
                "type": ""
              }
            ],
            "src": "2913:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:162:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3262:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3274:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3285:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3270:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3262:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3304:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3315:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3297:25:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3342:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3353:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:18:35"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3358:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3331:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3331:34:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3385:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3396:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:18:35"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3401:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3374:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3374:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3374:34:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3205:9:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3216:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3224:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3232:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3243:4:35",
                "type": ""
              }
            ],
            "src": "3095:319:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "300:963:25:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "300:963:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:53:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1134:127:25;;;:::i;:::-;;;;;;;:::i;156:23:14:-;;;:::i;:::-;;;;;;;:::i;1927:46:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1310:18::-;;;:::i;381:711:25:-;;;;;;:::i;:::-;;:::i;:::-;;1526:28:4;;;:::i;1783:25::-;;;:::i;10014:864::-;;;:::i;1408:28::-;;;:::i;3613:196::-;;;:::i;2032:47::-;;;;;;:::i;:::-;;:::i;2892:714::-;;;;;;:::i;:::-;;:::i;1885:36::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;11139:236::-;;;;;;:::i;:::-;;:::i;2801:85::-;;;;;;:::i;:::-;;:::i;4104:1663::-;;;;;;:::i;:::-;;:::i;1283:21::-;;;:::i;1362:40::-;;;:::i;1334:21::-;;;:::i;2131:47::-;;;;;;:::i;:::-;;:::i;1470:35::-;;;:::i;10884:250::-;;;;;;:::i;:::-;;:::i;1857:22::-;;;;;;:::i;:::-;;:::i;1682:50::-;;;:::i;2214:65::-;;;;;;:::i;:::-;;:::i;2680:87::-;;;;;;:::i;:::-;;:::i;183:30:14:-;;;:::i;6910:1663:4:-;;;:::i;8611:1325::-;;;:::i;807:156:14:-;;;:::i;625:92::-;;;;;;:::i;:::-;;:::i;1585:53:4:-;1626:12;1585:53;:::o;1134:127:25:-;1231:24;;;;;;;;;;;;-1:-1:-1;;;1231:24:25;;;;1134:127;:::o;156:23:14:-;;;;;;-1:-1:-1;;;;;156:23:14;;:::o;1927:46:4:-;;;;;;;;;;;;;;;:::o;1310:18::-;;;-1:-1:-1;;;;;1310:18:4;;:::o;381:711:25:-;1501:13:29;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:29;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:29;;;;;1727:19;1709:4;1727:19;;;1659:98;522:30:25::1;533:7;542:9;522:10;:30::i;:::-;555:16;:35:::0;;;698:6:::1;693:393;1503:2:4;710:1:25;:13;693:393;;;744:17;765:10:::0;;;:7:::1;:10;::::0;;;;789:11;;;830:52:::1;851:30;872:8;773:1:::0;878::::1;872:5;:8::i;:::-;851:16;::::0;;:20:::1;:30::i;:::-;830:16;::::0;;:20:::1;:52::i;:::-;814:4;:13;;:68;;;;896:11;910:31;932:8;938:1;932;:5;;:8;;;;:::i;:::-;1626:12:4;::::0;910:21:25::1;:31::i;:::-;896:45;;1721:11:4;959:6:25;:24;955:87;;;-1:-1:-1::0;1721:11:4::1;955:87:25;1055:11;::::0;;::::1;:20:::0;725:3:::1;;693:393;;;;1783:14:29::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:29;;;1779:66;381:711:25;;;;:::o;1526:28:4:-;;;;:::o;1783:25::-;;;;:::o;10014:864::-;10067:4;10083:12;10098:58;10139:16;;10099:34;10116:16;;10099:12;:16;;:34;;;;:::i;:::-;10098:40;;:58::i;:::-;10083:73;;10184:1;10174:7;:11;10166:70;;;;-1:-1:-1;;;10166:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10303:5;:12;10264:10;;10247:14;;1399:3;-1:-1:-1;10303:59:4;;1399:3;10303:59;;;10334:5;:12;10303:59;10285:77;-1:-1:-1;10372:16:4;;10398:445;10419:10;10415:1;:14;10398:445;;;10450:12;10465:5;10471:1;10465:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10465:8:4;;-1:-1:-1;10487:346:4;10508:7;10504:1;:11;:28;;;;;1503:2;10519:1;:13;10504:28;10487:346;;;10557:8;10568:23;10575:4;10581:6;10589:1;10568:6;:23::i;:::-;10557:34;;10619:1;10613:3;:7;:35;;;;;10647:1;10624:20;10636:4;10642:1;10624:11;:20::i;:::-;:24;10613:35;10609:210;;;10672:11;10686:55;10720:20;10732:4;10738:1;10720:11;:20::i;:::-;-1:-1:-1;;;;;10694:17:4;;;;;;:11;:17;;;;;10686:29;;10712:1;10694:20;;;;;;;;;10686:3;;:7;:29::i;:55::-;10672:69;-1:-1:-1;10777:23:4;:11;10672:69;10777:15;:23::i;:::-;10763:37;;10609:210;;-1:-1:-1;10534:3:4;;10487:346;;;-1:-1:-1;;10431:3:4;;10398:445;;;-1:-1:-1;10860:11:4;-1:-1:-1;;;;10014:864:4;:::o;1408:28::-;;;;:::o;3613:196::-;3673:4;3713:16;;3697:12;:32;;:104;;;;-1:-1:-1;3769:16:4;;3748:53;;3769:31;;1503:2;3769:20;:31::i;3748:53::-;3733:12;:68;3697:104;3689:113;;3613:196;:::o;2032:47::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2032:47:4;;-1:-1:-1;2032:47:4:o;2892:714::-;1501:13:29;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:29;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:29;;;;;1727:19;1709:4;1727:19;;;1659:98;2976:3:4::1;:13:::0;;-1:-1:-1;;;;;;2976:13:4::1;-1:-1:-1::0;;;;;2976:13:4;::::1;;::::0;;3018:12:::1;2999:16;:31:::0;3059:5:::1;3040:16;:24:::0;3075:29:::1;3094:9:::0;3075:18:::1;:29::i;:::-;3212:6;3207:393;1503:2;3224:1;:13;3207:393;;;3258:17;3279:10:::0;;;:7:::1;:10;::::0;;;;3303:11;;;3344:52:::1;3365:30;3386:8;3287:1:::0;3392::::1;3386:5;:8::i;3344:52::-;3328:4;:13;;:68;;;;3410:11;3424:31;3446:8;3452:1;3446;:5;;:8;;;;:::i;3424:31::-;3410:45;;1721:11;3473:6;:24;3469:87;;;-1:-1:-1::0;1721:11:4::1;3469:87;3569:11;::::0;;::::1;:20:::0;3239:3:::1;;3207:393;;;;1783:14:29::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:29;;;1779:66;2892:714:4;;;:::o;1885:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11139:236::-;11203:4;1503:2;11227:1;:13;11219:42;;;;;-1:-1:-1;;;11219:42:4;;;;;;;;;;;;-1:-1:-1;;;11219:42:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;11282:25:4;;;;;;:19;:25;;;;;;11278:29;;:90;;-1:-1:-1;;;;;11345:23:4;;;;;;:17;:23;;;;;;11278:90;;;-1:-1:-1;;;;;11322:17:4;;;;;;:11;:17;;;;;11340:1;11322:20;;;;;;;;;11278:90;11271:97;;11139:236;;;;;:::o;2801:85::-;265:8:14;;;;;-1:-1:-1;;;;;265:8:14;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;;;;2866:6:4::1;:13:::0;;-1:-1:-1;;;;;;2866:13:4::1;-1:-1:-1::0;;;;;2866:13:4;;;::::1;::::0;;;::::1;::::0;;2801:85::o;4104:1663::-;2597:6;;-1:-1:-1;;;;;2597:6:4;2583:10;:20;2575:53;;;;;-1:-1:-1;;;2575:53:4;;;;;;;;;;;;-1:-1:-1;;;2575:53:4;;;;;;;;;;;;;;;4249:16:::1;;4233:12;:32;;4225:76;;;::::0;;-1:-1:-1;;;4225:76:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4319:14:::0;;;:32:::1;;-1:-1:-1::0;4337:14:4;;4319:32:::1;4311:80;;;;-1:-1:-1::0;;;4311:80:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:11;4416:24;:9:::0;4430;4416:13:::1;:24::i;:::-;4402:38;;4467:1;4458:6;:10;4450:66;;;;-1:-1:-1::0;;;4450:66:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4572:58;4613:16;;4573:34;4590:16;;4573:12;:16;;:34;;;;:::i;4572:58::-;4556:13;:74:::0;;;1503:2:::1;-1:-1:-1::0;4640:39:4::1;;4672:7;;;4640:39;4689:26;4701:5;4708:6;4689:11;:26::i;:::-;4725:23;4742:5;4725:16;:23::i;:::-;4777:13;::::0;4759:7:::1;4769:22:::0;;;:7:::1;:22;::::0;;;;:31:::1;;::::0;:63:::1;::::0;4825:6;;4769:51:::1;::::0;4806:12:::1;4769:35;:51::i;:::-;:55:::0;::::1;:63::i;:::-;4759:73;;4842:12;4857:28;4878:6;4857:16;;:20;;:28;;;;:::i;:::-;4842:43:::0;-1:-1:-1;4900:13:4;;4896:747:::1;;-1:-1:-1::0;;;;;4968:13:4;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;4990:13:::1;::::0;4968:44:::1;::::0;5009:2;;4968:36:::1;::::0;::::1;;;;;;::::0;;:40:::1;:44::i;:::-;-1:-1:-1::0;;;;;4929:13:4;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;4951:13:::1;::::0;4929:36:::1;::::0;::::1;;;;;;:83:::0;-1:-1:-1;;;;;5062:18:4;::::1;;::::0;;;:11:::1;:18;::::0;;;;5081:13:::1;::::0;5062:41:::1;::::0;5100:2;;5062:33:::1;::::0;::::1;;;;:41;-1:-1:-1::0;;;;;5026:18:4;::::1;;::::0;;;:11:::1;:18;::::0;;;;5045:13:::1;::::0;5026:33:::1;::::0;::::1;;;;;;:77:::0;-1:-1:-1;;;;;5147:19:4;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;:40:::1;::::0;5179:7;5147:31:::1;:40::i;:::-;-1:-1:-1::0;;;;;5117:19:4;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;;:70;;;;5228:24;;;:17:::1;:24:::0;;;;;;:37:::1;::::0;5257:7;5228:28:::1;:37::i;:::-;-1:-1:-1::0;;;;;5201:24:4;::::1;;::::0;;;:17:::1;:24;::::0;;;;:64;4896:747:::1;;;-1:-1:-1::0;;;;;5335:13:4;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;5357:13:::1;::::0;5335:44:::1;::::0;5376:2;;5335:36:::1;::::0;::::1;;;;;;::::0;;:40:::1;:44::i;:::-;-1:-1:-1::0;;;;;5296:13:4;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;5318:13:::1;::::0;5296:36:::1;::::0;::::1;;;;;;:83:::0;-1:-1:-1;;;;;5429:18:4;::::1;;::::0;;;:11:::1;:18;::::0;;;;5448:13:::1;::::0;5429:41:::1;::::0;5467:2;;5429:33:::1;::::0;::::1;;;;:41;-1:-1:-1::0;;;;;5393:18:4;::::1;;::::0;;;:11:::1;:18;::::0;;;;5412:13:::1;::::0;5393:33:::1;::::0;::::1;;;;;;:77:::0;-1:-1:-1;;;;;5514:19:4;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;:40:::1;::::0;5546:7;5514:31:::1;:40::i;:::-;-1:-1:-1::0;;;;;5484:19:4;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;;:70;;;;5595:24;;;:17:::1;:24:::0;;;;;;:37:::1;::::0;5624:7;5595:28:::1;:37::i;:::-;-1:-1:-1::0;;;;;5568:24:4;::::1;;::::0;;;:17:::1;:24;::::0;;;;:64;4896:747:::1;-1:-1:-1::0;;;;;5658:19:4;::::1;;::::0;;;:12:::1;:19;::::0;;;;;::::1;;5653:108;;5693:5;:17:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;5693:17:4::1;-1:-1:-1::0;;;;;5693:17:4;::::1;::::0;;::::1;::::0;;;-1:-1:-1;5724:19:4;;;:12:::1;5693:17;5724:19:::0;;;;:26;;-1:-1:-1;;5724:26:4::1;::::0;;::::1;::::0;;5653:108:::1;2638:1;;;4104:1663:::0;;;;:::o;1283:21::-;;;-1:-1:-1;;;;;1283:21:4;;:::o;1362:40::-;1399:3;1362:40;:::o;1334:21::-;;;-1:-1:-1;;;;;1334:21:4;;:::o;2131:47::-;;;;;;;;;;;;;;;;;;;1470:35;1503:2;1470:35;:::o;10884:250::-;10958:4;1503:2;10982:1;:13;10974:37;;;;;-1:-1:-1;;;10974:37:4;;;;;;;;;;;;-1:-1:-1;;;10974:37:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;11032:20:4;;;;;;;:14;:20;;;;;;;;:28;;;;;;;;;;11028:32;;:99;;-1:-1:-1;;;;;11101:18:4;;;;;;;:12;:18;;;;;;;;:26;;;;;;;;;;11028:99;;;-1:-1:-1;;;;;11075:12:4;;;;;;;:6;:12;;;;;;;;:20;;;;;;;;;11096:1;11075:23;;;;;;;;;11028:99;11021:106;10884:250;-1:-1:-1;;;;10884:250:4:o;1857:22::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1857:22:4;;-1:-1:-1;1857:22:4;:::o;1682:50::-;1721:11;1682:50;:::o;2214:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2214:65:4;;-1:-1:-1;;2214:65:4:o;2680:87::-;265:8:14;;;;;-1:-1:-1;;;;;265:8:14;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;;;;2747:6:4::1;:13:::0;;-1:-1:-1;;;;;;2747:13:4::1;-1:-1:-1::0;;;;;2747:13:4;;;::::1;::::0;;;::::1;::::0;;2680:87::o;183:30:14:-;;;-1:-1:-1;;;;;183:30:14;;:::o;6910:1663:4:-;265:8:14;;;;;-1:-1:-1;;;;;265:8:14;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;;;;6967:6:4::1;::::0;-1:-1:-1;;;;;6967:6:4::1;6959:64;;;::::0;;-1:-1:-1;;;6959:64:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7063:16;7082:58;7123:16;;7083:34;7100:16;;7083:12;:16;;:34;;;;:::i;7082:58::-;7063:77;;7172:1;7158:11;:15;7150:72;;;;-1:-1:-1::0;;;7150:72:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7254:16;1503:2;7268:1;7254:13;:16::i;:::-;7240:11;:30;7232:85;;;;-1:-1:-1::0;;;7232:85:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7389:16;7408:18;:11:::0;7424:1:::1;7408:15;:18::i;:::-;7445:30;::::0;;;:17:::1;:30;::::0;;;;;7389:37;;-1:-1:-1;7445:30:4::1;;7444:31;7436:81;;;;-1:-1:-1::0;;;7436:81:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7555:11;7569:20:::0;;;:7:::1;:20;::::0;;;;;:27:::1;;::::0;7611:3:::1;::::0;7606:37;;-1:-1:-1;;;7606:37:4;;7629:4:::1;7606:37;::::0;::::1;::::0;;;;;;;;;7569:27;;-1:-1:-1;;;;;7611:3:4;;::::1;::::0;7606:14:::1;::::0;:37;;;;;7555:11;7606:37;;;;;7555:11;7611:3;7606:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7654:15;1399:3;7672:5;:12;;;;:28;:59;;1399:3;7672:59;;;7703:5;:12:::0;7672:59:::1;7654:77;;7741:12;7763:19:::0;7797:6:::1;7792:222;7813:10;7809:1;:14;7792:222;;;7870:6;::::0;7887:5:::1;:8:::0;;7844:10:::1;::::0;-1:-1:-1;;;;;7870:6:4::1;::::0;7857:29:::1;::::0;7893:1;;7887:8;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;7857:39:::1;::::0;;-1:-1:-1;;;;;;7857:39:4::1;::::0;;;;;;-1:-1:-1;;;;;7887:8:4;;::::1;7857:39;::::0;::::1;::::0;;;;;;;7887:8;7857:39;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7857:39:4;7942:5:::1;:8:::0;;7857:39;;-1:-1:-1;7910:7:4::1;::::0;7920:44:::1;::::0;7930:33:::1;::::0;7948:1;;7942:8;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7942:8:4::1;7951:11:::0;7930::::1;:33::i;:::-;7920:5:::0;;:9:::1;:44::i;:::-;7910:54:::0;-1:-1:-1;7988:15:4::1;:7:::0;7910:54;7988:11:::1;:15::i;:::-;7978:25:::0;-1:-1:-1;;;7825:3:4::1;;7792:222;;;-1:-1:-1::0;8028:11:4;;8024:427:::1;;8060:6;8055:386;8076:10;8072:1;:14;8055:386;;;8137:6;::::0;8154:5:::1;:8:::0;;8111:10:::1;::::0;-1:-1:-1;;;;;8137:6:4::1;::::0;8124:29:::1;::::0;8160:1;;8154:8;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;8124:39:::1;::::0;;-1:-1:-1;;;;;;8124:39:4::1;::::0;;;;;;-1:-1:-1;;;;;8154:8:4;;::::1;8124:39;::::0;::::1;::::0;;;;;;;8154:8;8124:39;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8124:39:4;8213:5:::1;:8:::0;;8124:39;;-1:-1:-1;8181:7:4::1;::::0;8191:45:::1;::::0;8201:34:::1;::::0;8219:1;;8213:8;::::1;;;;8191:45;8181:55:::0;-1:-1:-1;8254:14:4::1;8271:27;8290:7:::0;8271:14:::1;8181:55:::0;8278:6;8271::::1;:14::i;:27::-;8254:44:::0;-1:-1:-1;8333:29:4::1;:14:::0;8254:44;8333:18:::1;:29::i;:::-;8316:46;;8417:9;8380:11;:21;8392:5;8398:1;8392:8;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8392:8:4::1;8380:21:::0;;;::::1;::::0;;;;;;;;8402:11;8380:34:::1;::::0;::::1;;;;;;:46:::0;-1:-1:-1;;;8088:3:4::1;;8055:386;;;;8024:427;8487:6;8469:14;:24;;8461:57;;;::::0;;-1:-1:-1;;;8461:57:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8461:57:4;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;8529:30:4::1;::::0;;;-1:-1:-1;8529:17:4::1;:30;::::0;;;;:37;;-1:-1:-1;;8529:37:4::1;8562:4;8529:37;::::0;;-1:-1:-1;6910:1663:4:o;8611:1325::-;8650:12;8665:58;8706:16;;8666:34;8683:16;;8666:12;:16;;:34;;;;:::i;8665:58::-;8650:73;;8751:1;8741:7;:11;8733:58;;;;-1:-1:-1;;;8733:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8858:5;:12;8819:10;;8802:14;;1399:3;-1:-1:-1;8858:59:4;;1399:3;8858:59;;;8889:5;:12;8858:59;8840:77;-1:-1:-1;8927:16:4;;8953:494;8974:10;8970:1;:14;8953:494;;;9005:12;9020:5;9026:1;9020:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9020:8:4;;-1:-1:-1;9042:395:4;9063:7;9059:1;:11;:28;;;;;1503:2;9074:1;:13;9059:28;9042:395;;;9112:8;9123:23;9130:4;9136:6;9144:1;9123:6;:23::i;:::-;9112:34;;9174:1;9168:3;:7;:35;;;;;9202:1;9179:20;9191:4;9197:1;9179:11;:20::i;:::-;:24;9168:35;9164:259;;;9227:11;9241:55;9275:20;9287:4;9293:1;9275:11;:20::i;9241:55::-;9227:69;-1:-1:-1;9332:23:4;:11;9227:69;9332:15;:23::i;:::-;-1:-1:-1;;;;;9377:12:4;;;9403:1;9377:12;;;:6;:12;;;;;;;;:20;;;;;;;;;;;9318:37;;-1:-1:-1;9403:1:4;9398;9377:23;;;;;;;;:27;-1:-1:-1;9164:259:4;-1:-1:-1;9089:3:4;;9042:395;;;-1:-1:-1;;8986:3:4;;8953:494;;;-1:-1:-1;9461:15:4;;9457:473;;9524:3;;9517:37;;;-1:-1:-1;;;9517:37:4;;9545:4;9517:37;;;;9524:3;9517:37;;;;;;;;-1:-1:-1;;;;;9524:3:4;;;;9517:19;;:37;;;;;;;;;;;;;;;;;;9524:3;9517:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9517:37:4;9492:122;;;;;-1:-1:-1;;;9492:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;9660:3;;9653:47;;;-1:-1:-1;;;9653:47:4;;9681:4;9653:47;;;;;;;;;;;;-1:-1:-1;;;;;9660:3:4;;;;9653:19;;:47;;;;;;;;;;;;;;;9660:3;;9653:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9653:47:4;9628:135;;;;;-1:-1:-1;;;9628:135:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;9809:3;;9802:60;;;-1:-1:-1;;;9802:60:4;;9835:4;9802:60;;;;-1:-1:-1;;;;;9802:60:4;;;;;;;;;;;;;;;9809:3;;;;;9802:24;;:60;;;;;;;;;;;;;;9809:3;;9802:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9802:60:4;9777:142;;;;;-1:-1:-1;;;9777:142:4;;;;;;;;;;;;;;;;;;;;;;;;;;;807:156:14;870:15;;-1:-1:-1;;;;;870:15:14;856:10;:29;848:49;;;;;-1:-1:-1;;;848:49:14;;;;;;;;;;;;-1:-1:-1;;;848:49:14;;;;;;;;;;;;;;;903:15;:28;;-1:-1:-1;;;;;;903:28:14;;;-1:-1:-1;937:21:14;;-1:-1:-1;;;;;;937:21:14;948:10;937:21;;;;;807:156::o;625:92::-;265:8;;;;;-1:-1:-1;;;;;265:8:14;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;-1:-1:-1;;;243:42:14;;;;;;;;;;;;;;;690:15:::1;:22:::0;;-1:-1:-1;;;;;;690:22:14::1;-1:-1:-1::0;;;;;690:22:14;;;::::1;::::0;;;::::1;::::0;;625:92::o;1941:112:29:-;1989:4;2013:33;2040:4;2013:18;:33::i;:::-;2012:34;2005:41;;1941:112;:::o;2690:175:28:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:215;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:28;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:28:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:28;;;3136:155::o;388:99:14:-;1501:13:29;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:29;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:29;;;;;1727:19;1709:4;1727:19;;;1659:98;462:8:14::1;:20:::0;;-1:-1:-1;;;;;;462:20:14::1;::::0;-1:-1:-1;;;;;462:20:14;::::1;;;::::0;;1779:66:29;;;;1829:5;1813:21;;-1:-1:-1;;1813:21:29;;;1779:66;388:99:14;;:::o;5892:422:4:-;5999:13;;-1:-1:-1;;;;;5967:21:4;;;;;;;:14;:21;;;;;;;;:29;;;;;;;;;;:45;;:75;;;1503:2;6016:13;;:26;;5967:75;5963:89;;;6045:7;;5963:89;-1:-1:-1;;;;;6078:19:4;;;6061:14;6078:19;;;:12;:19;;;;;;;;:27;;;;;;;;;;;;;6129:21;;;:14;:21;;;;;:29;;;;;;;;;;;6115:131;6165:13;;6160:1;:18;6115:131;;-1:-1:-1;;;;;6199:13:4;;;;;;;:6;:13;;;;;;;;:21;;;;;;;;;6226:9;;6221:1;6199:24;;;;;;;;:36;6180:3;;6115:131;;;-1:-1:-1;6287:13:4;;:20;;6305:1;6287:17;:20::i;:::-;-1:-1:-1;;;;;6255:21:4;;;;;;;:14;:21;;;;;;;;:29;;;;;;;;;:52;-1:-1:-1;5892:422:4;;:::o;6440:406::-;6533:13;;-1:-1:-1;;;;;6504:26:4;;;;;;:19;:26;;;;;;:42;;:72;;;1503:2;6550:13;;:26;;6504:72;6500:86;;;6579:7;;6500:86;-1:-1:-1;;;;;6617:24:4;;6595:19;6617:24;;;:17;:24;;;;;;;;;6665:19;:26;;;;;;;6651:130;6698:13;;6693:1;:18;6651:130;;-1:-1:-1;;;;;6732:18:4;;;;;;:11;:18;;;;;6756:14;;6751:1;6732:21;;;;;;;;:38;6713:3;;6651:130;;;-1:-1:-1;6819:13:4;;:20;;6837:1;6819:17;:20::i;:::-;-1:-1:-1;;;;;6790:26:4;;;;;;:19;:26;;;;;:49;-1:-1:-1;6440:406:4;;:::o;726:413:33:-;1086:20;;1124:8;;726:413;;;;:::o;14:175:35:-;84:20;;-1:-1:-1;;;;;133:31:35;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:411::-;;;;;1186:3;1174:9;1165:7;1161:23;1157:33;1154:2;;;1208:6;1200;1193:22;1154:2;1236:31;1257:9;1236:31;:::i;:::-;1226:41;;1286:40;1322:2;1311:9;1307:18;1286:40;:::i;:::-;1144:290;;1276:50;;-1:-1:-1;;;;1373:2:35;1358:18;;1345:32;;1424:2;1409:18;1396:32;;1144:290::o;1439:266::-;;;1568:2;1556:9;1547:7;1543:23;1539:32;1536:2;;;1589:6;1581;1574:22;1536:2;1617:31;1638:9;1617:31;:::i;:::-;1607:41;1695:2;1680:18;;;;1667:32;;-1:-1:-1;;;1526:179:35:o;1710:190::-;;1822:2;1810:9;1801:7;1797:23;1793:32;1790:2;;;1843:6;1835;1828:22;1790:2;-1:-1:-1;1871:23:35;;1780:120;-1:-1:-1;1780:120:35:o;1905:203::-;-1:-1:-1;;;;;2069:32:35;;;;2051:51;;2039:2;2024:18;;2006:102::o;2113:187::-;2278:14;;2271:22;2253:41;;2241:2;2226:18;;2208:92::o;2305:603::-;;2446:2;2475;2464:9;2457:21;2507:6;2501:13;2550:6;2545:2;2534:9;2530:18;2523:34;2575:4;2588:140;2602:6;2599:1;2596:13;2588:140;;;2697:14;;;2693:23;;2687:30;2663:17;;;2682:2;2659:26;2652:66;2617:10;;2588:140;;;2746:6;2743:1;2740:13;2737:2;;;2816:4;2811:2;2802:6;2791:9;2787:22;2783:31;2776:45;2737:2;-1:-1:-1;2892:2:35;2871:15;-1:-1:-1;;2867:29:35;2852:45;;;;2899:2;2848:54;;2426:482;-1:-1:-1;;;2426:482:35:o;2913:177::-;3059:25;;;3047:2;3032:18;;3014:76::o;3095:319::-;3297:25;;;3353:2;3338:18;;3331:34;;;;3396:2;3381:18;;3374:34;3285:2;3270:18;;3252:162::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\nimport \"../NutDistributor.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\n// @notice This contract is a version of NutDistributor that allows\n// the epoch intervals to be changed for testing\n\ncontract TestNutDistributor is NutDistributor {\n    using SafeMath for uint;\n    function initialize (\n        address nutAddr,\n        address _governor,\n        uint blocks_per_epoch\n    ) external initializer {\n        initialize(nutAddr, _governor);\n\tBLOCKS_PER_EPOCH = blocks_per_epoch;\n\n        // config echoMap which indicates how many tokens will be distributed at each epoch\n        for (uint i = 0; i < NUM_EPOCH; i++) {\n            Echo storage echo =  echoMap[i];\n            echo.id = i;\n            echo.endBlock = DIST_START_BLOCK.add(BLOCKS_PER_EPOCH.mul(i.add(1)));\n            uint amount = DIST_START_AMOUNT.div(i.add(1));\n            if (amount < DIST_MIN_AMOUNT) {\n                amount = DIST_MIN_AMOUNT;\n            }\n            echo.amount = amount;\n        }\n    }\n\n    //@notice output version string\n    function getVersionString()\n    external virtual pure override returns (string memory) {\n        return \"test.nutdistrib\";\n   }\n}\n",
  "sourcePath": "/home/joe/local2/bench/git/nutmeg/contracts/mock/TestNutDistributor.sol",
  "ast": {
    "absolutePath": "/home/joe/local2/bench/git/nutmeg/contracts/mock/TestNutDistributor.sol",
    "exportedSymbols": {
      "Address": [
        9262
      ],
      "Governable": [
        6355
      ],
      "IERC20": [
        8753
      ],
      "INut": [
        5943
      ],
      "INutDistributor": [
        5962
      ],
      "IPriceOracle": [
        6236
      ],
      "Initializable": [
        8172
      ],
      "NutDistributor": [
        1349
      ],
      "SafeERC20": [
        8966
      ],
      "SafeMath": [
        8106
      ],
      "TestNutDistributor": [
        7614
      ]
    },
    "id": 7615,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7511,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:25"
      },
      {
        "id": 7512,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:25"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg/contracts/NutDistributor.sol",
        "file": "../NutDistributor.sol",
        "id": 7513,
        "nodeType": "ImportDirective",
        "scope": 7615,
        "sourceUnit": 1350,
        "src": "89:31:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 7514,
        "nodeType": "ImportDirective",
        "scope": 7615,
        "sourceUnit": 8967,
        "src": "121:59:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7515,
              "name": "NutDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1349,
              "src": "331:14:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NutDistributor_$1349",
                "typeString": "contract NutDistributor"
              }
            },
            "id": 7516,
            "nodeType": "InheritanceSpecifier",
            "src": "331:14:25"
          }
        ],
        "contractDependencies": [
          1349,
          5962,
          6355,
          8172
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7614,
        "linearizedBaseContracts": [
          7614,
          1349,
          5962,
          6355,
          8172
        ],
        "name": "TestNutDistributor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7519,
            "libraryName": {
              "id": 7517,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8106,
              "src": "358:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8106",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "352:24:25",
            "typeName": {
              "id": 7518,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "371:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 7603,
              "nodeType": "Block",
              "src": "512:580:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7531,
                        "name": "nutAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7521,
                        "src": "533:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7532,
                        "name": "_governor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7523,
                        "src": "542:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7530,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 362,
                      "src": "522:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "522:30:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7534,
                  "nodeType": "ExpressionStatement",
                  "src": "522:30:25"
                },
                {
                  "expression": {
                    "id": 7537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7535,
                      "name": "BLOCKS_PER_EPOCH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "555:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7536,
                      "name": "blocks_per_epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7525,
                      "src": "574:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "555:35:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7538,
                  "nodeType": "ExpressionStatement",
                  "src": "555:35:25"
                },
                {
                  "body": {
                    "id": 7601,
                    "nodeType": "Block",
                    "src": "730:356:25",
                    "statements": [
                      {
                        "assignments": [
                          7550
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7550,
                            "mutability": "mutable",
                            "name": "echo",
                            "nodeType": "VariableDeclaration",
                            "scope": 7601,
                            "src": "744:17:25",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Echo_$154_storage_ptr",
                              "typeString": "struct NutDistributor.Echo"
                            },
                            "typeName": {
                              "id": 7549,
                              "name": "Echo",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 154,
                              "src": "744:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Echo_$154_storage_ptr",
                                "typeString": "struct NutDistributor.Echo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7554,
                        "initialValue": {
                          "baseExpression": {
                            "id": 7551,
                            "name": "echoMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "765:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Echo_$154_storage_$",
                              "typeString": "mapping(uint256 => struct NutDistributor.Echo storage ref)"
                            }
                          },
                          "id": 7553,
                          "indexExpression": {
                            "id": 7552,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7540,
                            "src": "773:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "765:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Echo_$154_storage",
                            "typeString": "struct NutDistributor.Echo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "744:31:25"
                      },
                      {
                        "expression": {
                          "id": 7559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 7555,
                              "name": "echo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7550,
                              "src": "789:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Echo_$154_storage_ptr",
                                "typeString": "struct NutDistributor.Echo storage pointer"
                              }
                            },
                            "id": 7557,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "789:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7558,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7540,
                            "src": "799:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "789:11:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7560,
                        "nodeType": "ExpressionStatement",
                        "src": "789:11:25"
                      },
                      {
                        "expression": {
                          "id": 7574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 7561,
                              "name": "echo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7550,
                              "src": "814:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Echo_$154_storage_ptr",
                                "typeString": "struct NutDistributor.Echo storage pointer"
                              }
                            },
                            "id": 7563,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "endBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 151,
                            "src": "814:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 7570,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "878:1:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 7568,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7540,
                                        "src": "872:1:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 7569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "add",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7933,
                                      "src": "872:5:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 7571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "872:8:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 7566,
                                    "name": "BLOCKS_PER_EPOCH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 170,
                                    "src": "851:16:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 7567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7989,
                                  "src": "851:20:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 7572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "851:30:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 7564,
                                "name": "DIST_START_BLOCK",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "830:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7933,
                              "src": "830:20:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 7573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "830:52:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "814:68:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7575,
                        "nodeType": "ExpressionStatement",
                        "src": "814:68:25"
                      },
                      {
                        "assignments": [
                          7577
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 7577,
                            "mutability": "mutable",
                            "name": "amount",
                            "nodeType": "VariableDeclaration",
                            "scope": 7601,
                            "src": "896:11:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 7576,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "896:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 7585,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 7582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "938:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "expression": {
                                  "id": 7580,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7540,
                                  "src": "932:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 7581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7933,
                                "src": "932:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 7583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "932:8:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7578,
                              "name": "DIST_START_AMOUNT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "910:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8011,
                            "src": "910:21:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 7584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "910:31:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "896:45:25"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7586,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7577,
                            "src": "959:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 7587,
                            "name": "DIST_MIN_AMOUNT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "968:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "959:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7594,
                        "nodeType": "IfStatement",
                        "src": "955:87:25",
                        "trueBody": {
                          "id": 7593,
                          "nodeType": "Block",
                          "src": "985:57:25",
                          "statements": [
                            {
                              "expression": {
                                "id": 7591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 7589,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7577,
                                  "src": "1003:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 7590,
                                  "name": "DIST_MIN_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 176,
                                  "src": "1012:15:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1003:24:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7592,
                              "nodeType": "ExpressionStatement",
                              "src": "1003:24:25"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 7599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 7595,
                              "name": "echo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7550,
                              "src": "1055:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Echo_$154_storage_ptr",
                                "typeString": "struct NutDistributor.Echo storage pointer"
                              }
                            },
                            "id": 7597,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 153,
                            "src": "1055:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 7598,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7577,
                            "src": "1069:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1055:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7600,
                        "nodeType": "ExpressionStatement",
                        "src": "1055:20:25"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7543,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7540,
                      "src": "710:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7544,
                      "name": "NUM_EPOCH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "714:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "710:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7602,
                  "initializationExpression": {
                    "assignments": [
                      7540
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7540,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 7602,
                        "src": "698:6:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7539,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7542,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 7541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "707:1:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "698:10:25"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "725:3:25",
                      "subExpression": {
                        "id": 7546,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7540,
                        "src": "725:1:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7548,
                    "nodeType": "ExpressionStatement",
                    "src": "725:3:25"
                  },
                  "nodeType": "ForStatement",
                  "src": "693:393:25"
                }
              ]
            },
            "functionSelector": "1794bb3c",
            "id": 7604,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7528,
                "modifierName": {
                  "id": 7527,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8155,
                  "src": "500:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "500:11:25"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7521,
                  "mutability": "mutable",
                  "name": "nutAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "411:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7523,
                  "mutability": "mutable",
                  "name": "_governor",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "436:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7525,
                  "mutability": "mutable",
                  "name": "blocks_per_epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 7604,
                  "src": "463:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:89:25"
            },
            "returnParameters": {
              "id": 7529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:25"
            },
            "scope": 7614,
            "src": "381:711:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1348
            ],
            "body": {
              "id": 7612,
              "nodeType": "Block",
              "src": "1221:40:25",
              "statements": [
                {
                  "expression": {
                    "hexValue": "746573742e6e757464697374726962",
                    "id": 7610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1238:17:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4c05657f132d56b9ac5e406ecb9de70e6055cd7c82c94bd04d41894c720dd5c0",
                      "typeString": "literal_string \"test.nutdistrib\""
                    },
                    "value": "test.nutdistrib"
                  },
                  "functionReturnParameters": 7609,
                  "id": 7611,
                  "nodeType": "Return",
                  "src": "1231:24:25"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 7613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1188:8:25"
            },
            "parameters": {
              "id": 7605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1159:2:25"
            },
            "returnParameters": {
              "id": 7609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7608,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7613,
                  "src": "1206:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7607,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:15:25"
            },
            "scope": 7614,
            "src": "1134:127:25",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 7615,
        "src": "300:963:25"
      }
    ],
    "src": "32:1232:25"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/joe/local2/bench/git/nutmeg/contracts/mock/TestNutDistributor.sol",
      "exportedSymbols": {
        "Address": [
          9262
        ],
        "Governable": [
          6355
        ],
        "IERC20": [
          8753
        ],
        "INut": [
          5943
        ],
        "INutDistributor": [
          5962
        ],
        "IPriceOracle": [
          6236
        ],
        "Initializable": [
          8172
        ],
        "NutDistributor": [
          1349
        ],
        "SafeERC20": [
          8966
        ],
        "SafeMath": [
          8106
        ],
        "TestNutDistributor": [
          7614
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 7511,
        "name": "PragmaDirective",
        "src": "32:22:25"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7512,
        "name": "PragmaDirective",
        "src": "55:33:25"
      },
      {
        "attributes": {
          "SourceUnit": 1350,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg/contracts/NutDistributor.sol",
          "file": "../NutDistributor.sol",
          "scope": 7615,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7513,
        "name": "ImportDirective",
        "src": "89:31:25"
      },
      {
        "attributes": {
          "SourceUnit": 8967,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "scope": 7615,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7514,
        "name": "ImportDirective",
        "src": "121:59:25"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1349,
            5962,
            6355,
            8172
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7614,
            1349,
            5962,
            6355,
            8172
          ],
          "name": "TestNutDistributor",
          "scope": 7615
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NutDistributor",
                  "referencedDeclaration": 1349,
                  "type": "contract NutDistributor"
                },
                "id": 7515,
                "name": "UserDefinedTypeName",
                "src": "331:14:25"
              }
            ],
            "id": 7516,
            "name": "InheritanceSpecifier",
            "src": "331:14:25"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 8106,
                  "type": "library SafeMath"
                },
                "id": 7517,
                "name": "UserDefinedTypeName",
                "src": "358:8:25"
              },
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 7518,
                "name": "ElementaryTypeName",
                "src": "371:4:25"
              }
            ],
            "id": 7519,
            "name": "UsingForDirective",
            "src": "352:24:25"
          },
          {
            "attributes": {
              "functionSelector": "1794bb3c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 7614,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nutAddr",
                      "scope": 7604,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7520,
                        "name": "ElementaryTypeName",
                        "src": "411:7:25"
                      }
                    ],
                    "id": 7521,
                    "name": "VariableDeclaration",
                    "src": "411:15:25"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_governor",
                      "scope": 7604,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7522,
                        "name": "ElementaryTypeName",
                        "src": "436:7:25"
                      }
                    ],
                    "id": 7523,
                    "name": "VariableDeclaration",
                    "src": "436:17:25"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "blocks_per_epoch",
                      "scope": 7604,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 7524,
                        "name": "ElementaryTypeName",
                        "src": "463:4:25"
                      }
                    ],
                    "id": 7525,
                    "name": "VariableDeclaration",
                    "src": "463:21:25"
                  }
                ],
                "id": 7526,
                "name": "ParameterList",
                "src": "401:89:25"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7529,
                "name": "ParameterList",
                "src": "512:0:25"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8155,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 7527,
                    "name": "Identifier",
                    "src": "500:11:25"
                  }
                ],
                "id": 7528,
                "name": "ModifierInvocation",
                "src": "500:11:25"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 362,
                              "type": "function (address,address)",
                              "value": "initialize"
                            },
                            "id": 7530,
                            "name": "Identifier",
                            "src": "522:10:25"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7521,
                              "type": "address",
                              "value": "nutAddr"
                            },
                            "id": 7531,
                            "name": "Identifier",
                            "src": "533:7:25"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7523,
                              "type": "address",
                              "value": "_governor"
                            },
                            "id": 7532,
                            "name": "Identifier",
                            "src": "542:9:25"
                          }
                        ],
                        "id": 7533,
                        "name": "FunctionCall",
                        "src": "522:30:25"
                      }
                    ],
                    "id": 7534,
                    "name": "ExpressionStatement",
                    "src": "522:30:25"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 170,
                              "type": "uint256",
                              "value": "BLOCKS_PER_EPOCH"
                            },
                            "id": 7535,
                            "name": "Identifier",
                            "src": "555:16:25"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7525,
                              "type": "uint256",
                              "value": "blocks_per_epoch"
                            },
                            "id": 7536,
                            "name": "Identifier",
                            "src": "574:16:25"
                          }
                        ],
                        "id": 7537,
                        "name": "Assignment",
                        "src": "555:35:25"
                      }
                    ],
                    "id": 7538,
                    "name": "ExpressionStatement",
                    "src": "555:35:25"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            7540
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 7602,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7539,
                                "name": "ElementaryTypeName",
                                "src": "698:4:25"
                              }
                            ],
                            "id": 7540,
                            "name": "VariableDeclaration",
                            "src": "698:6:25"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 7541,
                            "name": "Literal",
                            "src": "707:1:25"
                          }
                        ],
                        "id": 7542,
                        "name": "VariableDeclarationStatement",
                        "src": "698:10:25"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7540,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 7543,
                            "name": "Identifier",
                            "src": "710:1:25"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 168,
                              "type": "uint256",
                              "value": "NUM_EPOCH"
                            },
                            "id": 7544,
                            "name": "Identifier",
                            "src": "714:9:25"
                          }
                        ],
                        "id": 7545,
                        "name": "BinaryOperation",
                        "src": "710:13:25"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7540,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 7546,
                                "name": "Identifier",
                                "src": "725:1:25"
                              }
                            ],
                            "id": 7547,
                            "name": "UnaryOperation",
                            "src": "725:3:25"
                          }
                        ],
                        "id": 7548,
                        "name": "ExpressionStatement",
                        "src": "725:3:25"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                7550
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "echo",
                                  "scope": 7601,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct NutDistributor.Echo",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Echo",
                                      "referencedDeclaration": 154,
                                      "type": "struct NutDistributor.Echo"
                                    },
                                    "id": 7549,
                                    "name": "UserDefinedTypeName",
                                    "src": "744:4:25"
                                  }
                                ],
                                "id": 7550,
                                "name": "VariableDeclaration",
                                "src": "744:17:25"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct NutDistributor.Echo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 189,
                                      "type": "mapping(uint256 => struct NutDistributor.Echo storage ref)",
                                      "value": "echoMap"
                                    },
                                    "id": 7551,
                                    "name": "Identifier",
                                    "src": "765:7:25"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7540,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 7552,
                                    "name": "Identifier",
                                    "src": "773:1:25"
                                  }
                                ],
                                "id": 7553,
                                "name": "IndexAccess",
                                "src": "765:10:25"
                              }
                            ],
                            "id": 7554,
                            "name": "VariableDeclarationStatement",
                            "src": "744:31:25"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "id",
                                      "referencedDeclaration": 149,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7550,
                                          "type": "struct NutDistributor.Echo storage pointer",
                                          "value": "echo"
                                        },
                                        "id": 7555,
                                        "name": "Identifier",
                                        "src": "789:4:25"
                                      }
                                    ],
                                    "id": 7557,
                                    "name": "MemberAccess",
                                    "src": "789:7:25"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7540,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 7558,
                                    "name": "Identifier",
                                    "src": "799:1:25"
                                  }
                                ],
                                "id": 7559,
                                "name": "Assignment",
                                "src": "789:11:25"
                              }
                            ],
                            "id": 7560,
                            "name": "ExpressionStatement",
                            "src": "789:11:25"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "endBlock",
                                      "referencedDeclaration": 151,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7550,
                                          "type": "struct NutDistributor.Echo storage pointer",
                                          "value": "echo"
                                        },
                                        "id": 7561,
                                        "name": "Identifier",
                                        "src": "814:4:25"
                                      }
                                    ],
                                    "id": 7563,
                                    "name": "MemberAccess",
                                    "src": "814:13:25"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 7933,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 165,
                                              "type": "uint256",
                                              "value": "DIST_START_BLOCK"
                                            },
                                            "id": 7564,
                                            "name": "Identifier",
                                            "src": "830:16:25"
                                          }
                                        ],
                                        "id": 7565,
                                        "name": "MemberAccess",
                                        "src": "830:20:25"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mul",
                                              "referencedDeclaration": 7989,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 170,
                                                  "type": "uint256",
                                                  "value": "BLOCKS_PER_EPOCH"
                                                },
                                                "id": 7566,
                                                "name": "Identifier",
                                                "src": "851:16:25"
                                              }
                                            ],
                                            "id": 7567,
                                            "name": "MemberAccess",
                                            "src": "851:20:25"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "tryCall": false,
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_1_by_1",
                                                      "typeString": "int_const 1"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 7933,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 7540,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 7568,
                                                    "name": "Identifier",
                                                    "src": "872:1:25"
                                                  }
                                                ],
                                                "id": 7569,
                                                "name": "MemberAccess",
                                                "src": "872:5:25"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 7570,
                                                "name": "Literal",
                                                "src": "878:1:25"
                                              }
                                            ],
                                            "id": 7571,
                                            "name": "FunctionCall",
                                            "src": "872:8:25"
                                          }
                                        ],
                                        "id": 7572,
                                        "name": "FunctionCall",
                                        "src": "851:30:25"
                                      }
                                    ],
                                    "id": 7573,
                                    "name": "FunctionCall",
                                    "src": "830:52:25"
                                  }
                                ],
                                "id": 7574,
                                "name": "Assignment",
                                "src": "814:68:25"
                              }
                            ],
                            "id": 7575,
                            "name": "ExpressionStatement",
                            "src": "814:68:25"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                7577
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "scope": 7601,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint",
                                      "type": "uint256"
                                    },
                                    "id": 7576,
                                    "name": "ElementaryTypeName",
                                    "src": "896:4:25"
                                  }
                                ],
                                "id": 7577,
                                "name": "VariableDeclaration",
                                "src": "896:11:25"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "div",
                                      "referencedDeclaration": 8011,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 173,
                                          "type": "uint256",
                                          "value": "DIST_START_AMOUNT"
                                        },
                                        "id": 7578,
                                        "name": "Identifier",
                                        "src": "910:17:25"
                                      }
                                    ],
                                    "id": 7579,
                                    "name": "MemberAccess",
                                    "src": "910:21:25"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 7933,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7540,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 7580,
                                            "name": "Identifier",
                                            "src": "932:1:25"
                                          }
                                        ],
                                        "id": 7581,
                                        "name": "MemberAccess",
                                        "src": "932:5:25"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 7582,
                                        "name": "Literal",
                                        "src": "938:1:25"
                                      }
                                    ],
                                    "id": 7583,
                                    "name": "FunctionCall",
                                    "src": "932:8:25"
                                  }
                                ],
                                "id": 7584,
                                "name": "FunctionCall",
                                "src": "910:31:25"
                              }
                            ],
                            "id": 7585,
                            "name": "VariableDeclarationStatement",
                            "src": "896:45:25"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7577,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 7586,
                                    "name": "Identifier",
                                    "src": "959:6:25"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 176,
                                      "type": "uint256",
                                      "value": "DIST_MIN_AMOUNT"
                                    },
                                    "id": 7587,
                                    "name": "Identifier",
                                    "src": "968:15:25"
                                  }
                                ],
                                "id": 7588,
                                "name": "BinaryOperation",
                                "src": "959:24:25"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7577,
                                              "type": "uint256",
                                              "value": "amount"
                                            },
                                            "id": 7589,
                                            "name": "Identifier",
                                            "src": "1003:6:25"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 176,
                                              "type": "uint256",
                                              "value": "DIST_MIN_AMOUNT"
                                            },
                                            "id": 7590,
                                            "name": "Identifier",
                                            "src": "1012:15:25"
                                          }
                                        ],
                                        "id": 7591,
                                        "name": "Assignment",
                                        "src": "1003:24:25"
                                      }
                                    ],
                                    "id": 7592,
                                    "name": "ExpressionStatement",
                                    "src": "1003:24:25"
                                  }
                                ],
                                "id": 7593,
                                "name": "Block",
                                "src": "985:57:25"
                              }
                            ],
                            "id": 7594,
                            "name": "IfStatement",
                            "src": "955:87:25"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "member_name": "amount",
                                      "referencedDeclaration": 153,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7550,
                                          "type": "struct NutDistributor.Echo storage pointer",
                                          "value": "echo"
                                        },
                                        "id": 7595,
                                        "name": "Identifier",
                                        "src": "1055:4:25"
                                      }
                                    ],
                                    "id": 7597,
                                    "name": "MemberAccess",
                                    "src": "1055:11:25"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7577,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 7598,
                                    "name": "Identifier",
                                    "src": "1069:6:25"
                                  }
                                ],
                                "id": 7599,
                                "name": "Assignment",
                                "src": "1055:20:25"
                              }
                            ],
                            "id": 7600,
                            "name": "ExpressionStatement",
                            "src": "1055:20:25"
                          }
                        ],
                        "id": 7601,
                        "name": "Block",
                        "src": "730:356:25"
                      }
                    ],
                    "id": 7602,
                    "name": "ForStatement",
                    "src": "693:393:25"
                  }
                ],
                "id": 7603,
                "name": "Block",
                "src": "512:580:25"
              }
            ],
            "id": 7604,
            "name": "FunctionDefinition",
            "src": "381:711:25"
          },
          {
            "attributes": {
              "baseFunctions": [
                1348
              ],
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 7614,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 7606,
                "name": "OverrideSpecifier",
                "src": "1188:8:25"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7605,
                "name": "ParameterList",
                "src": "1159:2:25"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 7613,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7607,
                        "name": "ElementaryTypeName",
                        "src": "1206:6:25"
                      }
                    ],
                    "id": 7608,
                    "name": "VariableDeclaration",
                    "src": "1206:13:25"
                  }
                ],
                "id": 7609,
                "name": "ParameterList",
                "src": "1205:15:25"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 7609
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "746573742e6e757464697374726962",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"test.nutdistrib\"",
                          "value": "test.nutdistrib"
                        },
                        "id": 7610,
                        "name": "Literal",
                        "src": "1238:17:25"
                      }
                    ],
                    "id": 7611,
                    "name": "Return",
                    "src": "1231:24:25"
                  }
                ],
                "id": 7612,
                "name": "Block",
                "src": "1221:40:25"
              }
            ],
            "id": 7613,
            "name": "FunctionDefinition",
            "src": "1134:127:25"
          }
        ],
        "id": 7614,
        "name": "ContractDefinition",
        "src": "300:963:25"
      }
    ],
    "id": 7615,
    "name": "SourceUnit",
    "src": "32:1232:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-29T11:24:49.132Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "collect()": {
        "details": "Collect Nut tokens"
      },
      "distribute()": {
        "details": "Distribute NUT tokens for the previous epoch"
      },
      "getCollectionAmount()": {
        "details": "getCollectionAmount get the # of NUT tokens for collection"
      },
      "setNutmegAddress(address)": {
        "details": "Set the Nutmeg"
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "addr": "The address of the pending governor."
        }
      },
      "setPriceOracle(address)": {
        "details": "Set the oracle"
      },
      "updateVtb(address,address,uint256,uint256)": {
        "params": {
          "decAmount": "false=subtract/unstake true=add/stake",
          "incAmount": "to stake or unstake",
          "lender": "Address of the lender.",
          "token": "Base token of the pool."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "updateVtb(address,address,uint256,uint256)": {
        "notice": "Update valueTimesBlocks of pools and the lender when they stake or unstake"
      }
    },
    "version": 1
  }
}