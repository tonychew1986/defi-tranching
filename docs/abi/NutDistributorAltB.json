{
  "contractName": "NutDistributorAltB",
  "abi": [
    {
      "inputs": [],
      "name": "BLOCKS_PER_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "CURRENT_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DIST_MIN_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DIST_START_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DIST_START_BLOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MAX_NUM_POOLS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "NUM_EPOCH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "acceptGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "distCompletionMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "echoMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getCollectionAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getTotalVtb",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getVtb",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "inNutDistribution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nutAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_governor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nut",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nutmeg",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setNutmegAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setPendingGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalNutMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalVtbMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "incAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decAmount",
          "type": "uint256"
        }
      ],
      "name": "updateVtb",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vtbMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getVersionString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BLOCKS_PER_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CURRENT_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_MIN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_START_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIST_START_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUM_POOLS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUM_EPOCH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distCompletionMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"echoMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getTotalVtb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getVtb\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inNutDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nutAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nut\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nutmeg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setNutmegAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setPendingGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalNutMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalVtbMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"incAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decAmount\",\"type\":\"uint256\"}],\"name\":\"updateVtb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vtbMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptGovernor()\":{\"details\":\"Accept to become the new governor. Must be called by the pending governor.\"},\"collect()\":{\"details\":\"Collect Nut tokens\"},\"distribute()\":{\"details\":\"Distribute NUT tokens for the previous epoch\"},\"getCollectionAmount()\":{\"details\":\"getCollectionAmount get the # of NUT tokens for collection\"},\"setNutmegAddress(address)\":{\"details\":\"Set the Nutmeg\"},\"setPendingGovernor(address)\":{\"details\":\"Set the pending governor, which will be the governor once accepted.\",\"params\":{\"addr\":\"The address of the pending governor.\"}},\"setPriceOracle(address)\":{\"details\":\"Set the oracle\"},\"updateVtb(address,address,uint256,uint256)\":{\"params\":{\"decAmount\":\"false=subtract/unstake true=add/stake\",\"incAmount\":\"to stake or unstake\",\"lender\":\"Address of the lender.\",\"token\":\"Base token of the pool.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateVtb(address,address,uint256,uint256)\":{\"notice\":\"Update valueTimesBlocks of pools and the lender when they stake or unstake\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol\":\"NutDistributorAltB\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol\":{\"keccak256\":\"0x164fa287cb7f0833d47f213c6563aac0c2f61a1f46575fbbadf7b030e3368721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bd4bd70c797afc8d134241311274a0bb1dfa311740d68363e86fdead06c205\",\"dweb:/ipfs/QmUeX8gZtoevYfimGeFeoC6os11fvVP2NAH2KjZ1HovgJo\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol\":{\"keccak256\":\"0xaec1ef50d3ffe65491e7e585b01d4b3d720978181f2a2cdf39f4f88e15f01447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42de7a229ffb238c0bdaffe81684d0255c51d66656df33e824c116cad026e929\",\"dweb:/ipfs/QmUGyMhLa1q5x13uFrxggZUPiN5Zs2TBFgUGXg3sdCseF4\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol\":{\"keccak256\":\"0xec22934ce79e5b432b1588d1067863141a0131b3acf2a7f5720d4af30140ff9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ee98aeae4cf87699cc6baaf33b512970c528bb5f6da72ab834f7647b9471be\",\"dweb:/ipfs/QmZK8Piyy7r65VG85UwdxgcHiBB4L37KqDkf2TP28saGfs\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/IAdapter.sol\":{\"keccak256\":\"0x9c0c8c5c306da5adf24ed7a812b8b762a60336e046de50e1a1434871031ee083\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53387787b79dbcd0044af7ec17936182ee1e727374652643f013b79b366aae34\",\"dweb:/ipfs/QmTWMRzFMBbYGu538JJaKFGuWXL2kPM9twzDmaeNGtWPhJ\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/ICERC20.sol\":{\"keccak256\":\"0x5a53741cc0ceb8e3cd8301ebb3e16c32d1f5d0351cd847781b07a678815064fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b0c373b5464bb0190587b30662539b5f529a50da38388f72d4ffe3234f0fdbc\",\"dweb:/ipfs/QmdekemkwwJgXYzKTAYx11piqwci6w3AXsYBfSu24ubPc8\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INut.sol\":{\"keccak256\":\"0x51a91900051435bf5db864c8c5b571534bc8c7c82ec8fe87c89b8fbb5446d3d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5fba848914fff401fe817f8817653db61e16b79737a73961ce7d7f21903a920\",\"dweb:/ipfs/QmSXoiFF79SrLwePefJ3dpabAG6jyZVuWu6jnFJyaPDf2g\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutDistributor.sol\":{\"keccak256\":\"0x441750edaefb061efe22deb9a76b990daa208488544010e2a7e9c792c12982f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b4ddc07e6e3b612a5ec6331bfa4ae6d50d5fe9a5176dfb092c9eff57974d7c3\",\"dweb:/ipfs/QmSphPKxWJJubH7H1Bwz9VEmhmNmJf82d8GP4DqkDn7yJS\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol\":{\"keccak256\":\"0x6b0be2736dddc06add4c6142ac5c583fa5a5fce16efa8599f06d3feb85c5fe6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1253a22c3183ffed23ba4c6324388267614e1e03aeda7d65d96199bdfbc4c21\",\"dweb:/ipfs/QmNv6vQYqn7ZE6c98vWi6KBLLQ5jsvVF3Uy2WSDtAfwZPc\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x1e35d99985588565937c6e0f0ac288dcff45b706bb5d68aacb3d2ff78568cbaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a038862ece49ded74cb16890cfd008ab1881e0974f001e7dfba06d7dbdf0b57b\",\"dweb:/ipfs/Qma9HfzmKHBhVM3waiQ3brWqcRUJhiFpKj9x84rdfL9a2T\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/lib/Governable.sol\":{\"keccak256\":\"0xc1b72d60ccb557e1bb582518ecc6c585399c0725dc9e3eed7a36c496985931ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e8db0b1250fb94ebe9ac42c4d120cdcbc469a04d2b39e820eb086bf436288cc\",\"dweb:/ipfs/QmS5kkFnLrSpRZbgWXfNftEobpDqvNZiAaidZ7rcjDxpuH\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/lib/Math.sol\":{\"keccak256\":\"0x9580aa583ab80b7790ff938253449a0941e3b8d1452564507bde181b9334b8bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c661596637988032f827d3ad463f5a5c95d7a2a108fdd6cc13e1646f78cae530\",\"dweb:/ipfs/QmWvd2c8hbiRfKLNLhq9Sd1ryZee3Tuv4YmoorAneD1dUd\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol\":{\"keccak256\":\"0x2d923fe611a66e33df9fed83f9e0c44cf3ebbde48fc6343638fa77f4c8406090\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44a4e9e0aad14deec0e888d1ffbcfd52ebefadc260a97c460b17129948d1f227\",\"dweb:/ipfs/QmaDzdzBu3qGCqgg6vECKp3CLpEyaAD8FdmKJb7Xace9Bx\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol\":{\"keccak256\":\"0xcec8c1654f876aea2954f2fc98279a90ddd0c1022de02feb370dbbf138c56772\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e776574ead42e0a0083caf3fa121a6e9783638c3d9b549b95da76fbb370ad7e\",\"dweb:/ipfs/QmWkATJ3NeHv9ap7zqMxRzJez4JN7dk1Q3vc9DsPCfGhmM\"]},\"/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol\":{\"keccak256\":\"0x28c347a6d3819d61cb99c8e8339693a18dd97df1320ffc0ab26f759c3c77f499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb12ddb22284ea467ee67657cea1b530a299a1ec634cb0ee2c40f4be1b09fd0\",\"dweb:/ipfs/QmaqUv3uS9GGR4Ay8jr4jHiL6FiNFBLwH3mxti2ck4VVqV\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/proxy/Initializable.sol\":{\"keccak256\":\"0x9abeffe138f098b16557187383ba0f9e8503602fa95cd668132986ee115237ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb863d688f8bf04b846369451afba15e8129b2ee16bd1631c12138c262d1bf68\",\"dweb:/ipfs/QmRE3EmJ1T4Hg5HjGHVupP2a3Vrnd8jRY8GtB6J52QNX9z\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506120cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063625372db1161010f578063ad8102fa116100a2578063e4fc6b6d11610071578063e4fc6b6d14610394578063e52253811461039c578063e58bb639146103a4578063f235757f146103ac576101e5565b8063ad8102fa1461035e578063bf47c26414610366578063d44b7af114610379578063e3056a341461038c576101e5565b80638b159cee116100de5780638b159cee1461031d5780639107a25f14610330578063960874d814610338578063ac4afa381461034b576101e5565b8063625372db146102f2578063656d565e14610305578063763f31a21461030d5780637dc0d1d014610315576101e5565b80632c6bb55411610187578063485cc95511610156578063485cc955146102955780634ce41ac0146102aa5780634d24cff0146102cc578063530e784f146102df576101e5565b80632c6bb5541461026a578063325140ea146102725780633d02df6f1461027a5780633fde3f9f14610282576101e5565b8063153173d6116101c3578063153173d61461023257806315d3b7a0146102525780631f3adc0f1461025a5780632962420714610262576101e5565b80630374119e146101ea57806305b540f2146102085780630c340a241461021d575b600080fd5b6101f26103bf565b6040516101ff9190611f10565b60405180910390f35b6102106103cd565b6040516101ff9190611ebd565b6102256103f9565b6040516101ff9190611e9e565b610245610240366004611e86565b61040e565b6040516101ff9190611eb2565b610225610423565b6101f2610432565b6101f2610438565b6101f261043e565b6101f261059f565b6102456105a5565b6101f2610290366004611e5d565b6105d7565b6102a86102a3366004611daf565b6105fc565b005b6102bd6102b8366004611e86565b610768565b6040516101ff93929190611f19565b6101f26102da366004611e5d565b610789565b6102a86102ed366004611d95565b61083f565b6102a8610300366004611e1c565b6108b0565b610225610dae565b6101f2610dbd565b610225610dc3565b6101f261032b366004611e5d565b610dd2565b6101f2610dee565b6101f2610346366004611de1565b610df3565b610225610359366004611e86565b610eca565b6101f2610ef4565b6101f2610374366004611de1565b610f02565b6102a8610387366004611d95565b610f34565b610225610fa5565b6102a8610fb4565b6102a86114a6565b6102a8611882565b6102a86103ba366004611d95565b6118f6565b6934f086f3b33b6840000081565b604080518082019091526012815271373aba3234b9ba3934b13aba37b930b63a3160711b602082015290565b6000546201000090046001600160a01b031681565b600b6020526000908152604090205460ff1681565b6003546001600160a01b031681565b60065481565b60075481565b60008061046260065461045c6005544361196790919063ffffffff16565b906119c4565b9050600081116104a35760405162461bcd60e51b815260040180806020018281038252602e815260200180611ff6602e913960400191505060405180910390fd5b6009543390600090610100116104bb576101006104bf565b6009545b90506000805b82811015610596576000600982815481106104dc57fe5b60009182526020822001546001600160a01b031691505b86811080156105025750600f81105b1561058c576000610514838884610df3565b905060008111801561052f5750600061052d8484610789565b115b156105835760006105736105438585610789565b6001600160a01b0386166000908152600d6020526040902061045c9086600f811061056a57fe5b01548590611a2b565b905061057f8682611a84565b9550505b506001016104f3565b50506001016104c5565b50935050505090565b60055481565b600060055443101580156105d257506006546105cf906105c690600f611a2b565b60055490611a84565b43105b905090565b600c60205281600052604060002081600f81106105f357600080fd5b01549150829050565b600054610100900460ff16806106155750610615611ade565b80610623575060005460ff16155b61065e5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f7d602e913960400191505060405180910390fd5b600054610100900460ff16158015610689576000805460ff1961ff0019909116610100171660011790555b600380546001600160a01b0319166001600160a01b0385161790554360055562013b006006556106b882611aef565b60005b600f811015610750576000818152600a602052604090208181556106ef6105c66106e6846001611a84565b60065490611a2b565b81600101819055506000610721610710600185611a8490919063ffffffff16565b6934f086f3b33b68400000906119c4565b90506903f870857a3e0e38000081101561074257506903f870857a3e0e3800005b6002909101556001016106bb565b508015610763576000805461ff00191690555b505050565b600a6020526000908152604090208054600182015460029092015490919083565b6000600f82106107d3576040805162461bcd60e51b815260206004820152601060248201526f3a37ba30b62b3a311034b23c1032b93960811b604482015290519081900360640190fd5b6001600160a01b0383166000908152601160205260409020548210610810576001600160a01b0383166000908152600f6020526040902054610836565b6001600160a01b0383166000908152600c6020526040902082600f811061083357fe5b01545b90505b92915050565b6000546201000090046001600160a01b0316331461088e576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610906576040805162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b9d5d1b5959c818d85b8818d85b1b60621b604482015290519081900360640190fd5b60055443101561095d576040805162461bcd60e51b815260206004820152601f60248201527f7570646174655674623a20696e76616c696420626c6f636b206e756d62657200604482015290519081900360640190fd5b811580610968575080155b6109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806120246023913960400191505060405180910390fd5b60006109af8383611a84565b9050600081116109f05760405162461bcd60e51b815260040180806020018281038252602b815260200180611f52602b913960400191505060405180910390fd5b610a0b60065461045c6005544361196790919063ffffffff16565b6007819055600f11610a1d5750610da8565b610a278585611bb4565b610a3085611cb4565b6007546000908152600a6020526040812060010154610a5b908390610a559043611967565b90611a2b565b90506000610a7483600654611a2b90919063ffffffff16565b90508415610bd0576001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610abc918491600f8110610ab457fe5b015490611a84565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610aee57fe5b01556001600160a01b0387166000908152600c60205260409020600754610b1b918491600f8110610ab457fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610b4057fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610b729082611a84565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610bb29082611a84565b6001600160a01b0388166000908152600f6020526040902055610d20565b6001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610c10918491600f8110610c0857fe5b015490611967565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610c4257fe5b01556001600160a01b0387166000908152600c60205260409020600754610c6f918491600f8110610c0857fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610c9457fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610cc69082611967565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610d069082611967565b6001600160a01b0388166000908152600f60205260409020555b6001600160a01b03871660009081526008602052604090205460ff16610da4576009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b038a169081179091556000908152600860205260409020805460ff191690911790555b5050505b50505050565b6002546001600160a01b031681565b61010081565b6004546001600160a01b031681565b600d60205281600052604060002081600f81106105f357600080fd5b600f81565b6000600f8210610e38576040805162461bcd60e51b815260206004820152600b60248201526a3b3a311034b23c1032b93960a91b604482015290519081900360640190fd5b6001600160a01b038085166000908152601260209081526040808320938716835292905220548210610e8f576001600160a01b03808516600090815260106020908152604080832093871683529290522054610ec2565b6001600160a01b038085166000908152600e6020908152604080832093871683529290522082600f8110610ebf57fe5b01545b949350505050565b60098181548110610eda57600080fd5b6000918252602090912001546001600160a01b0316905081565b6903f870857a3e0e38000081565b600e60205282600052604060002060205281600052604060002081600f8110610f2a57600080fd5b0154925083915050565b6000546201000090046001600160a01b03163314610f83576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546201000090046001600160a01b03163314611003576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b6004546001600160a01b0316611060576040805162461bcd60e51b815260206004820152601f60248201527f646973747269627574653a206e6f206f7261636c6520617661696c61626c6500604482015290519081900360640190fd5b600061107d60065461045c6005544361196790919063ffffffff16565b9050600081116110be5760405162461bcd60e51b815260040180806020018281038252602c81526020018061206c602c913960400191505060405180910390fd5b6110ca600f6001611a84565b81106111075760405162461bcd60e51b815260040180806020018281038252602a815260200180611fcc602a913960400191505060405180910390fd5b6000611114826001611967565b6000818152600b602052604090205490915060ff16156111655760405162461bcd60e51b81526004018080602001828103825260258152602001806120476025913960400191505060405180910390fd5b6000818152600a60205260408082206002015460035482516340c10f1960e01b815230600482015260248101839052925191936001600160a01b03909116926340c10f19926044808301939282900301818387803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b505050506000610100600980549050106111f6576101006111fa565b6009545b905060008060005b838110156112fe57600454600980546000926001600160a01b0316916341976e09918590811061122e57fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b15801561127c57600080fd5b505afa158015611290573d6000803e3d6000fd5b505050506040513d60208110156112a657600080fd5b5051600980549192506000916112e6916112df91869081106112c457fe5b6000918252602090912001546001600160a01b03168a610789565b8390611a2b565b90506112f28582611a84565b94505050600101611202565b50811561143a5760005b8381101561143857600454600980546000926001600160a01b0316916341976e09918590811061133457fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b15801561138257600080fd5b505afa158015611396573d6000803e3d6000fd5b505050506040513d60208110156113ac57600080fd5b5051600980549192506000916113ca916112df91869081106112c457fe5b905060006113dc8661045c848b611a2b565b90506113e88582611a84565b945080600d6000600987815481106113fc57fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190208a600f811061142b57fe5b0155505050600101611308565b505b83811115611486576040805162461bcd60e51b8152602060048201526014602482015273646973747269627574653a206f766572666c6f7760601b604482015290519081900360640190fd5b505050600091825250600b60205260409020805460ff1916600117905550565b60006114c360065461045c6005544361196790919063ffffffff16565b9050600081116115045760405162461bcd60e51b8152600401808060200182810382526022815260200180611f306022913960400191505060405180910390fd5b60095433906000906101001161151c57610100611520565b6009545b90506000805b828110156115fd5760006009828154811061153d57fe5b60009182526020822001546001600160a01b031691505b86811080156115635750600f81105b156115f3576000611575838884610df3565b90506000811180156115905750600061158e8484610789565b115b156115ea5760006115a46105438585610789565b90506115b08682611a84565b6001600160a01b038086166000908152600e60209081526040808320938d1683529290529081209197509084600f81106115e657fe5b0155505b50600101611554565b5050600101611526565b508015610da8576003546040805163095ea7b360e01b815230600482015260006024820181905291516001600160a01b039093169263095ea7b392604480840193602093929083900390910190829087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b505050506040513d602081101561168557600080fd5b50516116d8576040805162461bcd60e51b815260206004820152601a60248201527f6469737472696275746f7220617070726f7665206661696c6564000000000000604482015290519081900360640190fd5b6003546040805163095ea7b360e01b81523060048201526024810184905290516001600160a01b039092169163095ea7b3916044808201926020929091908290030181600087803b15801561172c57600080fd5b505af1158015611740573d6000803e3d6000fd5b505050506040513d602081101561175657600080fd5b50516117a9576040805162461bcd60e51b815260206004820152601d60248201527f4e75744469737420617070726f766520616d6f756e74206661696c6564000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523060048201526001600160a01b03868116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561180557600080fd5b505af1158015611819573d6000803e3d6000fd5b505050506040513d602081101561182f57600080fd5b5051610da8576040805162461bcd60e51b815260206004820152601760248201527f4e757444697374207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146118cb576040805162461bcd60e51b81526020600482015260076024820152661b9bc81c195b9960ca1b604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000002179055565b6000546201000090046001600160a01b03163314611945576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156119be576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611a1a576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611a2357fe5b049392505050565b600082611a3a57506000610839565b82820282848281611a4757fe5b04146108365760405162461bcd60e51b8152600401808060200182810382526021815260200180611fab6021913960400191505060405180910390fd5b600082820183811015610836576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611ae930611d74565b15905090565b600054610100900460ff1680611b085750611b08611ade565b80611b16575060005460ff16155b611b515760405162461bcd60e51b815260040180806020018281038252602e815260200180611f7d602e913960400191505060405180910390fd5b600054610100900460ff16158015611b7c576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015611bb0576000805461ff00191690555b5050565b6007546001600160a01b038084166000908152601260209081526040808320938616835292905220541180611bec5750600f60075410155b15611bf657611bb0565b6001600160a01b038083166000818152601060209081526040808320948616808452948252808320549383526012825280832094835293905291909120545b6007548111611c7a576001600160a01b038085166000908152600e60209081526040808320938716835292905220829082600f8110611c7057fe5b0155600101611c35565b50600754611c89906001611a84565b6001600160a01b03808516600090815260126020908152604080832093871683529290522055505050565b6007546001600160a01b0382166000908152601160205260409020541180611cdf5750600f60075410155b15611ce957611d71565b6001600160a01b0381166000908152600f60209081526040808320546011909252909120545b6007548111611d47576001600160a01b0383166000908152600c60205260409020829082600f8110611d3d57fe5b0155600101611d0f565b50600754611d56906001611a84565b6001600160a01b038316600090815260116020526040902055505b50565b803b15155b919050565b80356001600160a01b0381168114611d7957600080fd5b600060208284031215611da6578081fd5b61083682611d7e565b60008060408385031215611dc1578081fd5b611dca83611d7e565b9150611dd860208401611d7e565b90509250929050565b600080600060608486031215611df5578081fd5b611dfe84611d7e565b9250611e0c60208501611d7e565b9150604084013590509250925092565b60008060008060808587031215611e31578081fd5b611e3a85611d7e565b9350611e4860208601611d7e565b93969395505050506040820135916060013590565b60008060408385031215611e6f578182fd5b611e7883611d7e565b946020939093013593505050565b600060208284031215611e97578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015611ee957858101830151858201604001528201611ecd565b81811115611efa5783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b928352602083019190915260408201526060019056fe636f6c6c6563743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e742073686f756c6420626520706f736974697665496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206973206f766572676574436f6c6c656374696f6e416d6f756e743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e7420697320696e76616c6964646973747269627574653a20646973747269627574696f6e20697320636f6d706c65746564646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206e6f74207265616479a2646970667358221220aa46cd0a1e15883abb5d68062eceaf03e7478ab92fb90dc902ecf4f840e7388064736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c8063625372db1161010f578063ad8102fa116100a2578063e4fc6b6d11610071578063e4fc6b6d14610394578063e52253811461039c578063e58bb639146103a4578063f235757f146103ac576101e5565b8063ad8102fa1461035e578063bf47c26414610366578063d44b7af114610379578063e3056a341461038c576101e5565b80638b159cee116100de5780638b159cee1461031d5780639107a25f14610330578063960874d814610338578063ac4afa381461034b576101e5565b8063625372db146102f2578063656d565e14610305578063763f31a21461030d5780637dc0d1d014610315576101e5565b80632c6bb55411610187578063485cc95511610156578063485cc955146102955780634ce41ac0146102aa5780634d24cff0146102cc578063530e784f146102df576101e5565b80632c6bb5541461026a578063325140ea146102725780633d02df6f1461027a5780633fde3f9f14610282576101e5565b8063153173d6116101c3578063153173d61461023257806315d3b7a0146102525780631f3adc0f1461025a5780632962420714610262576101e5565b80630374119e146101ea57806305b540f2146102085780630c340a241461021d575b600080fd5b6101f26103bf565b6040516101ff9190611f10565b60405180910390f35b6102106103cd565b6040516101ff9190611ebd565b6102256103f9565b6040516101ff9190611e9e565b610245610240366004611e86565b61040e565b6040516101ff9190611eb2565b610225610423565b6101f2610432565b6101f2610438565b6101f261043e565b6101f261059f565b6102456105a5565b6101f2610290366004611e5d565b6105d7565b6102a86102a3366004611daf565b6105fc565b005b6102bd6102b8366004611e86565b610768565b6040516101ff93929190611f19565b6101f26102da366004611e5d565b610789565b6102a86102ed366004611d95565b61083f565b6102a8610300366004611e1c565b6108b0565b610225610dae565b6101f2610dbd565b610225610dc3565b6101f261032b366004611e5d565b610dd2565b6101f2610dee565b6101f2610346366004611de1565b610df3565b610225610359366004611e86565b610eca565b6101f2610ef4565b6101f2610374366004611de1565b610f02565b6102a8610387366004611d95565b610f34565b610225610fa5565b6102a8610fb4565b6102a86114a6565b6102a8611882565b6102a86103ba366004611d95565b6118f6565b6934f086f3b33b6840000081565b604080518082019091526012815271373aba3234b9ba3934b13aba37b930b63a3160711b602082015290565b6000546201000090046001600160a01b031681565b600b6020526000908152604090205460ff1681565b6003546001600160a01b031681565b60065481565b60075481565b60008061046260065461045c6005544361196790919063ffffffff16565b906119c4565b9050600081116104a35760405162461bcd60e51b815260040180806020018281038252602e815260200180611ff6602e913960400191505060405180910390fd5b6009543390600090610100116104bb576101006104bf565b6009545b90506000805b82811015610596576000600982815481106104dc57fe5b60009182526020822001546001600160a01b031691505b86811080156105025750600f81105b1561058c576000610514838884610df3565b905060008111801561052f5750600061052d8484610789565b115b156105835760006105736105438585610789565b6001600160a01b0386166000908152600d6020526040902061045c9086600f811061056a57fe5b01548590611a2b565b905061057f8682611a84565b9550505b506001016104f3565b50506001016104c5565b50935050505090565b60055481565b600060055443101580156105d257506006546105cf906105c690600f611a2b565b60055490611a84565b43105b905090565b600c60205281600052604060002081600f81106105f357600080fd5b01549150829050565b600054610100900460ff16806106155750610615611ade565b80610623575060005460ff16155b61065e5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f7d602e913960400191505060405180910390fd5b600054610100900460ff16158015610689576000805460ff1961ff0019909116610100171660011790555b600380546001600160a01b0319166001600160a01b0385161790554360055562013b006006556106b882611aef565b60005b600f811015610750576000818152600a602052604090208181556106ef6105c66106e6846001611a84565b60065490611a2b565b81600101819055506000610721610710600185611a8490919063ffffffff16565b6934f086f3b33b68400000906119c4565b90506903f870857a3e0e38000081101561074257506903f870857a3e0e3800005b6002909101556001016106bb565b508015610763576000805461ff00191690555b505050565b600a6020526000908152604090208054600182015460029092015490919083565b6000600f82106107d3576040805162461bcd60e51b815260206004820152601060248201526f3a37ba30b62b3a311034b23c1032b93960811b604482015290519081900360640190fd5b6001600160a01b0383166000908152601160205260409020548210610810576001600160a01b0383166000908152600f6020526040902054610836565b6001600160a01b0383166000908152600c6020526040902082600f811061083357fe5b01545b90505b92915050565b6000546201000090046001600160a01b0316331461088e576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610906576040805162461bcd60e51b81526020600482015260146024820152731bdb9b1e481b9d5d1b5959c818d85b8818d85b1b60621b604482015290519081900360640190fd5b60055443101561095d576040805162461bcd60e51b815260206004820152601f60248201527f7570646174655674623a20696e76616c696420626c6f636b206e756d62657200604482015290519081900360640190fd5b811580610968575080155b6109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806120246023913960400191505060405180910390fd5b60006109af8383611a84565b9050600081116109f05760405162461bcd60e51b815260040180806020018281038252602b815260200180611f52602b913960400191505060405180910390fd5b610a0b60065461045c6005544361196790919063ffffffff16565b6007819055600f11610a1d5750610da8565b610a278585611bb4565b610a3085611cb4565b6007546000908152600a6020526040812060010154610a5b908390610a559043611967565b90611a2b565b90506000610a7483600654611a2b90919063ffffffff16565b90508415610bd0576001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610abc918491600f8110610ab457fe5b015490611a84565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610aee57fe5b01556001600160a01b0387166000908152600c60205260409020600754610b1b918491600f8110610ab457fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610b4057fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610b729082611a84565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610bb29082611a84565b6001600160a01b0388166000908152600f6020526040902055610d20565b6001600160a01b038088166000908152600e60209081526040808320938a16835292905220600754610c10918491600f8110610c0857fe5b015490611967565b6001600160a01b038089166000908152600e60209081526040808320938b16835292905220600754600f8110610c4257fe5b01556001600160a01b0387166000908152600c60205260409020600754610c6f918491600f8110610c0857fe5b6001600160a01b0388166000908152600c60205260409020600754600f8110610c9457fe5b01556001600160a01b038088166000908152601060209081526040808320938a1683529290522054610cc69082611967565b6001600160a01b038089166000818152601060209081526040808320948c16835293815283822094909455908152600f909252902054610d069082611967565b6001600160a01b0388166000908152600f60205260409020555b6001600160a01b03871660009081526008602052604090205460ff16610da4576009805460018082019092557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b038a169081179091556000908152600860205260409020805460ff191690911790555b5050505b50505050565b6002546001600160a01b031681565b61010081565b6004546001600160a01b031681565b600d60205281600052604060002081600f81106105f357600080fd5b600f81565b6000600f8210610e38576040805162461bcd60e51b815260206004820152600b60248201526a3b3a311034b23c1032b93960a91b604482015290519081900360640190fd5b6001600160a01b038085166000908152601260209081526040808320938716835292905220548210610e8f576001600160a01b03808516600090815260106020908152604080832093871683529290522054610ec2565b6001600160a01b038085166000908152600e6020908152604080832093871683529290522082600f8110610ebf57fe5b01545b949350505050565b60098181548110610eda57600080fd5b6000918252602090912001546001600160a01b0316905081565b6903f870857a3e0e38000081565b600e60205282600052604060002060205281600052604060002081600f8110610f2a57600080fd5b0154925083915050565b6000546201000090046001600160a01b03163314610f83576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6000546201000090046001600160a01b03163314611003576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b6004546001600160a01b0316611060576040805162461bcd60e51b815260206004820152601f60248201527f646973747269627574653a206e6f206f7261636c6520617661696c61626c6500604482015290519081900360640190fd5b600061107d60065461045c6005544361196790919063ffffffff16565b9050600081116110be5760405162461bcd60e51b815260040180806020018281038252602c81526020018061206c602c913960400191505060405180910390fd5b6110ca600f6001611a84565b81106111075760405162461bcd60e51b815260040180806020018281038252602a815260200180611fcc602a913960400191505060405180910390fd5b6000611114826001611967565b6000818152600b602052604090205490915060ff16156111655760405162461bcd60e51b81526004018080602001828103825260258152602001806120476025913960400191505060405180910390fd5b6000818152600a60205260408082206002015460035482516340c10f1960e01b815230600482015260248101839052925191936001600160a01b03909116926340c10f19926044808301939282900301818387803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b505050506000610100600980549050106111f6576101006111fa565b6009545b905060008060005b838110156112fe57600454600980546000926001600160a01b0316916341976e09918590811061122e57fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b15801561127c57600080fd5b505afa158015611290573d6000803e3d6000fd5b505050506040513d60208110156112a657600080fd5b5051600980549192506000916112e6916112df91869081106112c457fe5b6000918252602090912001546001600160a01b03168a610789565b8390611a2b565b90506112f28582611a84565b94505050600101611202565b50811561143a5760005b8381101561143857600454600980546000926001600160a01b0316916341976e09918590811061133457fe5b60009182526020918290200154604080516001600160e01b031960e086901b1681526001600160a01b0390921660048301525160248083019392829003018186803b15801561138257600080fd5b505afa158015611396573d6000803e3d6000fd5b505050506040513d60208110156113ac57600080fd5b5051600980549192506000916113ca916112df91869081106112c457fe5b905060006113dc8661045c848b611a2b565b90506113e88582611a84565b945080600d6000600987815481106113fc57fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190208a600f811061142b57fe5b0155505050600101611308565b505b83811115611486576040805162461bcd60e51b8152602060048201526014602482015273646973747269627574653a206f766572666c6f7760601b604482015290519081900360640190fd5b505050600091825250600b60205260409020805460ff1916600117905550565b60006114c360065461045c6005544361196790919063ffffffff16565b9050600081116115045760405162461bcd60e51b8152600401808060200182810382526022815260200180611f306022913960400191505060405180910390fd5b60095433906000906101001161151c57610100611520565b6009545b90506000805b828110156115fd5760006009828154811061153d57fe5b60009182526020822001546001600160a01b031691505b86811080156115635750600f81105b156115f3576000611575838884610df3565b90506000811180156115905750600061158e8484610789565b115b156115ea5760006115a46105438585610789565b90506115b08682611a84565b6001600160a01b038086166000908152600e60209081526040808320938d1683529290529081209197509084600f81106115e657fe5b0155505b50600101611554565b5050600101611526565b508015610da8576003546040805163095ea7b360e01b815230600482015260006024820181905291516001600160a01b039093169263095ea7b392604480840193602093929083900390910190829087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b505050506040513d602081101561168557600080fd5b50516116d8576040805162461bcd60e51b815260206004820152601a60248201527f6469737472696275746f7220617070726f7665206661696c6564000000000000604482015290519081900360640190fd5b6003546040805163095ea7b360e01b81523060048201526024810184905290516001600160a01b039092169163095ea7b3916044808201926020929091908290030181600087803b15801561172c57600080fd5b505af1158015611740573d6000803e3d6000fd5b505050506040513d602081101561175657600080fd5b50516117a9576040805162461bcd60e51b815260206004820152601d60248201527f4e75744469737420617070726f766520616d6f756e74206661696c6564000000604482015290519081900360640190fd5b600354604080516323b872dd60e01b81523060048201526001600160a01b03868116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b15801561180557600080fd5b505af1158015611819573d6000803e3d6000fd5b505050506040513d602081101561182f57600080fd5b5051610da8576040805162461bcd60e51b815260206004820152601760248201527f4e757444697374207472616e73666572206661696c6564000000000000000000604482015290519081900360640190fd5b6001546001600160a01b031633146118cb576040805162461bcd60e51b81526020600482015260076024820152661b9bc81c195b9960ca1b604482015290519081900360640190fd5b600180546001600160a01b03191690556000805462010000600160b01b031916336201000002179055565b6000546201000090046001600160a01b03163314611945576040805162461bcd60e51b81526020600482015260076024820152663130b21033b7bb60c91b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000828211156119be576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000808211611a1a576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611a2357fe5b049392505050565b600082611a3a57506000610839565b82820282848281611a4757fe5b04146108365760405162461bcd60e51b8152600401808060200182810382526021815260200180611fab6021913960400191505060405180910390fd5b600082820183811015610836576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000611ae930611d74565b15905090565b600054610100900460ff1680611b085750611b08611ade565b80611b16575060005460ff16155b611b515760405162461bcd60e51b815260040180806020018281038252602e815260200180611f7d602e913960400191505060405180910390fd5b600054610100900460ff16158015611b7c576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015611bb0576000805461ff00191690555b5050565b6007546001600160a01b038084166000908152601260209081526040808320938616835292905220541180611bec5750600f60075410155b15611bf657611bb0565b6001600160a01b038083166000818152601060209081526040808320948616808452948252808320549383526012825280832094835293905291909120545b6007548111611c7a576001600160a01b038085166000908152600e60209081526040808320938716835292905220829082600f8110611c7057fe5b0155600101611c35565b50600754611c89906001611a84565b6001600160a01b03808516600090815260126020908152604080832093871683529290522055505050565b6007546001600160a01b0382166000908152601160205260409020541180611cdf5750600f60075410155b15611ce957611d71565b6001600160a01b0381166000908152600f60209081526040808320546011909252909120545b6007548111611d47576001600160a01b0383166000908152600c60205260409020829082600f8110611d3d57fe5b0155600101611d0f565b50600754611d56906001611a84565b6001600160a01b038316600090815260116020526040902055505b50565b803b15155b919050565b80356001600160a01b0381168114611d7957600080fd5b600060208284031215611da6578081fd5b61083682611d7e565b60008060408385031215611dc1578081fd5b611dca83611d7e565b9150611dd860208401611d7e565b90509250929050565b600080600060608486031215611df5578081fd5b611dfe84611d7e565b9250611e0c60208501611d7e565b9150604084013590509250925092565b60008060008060808587031215611e31578081fd5b611e3a85611d7e565b9350611e4860208601611d7e565b93969395505050506040820135916060013590565b60008060408385031215611e6f578182fd5b611e7883611d7e565b946020939093013593505050565b600060208284031215611e97578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015611ee957858101830151858201604001528201611ecd565b81811115611efa5783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b928352602083019190915260408201526060019056fe636f6c6c6563743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e742073686f756c6420626520706f736974697665496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206973206f766572676574436f6c6c656374696f6e416d6f756e743a20646973747269627574696f6e20697320636f6d706c657465647570646174655674623a2075706461746520616d6f756e7420697320696e76616c6964646973747269627574653a20646973747269627574696f6e20697320636f6d706c65746564646973747269627574653a206e757420746f6b656e20646973747269627574696f6e206e6f74207265616479a2646970667358221220aa46cd0a1e15883abb5d68062eceaf03e7478ab92fb90dc902ecf4f840e7388064736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3416:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:35"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:35"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:35"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:35",
                "type": ""
              }
            ],
            "src": "14:175:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:35",
                "type": ""
              }
            ],
            "src": "194:198:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:35",
                "type": ""
              }
            ],
            "src": "397:274:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:35"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:35",
                "type": ""
              }
            ],
            "src": "676:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:290:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1191:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1200:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1208:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1193:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1193:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1226:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1257:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1236:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1276:50:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1286:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:40:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1276:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1335:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1362:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1373:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1358:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1358:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1345:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1335:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1386:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1413:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1424:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1409:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1396:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1086:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1097:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1109:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1117:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1125:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1133:6:35",
                "type": ""
              }
            ],
            "src": "1023:411:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1526:179:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1572:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1581:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1589:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1574:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1574:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1574:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1547:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1556:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1543:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1543:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1568:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1539:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1536:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1607:41:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1617:20:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1617:31:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1607:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1657:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1684:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1695:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1667:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1657:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1484:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1495:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1507:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1515:6:35",
                "type": ""
              }
            ],
            "src": "1439:266:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:120:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1826:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1835:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1843:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1828:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1828:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1828:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1801:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1810:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1797:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1793:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1790:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1861:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1884:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1871:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1871:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1861:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1746:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1757:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1769:6:35",
                "type": ""
              }
            ],
            "src": "1710:190:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2016:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2028:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2039:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2024:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2016:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2058:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2073:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2089:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2094:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2085:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2085:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2098:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2081:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2081:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2069:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2069:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2051:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2051:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1975:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1986:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1997:4:35",
                "type": ""
              }
            ],
            "src": "1905:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2208:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2218:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2230:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2241:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2226:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2218:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2260:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2285:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2278:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2278:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2271:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2271:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2253:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2177:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2188:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2199:4:35",
                "type": ""
              }
            ],
            "src": "2113:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2426:482:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2436:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2446:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2440:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2464:9:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2475:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2487:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2507:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2501:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2501:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2491:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2534:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2545:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2550:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2523:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2523:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2523:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2566:13:35",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "2575:4:35"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2570:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2638:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2667:9:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2678:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2663:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2663:17:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2682:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2659:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2659:26:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2701:6:35"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2709:1:35"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2697:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2697:14:35"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2713:2:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2693:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2693:23:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2687:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2687:30:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2652:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2652:66:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2652:66:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2599:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2602:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2596:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2610:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2612:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2621:1:35"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2624:2:35"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2617:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2617:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2612:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2592:3:35",
                    "statements": []
                  },
                  "src": "2588:140:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2762:69:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2791:9:35"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2802:6:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2787:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2787:22:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2811:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2783:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2783:31:35"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2816:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2776:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2776:45:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2776:45:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2743:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2746:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2740:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2737:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2840:62:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2856:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2875:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2883:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2871:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2871:15:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2892:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2888:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2888:7:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2867:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2867:29:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2852:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:45:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2899:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2848:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:54:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2840:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2395:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2406:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2417:4:35",
                "type": ""
              }
            ],
            "src": "2305:603:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3014:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3024:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3036:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3047:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3032:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3024:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3066:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3077:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3059:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3059:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2983:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2994:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3005:4:35",
                "type": ""
              }
            ],
            "src": "2913:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:162:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3262:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3274:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3285:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3270:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3262:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3304:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3315:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3297:25:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3342:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3353:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3338:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3338:18:35"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3358:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3331:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3331:34:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3385:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3396:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:18:35"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3401:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3374:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3374:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3374:34:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3205:9:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3216:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3224:6:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3232:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3243:4:35",
                "type": ""
              }
            ],
            "src": "3095:319:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1026:220:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1026:220:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:53:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:130:16;;;:::i;:::-;;;;;;;:::i;156:23:13:-;;;:::i;:::-;;;;;;;:::i;1927:46:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1310:18::-;;;:::i;1526:28::-;;;:::i;1783:25::-;;;:::i;10014:864::-;;;:::i;1408:28::-;;;:::i;3613:196::-;;;:::i;2032:47::-;;;;;;:::i;:::-;;:::i;2892:714::-;;;;;;:::i;:::-;;:::i;:::-;;1885:36;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;11139:236::-;;;;;;:::i;:::-;;:::i;2801:85::-;;;;;;:::i;:::-;;:::i;4104:1663::-;;;;;;:::i;:::-;;:::i;1283:21::-;;;:::i;1362:40::-;;;:::i;1334:21::-;;;:::i;2131:47::-;;;;;;:::i;:::-;;:::i;1470:35::-;;;:::i;10884:250::-;;;;;;:::i;:::-;;:::i;1857:22::-;;;;;;:::i;:::-;;:::i;1682:50::-;;;:::i;2214:65::-;;;;;;:::i;:::-;;:::i;2680:87::-;;;;;;:::i;:::-;;:::i;183:30:13:-;;;:::i;6910:1663:2:-;;;:::i;8611:1325::-;;;:::i;807:156:13:-;;;:::i;625:92::-;;;;;;:::i;:::-;;:::i;1585:53:2:-;1626:12;1585:53;:::o;1114:130:16:-;1211:27;;;;;;;;;;;;-1:-1:-1;;;1211:27:16;;;;1114:130;:::o;156:23:13:-;;;;;;-1:-1:-1;;;;;156:23:13;;:::o;1927:46:2:-;;;;;;;;;;;;;;;:::o;1310:18::-;;;-1:-1:-1;;;;;1310:18:2;;:::o;1526:28::-;;;;:::o;1783:25::-;;;;:::o;10014:864::-;10067:4;10083:12;10098:58;10139:16;;10099:34;10116:16;;10099:12;:16;;:34;;;;:::i;:::-;10098:40;;:58::i;:::-;10083:73;;10184:1;10174:7;:11;10166:70;;;;-1:-1:-1;;;10166:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10303:5;:12;10264:10;;10247:14;;1399:3;-1:-1:-1;10303:59:2;;1399:3;10303:59;;;10334:5;:12;10303:59;10285:77;-1:-1:-1;10372:16:2;;10398:445;10419:10;10415:1;:14;10398:445;;;10450:12;10465:5;10471:1;10465:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10465:8:2;;-1:-1:-1;10487:346:2;10508:7;10504:1;:11;:28;;;;;1503:2;10519:1;:13;10504:28;10487:346;;;10557:8;10568:23;10575:4;10581:6;10589:1;10568:6;:23::i;:::-;10557:34;;10619:1;10613:3;:7;:35;;;;;10647:1;10624:20;10636:4;10642:1;10624:11;:20::i;:::-;:24;10613:35;10609:210;;;10672:11;10686:55;10720:20;10732:4;10738:1;10720:11;:20::i;:::-;-1:-1:-1;;;;;10694:17:2;;;;;;:11;:17;;;;;10686:29;;10712:1;10694:20;;;;;;;;;10686:3;;:7;:29::i;:55::-;10672:69;-1:-1:-1;10777:23:2;:11;10672:69;10777:15;:23::i;:::-;10763:37;;10609:210;;-1:-1:-1;10534:3:2;;10487:346;;;-1:-1:-1;;10431:3:2;;10398:445;;;-1:-1:-1;10860:11:2;-1:-1:-1;;;;10014:864:2;:::o;1408:28::-;;;;:::o;3613:196::-;3673:4;3713:16;;3697:12;:32;;:104;;;;-1:-1:-1;3769:16:2;;3748:53;;3769:31;;1503:2;3769:20;:31::i;:::-;3748:16;;;:20;:53::i;:::-;3733:12;:68;3697:104;3689:113;;3613:196;:::o;2032:47::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2032:47:2;;-1:-1:-1;2032:47:2:o;2892:714::-;1501:13:29;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:29;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:29;;;;;1727:19;1709:4;1727:19;;;1659:98;2976:3:2::1;:13:::0;;-1:-1:-1;;;;;;2976:13:2::1;-1:-1:-1::0;;;;;2976:13:2;::::1;;::::0;;3018:12:::1;2999:16;:31:::0;3059:5:::1;3040:16;:24:::0;3075:29:::1;3094:9:::0;3075:18:::1;:29::i;:::-;3212:6;3207:393;1503:2;3224:1;:13;3207:393;;;3258:17;3279:10:::0;;;:7:::1;:10;::::0;;;;3303:11;;;3344:52:::1;3365:30;3386:8;3287:1:::0;3392::::1;3386:5;:8::i;:::-;3365:16;::::0;;:20:::1;:30::i;3344:52::-;3328:4;:13;;:68;;;;3410:11;3424:31;3446:8;3452:1;3446;:5;;:8;;;;:::i;:::-;1626:12;::::0;3424:21:::1;:31::i;:::-;3410:45;;1721:11;3473:6;:24;3469:87;;;-1:-1:-1::0;1721:11:2::1;3469:87;3569:11;::::0;;::::1;:20:::0;3239:3:::1;;3207:393;;;;1783:14:29::0;1779:66;;;1829:5;1813:21;;-1:-1:-1;;1813:21:29;;;1779:66;2892:714:2;;;:::o;1885:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11139:236::-;11203:4;1503:2;11227:1;:13;11219:42;;;;;-1:-1:-1;;;11219:42:2;;;;;;;;;;;;-1:-1:-1;;;11219:42:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;11282:25:2;;;;;;:19;:25;;;;;;11278:29;;:90;;-1:-1:-1;;;;;11345:23:2;;;;;;:17;:23;;;;;;11278:90;;;-1:-1:-1;;;;;11322:17:2;;;;;;:11;:17;;;;;11340:1;11322:20;;;;;;;;;11278:90;11271:97;;11139:236;;;;;:::o;2801:85::-;265:8:13;;;;;-1:-1:-1;;;;;265:8:13;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;;;;2866:6:2::1;:13:::0;;-1:-1:-1;;;;;;2866:13:2::1;-1:-1:-1::0;;;;;2866:13:2;;;::::1;::::0;;;::::1;::::0;;2801:85::o;4104:1663::-;2597:6;;-1:-1:-1;;;;;2597:6:2;2583:10;:20;2575:53;;;;;-1:-1:-1;;;2575:53:2;;;;;;;;;;;;-1:-1:-1;;;2575:53:2;;;;;;;;;;;;;;;4249:16:::1;;4233:12;:32;;4225:76;;;::::0;;-1:-1:-1;;;4225:76:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4319:14:::0;;;:32:::1;;-1:-1:-1::0;4337:14:2;;4319:32:::1;4311:80;;;;-1:-1:-1::0;;;4311:80:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:11;4416:24;:9:::0;4430;4416:13:::1;:24::i;:::-;4402:38;;4467:1;4458:6;:10;4450:66;;;;-1:-1:-1::0;;;4450:66:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4572:58;4613:16;;4573:34;4590:16;;4573:12;:16;;:34;;;;:::i;4572:58::-;4556:13;:74:::0;;;1503:2:::1;-1:-1:-1::0;4640:39:2::1;;4672:7;;;4640:39;4689:26;4701:5;4708:6;4689:11;:26::i;:::-;4725:23;4742:5;4725:16;:23::i;:::-;4777:13;::::0;4759:7:::1;4769:22:::0;;;:7:::1;:22;::::0;;;;:31:::1;;::::0;:63:::1;::::0;4825:6;;4769:51:::1;::::0;4806:12:::1;4769:35;:51::i;:::-;:55:::0;::::1;:63::i;:::-;4759:73;;4842:12;4857:28;4878:6;4857:16;;:20;;:28;;;;:::i;:::-;4842:43:::0;-1:-1:-1;4900:13:2;;4896:747:::1;;-1:-1:-1::0;;;;;4968:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;4990:13:::1;::::0;4968:44:::1;::::0;5009:2;;4968:36:::1;::::0;::::1;;;;;;::::0;;:40:::1;:44::i;:::-;-1:-1:-1::0;;;;;4929:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;4951:13:::1;::::0;4929:36:::1;::::0;::::1;;;;;;:83:::0;-1:-1:-1;;;;;5062:18:2;::::1;;::::0;;;:11:::1;:18;::::0;;;;5081:13:::1;::::0;5062:41:::1;::::0;5100:2;;5062:33:::1;::::0;::::1;;;;:41;-1:-1:-1::0;;;;;5026:18:2;::::1;;::::0;;;:11:::1;:18;::::0;;;;5045:13:::1;::::0;5026:33:::1;::::0;::::1;;;;;;:77:::0;-1:-1:-1;;;;;5147:19:2;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;:40:::1;::::0;5179:7;5147:31:::1;:40::i;:::-;-1:-1:-1::0;;;;;5117:19:2;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;;:70;;;;5228:24;;;:17:::1;:24:::0;;;;;;:37:::1;::::0;5257:7;5228:28:::1;:37::i;:::-;-1:-1:-1::0;;;;;5201:24:2;::::1;;::::0;;;:17:::1;:24;::::0;;;;:64;4896:747:::1;;;-1:-1:-1::0;;;;;5335:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;5357:13:::1;::::0;5335:44:::1;::::0;5376:2;;5335:36:::1;::::0;::::1;;;;;;::::0;;:40:::1;:44::i;:::-;-1:-1:-1::0;;;;;5296:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:21;;::::1;::::0;;;;;;5318:13:::1;::::0;5296:36:::1;::::0;::::1;;;;;;:83:::0;-1:-1:-1;;;;;5429:18:2;::::1;;::::0;;;:11:::1;:18;::::0;;;;5448:13:::1;::::0;5429:41:::1;::::0;5467:2;;5429:33:::1;::::0;::::1;;;;:41;-1:-1:-1::0;;;;;5393:18:2;::::1;;::::0;;;:11:::1;:18;::::0;;;;5412:13:::1;::::0;5393:33:::1;::::0;::::1;;;;;;:77:::0;-1:-1:-1;;;;;5514:19:2;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;:40:::1;::::0;5546:7;5514:31:::1;:40::i;:::-;-1:-1:-1::0;;;;;5484:19:2;;::::1;;::::0;;;:12:::1;:19;::::0;;;;;;;:27;;::::1;::::0;;;;;;;;:70;;;;5595:24;;;:17:::1;:24:::0;;;;;;:37:::1;::::0;5624:7;5595:28:::1;:37::i;:::-;-1:-1:-1::0;;;;;5568:24:2;::::1;;::::0;;;:17:::1;:24;::::0;;;;:64;4896:747:::1;-1:-1:-1::0;;;;;5658:19:2;::::1;;::::0;;;:12:::1;:19;::::0;;;;;::::1;;5653:108;;5693:5;:17:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;5693:17:2::1;-1:-1:-1::0;;;;;5693:17:2;::::1;::::0;;::::1;::::0;;;-1:-1:-1;5724:19:2;;;:12:::1;5693:17;5724:19:::0;;;;:26;;-1:-1:-1;;5724:26:2::1;::::0;;::::1;::::0;;5653:108:::1;2638:1;;;;4104:1663:::0;;;;:::o;1283:21::-;;;-1:-1:-1;;;;;1283:21:2;;:::o;1362:40::-;1399:3;1362:40;:::o;1334:21::-;;;-1:-1:-1;;;;;1334:21:2;;:::o;2131:47::-;;;;;;;;;;;;;;;;;;;1470:35;1503:2;1470:35;:::o;10884:250::-;10958:4;1503:2;10982:1;:13;10974:37;;;;;-1:-1:-1;;;10974:37:2;;;;;;;;;;;;-1:-1:-1;;;10974:37:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;11032:20:2;;;;;;;:14;:20;;;;;;;;:28;;;;;;;;;;11028:32;;:99;;-1:-1:-1;;;;;11101:18:2;;;;;;;:12;:18;;;;;;;;:26;;;;;;;;;;11028:99;;;-1:-1:-1;;;;;11075:12:2;;;;;;;:6;:12;;;;;;;;:20;;;;;;;;;11096:1;11075:23;;;;;;;;;11028:99;11021:106;10884:250;-1:-1:-1;;;;10884:250:2:o;1857:22::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1857:22:2;;-1:-1:-1;1857:22:2;:::o;1682:50::-;1721:11;1682:50;:::o;2214:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2214:65:2;;-1:-1:-1;;2214:65:2:o;2680:87::-;265:8:13;;;;;-1:-1:-1;;;;;265:8:13;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;;;;2747:6:2::1;:13:::0;;-1:-1:-1;;;;;;2747:13:2::1;-1:-1:-1::0;;;;;2747:13:2;;;::::1;::::0;;;::::1;::::0;;2680:87::o;183:30:13:-;;;-1:-1:-1;;;;;183:30:13;;:::o;6910:1663:2:-;265:8:13;;;;;-1:-1:-1;;;;;265:8:13;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;;;;6967:6:2::1;::::0;-1:-1:-1;;;;;6967:6:2::1;6959:64;;;::::0;;-1:-1:-1;;;6959:64:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7063:16;7082:58;7123:16;;7083:34;7100:16;;7083:12;:16;;:34;;;;:::i;7082:58::-;7063:77;;7172:1;7158:11;:15;7150:72;;;;-1:-1:-1::0;;;7150:72:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7254:16;1503:2;7268:1;7254:13;:16::i;:::-;7240:11;:30;7232:85;;;;-1:-1:-1::0;;;7232:85:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7389:16;7408:18;:11:::0;7424:1:::1;7408:15;:18::i;:::-;7445:30;::::0;;;:17:::1;:30;::::0;;;;;7389:37;;-1:-1:-1;7445:30:2::1;;7444:31;7436:81;;;;-1:-1:-1::0;;;7436:81:2::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7555:11;7569:20:::0;;;:7:::1;:20;::::0;;;;;:27:::1;;::::0;7611:3:::1;::::0;7606:37;;-1:-1:-1;;;7606:37:2;;7629:4:::1;7606:37;::::0;::::1;::::0;;;;;;;;;7569:27;;-1:-1:-1;;;;;7611:3:2;;::::1;::::0;7606:14:::1;::::0;:37;;;;;7555:11;7606:37;;;;;7555:11;7611:3;7606:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7654:15;1399:3;7672:5;:12;;;;:28;:59;;1399:3;7672:59;;;7703:5;:12:::0;7672:59:::1;7654:77;;7741:12;7763:19:::0;7797:6:::1;7792:222;7813:10;7809:1;:14;7792:222;;;7870:6;::::0;7887:5:::1;:8:::0;;7844:10:::1;::::0;-1:-1:-1;;;;;7870:6:2::1;::::0;7857:29:::1;::::0;7893:1;;7887:8;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;7857:39:::1;::::0;;-1:-1:-1;;;;;;7857:39:2::1;::::0;;;;;;-1:-1:-1;;;;;7887:8:2;;::::1;7857:39;::::0;::::1;::::0;;;;;;;7887:8;7857:39;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7857:39:2;7942:5:::1;:8:::0;;7857:39;;-1:-1:-1;7910:7:2::1;::::0;7920:44:::1;::::0;7930:33:::1;::::0;7948:1;;7942:8;::::1;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;7942:8:2::1;7951:11:::0;7930::::1;:33::i;:::-;7920:5:::0;;:9:::1;:44::i;:::-;7910:54:::0;-1:-1:-1;7988:15:2::1;:7:::0;7910:54;7988:11:::1;:15::i;:::-;7978:25:::0;-1:-1:-1;;;7825:3:2::1;;7792:222;;;-1:-1:-1::0;8028:11:2;;8024:427:::1;;8060:6;8055:386;8076:10;8072:1;:14;8055:386;;;8137:6;::::0;8154:5:::1;:8:::0;;8111:10:::1;::::0;-1:-1:-1;;;;;8137:6:2::1;::::0;8124:29:::1;::::0;8160:1;;8154:8;::::1;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;8124:39:::1;::::0;;-1:-1:-1;;;;;;8124:39:2::1;::::0;;;;;;-1:-1:-1;;;;;8154:8:2;;::::1;8124:39;::::0;::::1;::::0;;;;;;;8154:8;8124:39;;;;;;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8124:39:2;8213:5:::1;:8:::0;;8124:39;;-1:-1:-1;8181:7:2::1;::::0;8191:45:::1;::::0;8201:34:::1;::::0;8219:1;;8213:8;::::1;;;;8191:45;8181:55:::0;-1:-1:-1;8254:14:2::1;8271:27;8290:7:::0;8271:14:::1;8181:55:::0;8278:6;8271::::1;:14::i;:27::-;8254:44:::0;-1:-1:-1;8333:29:2::1;:14:::0;8254:44;8333:18:::1;:29::i;:::-;8316:46;;8417:9;8380:11;:21;8392:5;8398:1;8392:8;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8392:8:2::1;8380:21:::0;;;::::1;::::0;;;;;;;;8402:11;8380:34:::1;::::0;::::1;;;;;;:46:::0;-1:-1:-1;;;8088:3:2::1;;8055:386;;;;8024:427;8487:6;8469:14;:24;;8461:57;;;::::0;;-1:-1:-1;;;8461:57:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8461:57:2;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;8529:30:2::1;::::0;;;-1:-1:-1;8529:17:2::1;:30;::::0;;;;:37;;-1:-1:-1;;8529:37:2::1;8562:4;8529:37;::::0;;-1:-1:-1;6910:1663:2:o;8611:1325::-;8650:12;8665:58;8706:16;;8666:34;8683:16;;8666:12;:16;;:34;;;;:::i;8665:58::-;8650:73;;8751:1;8741:7;:11;8733:58;;;;-1:-1:-1;;;8733:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8858:5;:12;8819:10;;8802:14;;1399:3;-1:-1:-1;8858:59:2;;1399:3;8858:59;;;8889:5;:12;8858:59;8840:77;-1:-1:-1;8927:16:2;;8953:494;8974:10;8970:1;:14;8953:494;;;9005:12;9020:5;9026:1;9020:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9020:8:2;;-1:-1:-1;9042:395:2;9063:7;9059:1;:11;:28;;;;;1503:2;9074:1;:13;9059:28;9042:395;;;9112:8;9123:23;9130:4;9136:6;9144:1;9123:6;:23::i;:::-;9112:34;;9174:1;9168:3;:7;:35;;;;;9202:1;9179:20;9191:4;9197:1;9179:11;:20::i;:::-;:24;9168:35;9164:259;;;9227:11;9241:55;9275:20;9287:4;9293:1;9275:11;:20::i;9241:55::-;9227:69;-1:-1:-1;9332:23:2;:11;9227:69;9332:15;:23::i;:::-;-1:-1:-1;;;;;9377:12:2;;;9403:1;9377:12;;;:6;:12;;;;;;;;:20;;;;;;;;;;;9318:37;;-1:-1:-1;9403:1:2;9398;9377:23;;;;;;;;:27;-1:-1:-1;9164:259:2;-1:-1:-1;9089:3:2;;9042:395;;;-1:-1:-1;;8986:3:2;;8953:494;;;-1:-1:-1;9461:15:2;;9457:473;;9524:3;;9517:37;;;-1:-1:-1;;;9517:37:2;;9545:4;9517:37;;;;9524:3;9517:37;;;;;;;;-1:-1:-1;;;;;9524:3:2;;;;9517:19;;:37;;;;;;;;;;;;;;;;;;9524:3;9517:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9517:37:2;9492:122;;;;;-1:-1:-1;;;9492:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9660:3;;9653:47;;;-1:-1:-1;;;9653:47:2;;9681:4;9653:47;;;;;;;;;;;;-1:-1:-1;;;;;9660:3:2;;;;9653:19;;:47;;;;;;;;;;;;;;;9660:3;;9653:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9653:47:2;9628:135;;;;;-1:-1:-1;;;9628:135:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9809:3;;9802:60;;;-1:-1:-1;;;9802:60:2;;9835:4;9802:60;;;;-1:-1:-1;;;;;9802:60:2;;;;;;;;;;;;;;;9809:3;;;;;9802:24;;:60;;;;;;;;;;;;;;9809:3;;9802:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9802:60:2;9777:142;;;;;-1:-1:-1;;;9777:142:2;;;;;;;;;;;;;;;;;;;;;;;;;;;807:156:13;870:15;;-1:-1:-1;;;;;870:15:13;856:10;:29;848:49;;;;;-1:-1:-1;;;848:49:13;;;;;;;;;;;;-1:-1:-1;;;848:49:13;;;;;;;;;;;;;;;903:15;:28;;-1:-1:-1;;;;;;903:28:13;;;-1:-1:-1;937:21:13;;-1:-1:-1;;;;;;937:21:13;948:10;937:21;;;;;807:156::o;625:92::-;265:8;;;;;-1:-1:-1;;;;;265:8:13;251:10;:22;243:42;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;-1:-1:-1;;;243:42:13;;;;;;;;;;;;;;;690:15:::1;:22:::0;;-1:-1:-1;;;;;;690:22:13::1;-1:-1:-1::0;;;;;690:22:13;;;::::1;::::0;;;::::1;::::0;;625:92::o;3136:155:28:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:28;;;3136:155::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:28:o;3538:215::-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:28;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:175;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:112:29;1989:4;2013:33;2040:4;2013:18;:33::i;:::-;2012:34;2005:41;;1941:112;:::o;388:99:13:-;1501:13:29;;;;;;;;:33;;;1518:16;:14;:16::i;:::-;1501:50;;;-1:-1:-1;1539:12:29;;;;1538:13;1501:50;1493:109;;;;-1:-1:-1;;;1493:109:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:19;1636:13;;;;;;1635:14;1659:98;;;;1693:13;:20;;-1:-1:-1;;;;1693:20:29;;;;;1727:19;1709:4;1727:19;;;1659:98;462:8:13::1;:20:::0;;-1:-1:-1;;;;;;462:20:13::1;::::0;-1:-1:-1;;;;;462:20:13;::::1;;;::::0;;1779:66:29;;;;1829:5;1813:21;;-1:-1:-1;;1813:21:29;;;1779:66;388:99:13;;:::o;5892:422:2:-;5999:13;;-1:-1:-1;;;;;5967:21:2;;;;;;;:14;:21;;;;;;;;:29;;;;;;;;;;:45;;:75;;;1503:2;6016:13;;:26;;5967:75;5963:89;;;6045:7;;5963:89;-1:-1:-1;;;;;6078:19:2;;;6061:14;6078:19;;;:12;:19;;;;;;;;:27;;;;;;;;;;;;;6129:21;;;:14;:21;;;;;:29;;;;;;;;;;;6115:131;6165:13;;6160:1;:18;6115:131;;-1:-1:-1;;;;;6199:13:2;;;;;;;:6;:13;;;;;;;;:21;;;;;;;;;6226:9;;6221:1;6199:24;;;;;;;;:36;6180:3;;6115:131;;;-1:-1:-1;6287:13:2;;:20;;6305:1;6287:17;:20::i;:::-;-1:-1:-1;;;;;6255:21:2;;;;;;;:14;:21;;;;;;;;:29;;;;;;;;;:52;-1:-1:-1;5892:422:2;;:::o;6440:406::-;6533:13;;-1:-1:-1;;;;;6504:26:2;;;;;;:19;:26;;;;;;:42;;:72;;;1503:2;6550:13;;:26;;6504:72;6500:86;;;6579:7;;6500:86;-1:-1:-1;;;;;6617:24:2;;6595:19;6617:24;;;:17;:24;;;;;;;;;6665:19;:26;;;;;;;6651:130;6698:13;;6693:1;:18;6651:130;;-1:-1:-1;;;;;6732:18:2;;;;;;:11;:18;;;;;6756:14;;6751:1;6732:21;;;;;;;;:38;6713:3;;6651:130;;;-1:-1:-1;6819:13:2;;:20;;6837:1;6819:17;:20::i;:::-;-1:-1:-1;;;;;6790:26:2;;;;;;:19;:26;;;;;:49;-1:-1:-1;6440:406:2;;:::o;726:413:33:-;1086:20;;1124:8;;726:413;;;;:::o;14:175:35:-;84:20;;-1:-1:-1;;;;;133:31:35;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:411::-;;;;;1186:3;1174:9;1165:7;1161:23;1157:33;1154:2;;;1208:6;1200;1193:22;1154:2;1236:31;1257:9;1236:31;:::i;:::-;1226:41;;1286:40;1322:2;1311:9;1307:18;1286:40;:::i;:::-;1144:290;;1276:50;;-1:-1:-1;;;;1373:2:35;1358:18;;1345:32;;1424:2;1409:18;1396:32;;1144:290::o;1439:266::-;;;1568:2;1556:9;1547:7;1543:23;1539:32;1536:2;;;1589:6;1581;1574:22;1536:2;1617:31;1638:9;1617:31;:::i;:::-;1607:41;1695:2;1680:18;;;;1667:32;;-1:-1:-1;;;1526:179:35:o;1710:190::-;;1822:2;1810:9;1801:7;1797:23;1793:32;1790:2;;;1843:6;1835;1828:22;1790:2;-1:-1:-1;1871:23:35;;1780:120;-1:-1:-1;1780:120:35:o;1905:203::-;-1:-1:-1;;;;;2069:32:35;;;;2051:51;;2039:2;2024:18;;2006:102::o;2113:187::-;2278:14;;2271:22;2253:41;;2241:2;2226:18;;2208:92::o;2305:603::-;;2446:2;2475;2464:9;2457:21;2507:6;2501:13;2550:6;2545:2;2534:9;2530:18;2523:34;2575:4;2588:140;2602:6;2599:1;2596:13;2588:140;;;2697:14;;;2693:23;;2687:30;2663:17;;;2682:2;2659:26;2652:66;2617:10;;2588:140;;;2746:6;2743:1;2740:13;2737:2;;;2816:4;2811:2;2802:6;2791:9;2787:22;2783:31;2776:45;2737:2;-1:-1:-1;2892:2:35;2871:15;-1:-1:-1;;2867:29:35;2852:45;;;;2899:2;2848:54;;2426:482;-1:-1:-1;;;2426:482:35:o;2913:177::-;3059:25;;;3047:2;3032:18;;3014:76::o;3095:319::-;3297:25;;;3353:2;3338:18;;3331:34;;;;3396:2;3381:18;;3374:34;3285:2;3270:18;;3252:162::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\nimport \"../Nutmeg.sol\";\n\n// @notice This contract is a version of Nutmeg that contains additional\n// interfaces for testing\n\ncontract NutmegAltA is Nutmeg {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure returns (string memory) {\n        return \"nutmegalta\";\n   }\n}\n\ncontract NutmegAltB is Nutmeg {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure returns (string memory) {\n        return \"nutmegaltb\";\n   }\n}\n\nimport \"../NutDistributor.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\n// @notice This contract is a version of NutDistributor that allows\n// the epoch intervals to be changed for testing\n\ncontract NutDistributorAltA is NutDistributor {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure override returns (string memory) {\n        return \"nutdistributoralta\";\n   }\n}\n\ncontract NutDistributorAltB is NutDistributor {\n    //@notice output version string\n    function getVersionString()\n    external virtual pure override returns (string memory) {\n        return \"nutdistributoraltb\";\n   }\n}\n\nimport \"./MockERC20.sol\";\n\ncontract MockERC20AltA is\nMockERC20(\"MockERC20AltA\", \"MOCKERC20ALTA\", 18) {\n}\n\ncontract MockERC20AltB is\nMockERC20(\"MockERC20AltB\", \"MOCKERC20ALTB\", 18) {\n}\n\ncontract MockERC20AltC is\nMockERC20(\"MockERC20AltC\", \"MOCKERC20ALTC\", 6) {\n}\n\nimport \"./MockCERC20.sol\";\n\ncontract MockCERC20AltA is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltA\", \"MOCKCERC20ALTA\", 18) {\n    }\n}\ncontract MockCERC20AltB is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltB\", \"MOCKCERC20ALTB\", 18) {\n    }\n}\ncontract MockCERC20AltC is MockCERC20Base {\n    constructor(address tokenAddr)\n    MockCERC20Base(tokenAddr, \"MockCERC20 AltC\", \"MOCKCERC20ALTC\", 6) {\n    }\n}\n\nimport \"../adapters/CompoundAdapter.sol\";\nimport \"../interfaces/INutmeg.sol\";\ncontract CompoundAdapterAltA is CompoundAdapter {\n    constructor(INutmeg nutmegAddr) CompoundAdapter(nutmegAddr) {\n    }\n}\n\ncontract CompoundAdapterAltB is CompoundAdapter {\n    constructor(INutmeg nutmegAddr) CompoundAdapter(nutmegAddr) {\n    }\n}\n",
  "sourcePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
  "ast": {
    "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
    "exportedSymbols": {
      "Address": [
        9433
      ],
      "CompoundAdapter": [
        5818
      ],
      "CompoundAdapterAltA": [
        6586
      ],
      "CompoundAdapterAltB": [
        6598
      ],
      "Context": [
        9456
      ],
      "ERC20": [
        8846
      ],
      "Governable": [
        6362
      ],
      "IAdapter": [
        5881
      ],
      "ICERC20": [
        5940
      ],
      "IERC20": [
        8924
      ],
      "INut": [
        5950
      ],
      "INutDistributor": [
        5969
      ],
      "INutmeg": [
        6233
      ],
      "IPriceOracle": [
        6243
      ],
      "Initializable": [
        8343
      ],
      "Math": [
        6455
      ],
      "MockCERC20": [
        7394
      ],
      "MockCERC20AltA": [
        6542
      ],
      "MockCERC20AltB": [
        6557
      ],
      "MockCERC20AltC": [
        6572
      ],
      "MockCERC20Base": [
        7379
      ],
      "MockERC20": [
        7431
      ],
      "MockERC20AltA": [
        6514
      ],
      "MockERC20AltB": [
        6520
      ],
      "MockERC20AltC": [
        6526
      ],
      "NutDistributor": [
        1345
      ],
      "NutDistributorAltA": [
        6495
      ],
      "NutDistributorAltB": [
        6507
      ],
      "Nutmeg": [
        4627
      ],
      "NutmegAltA": [
        6470
      ],
      "NutmegAltB": [
        6481
      ],
      "SafeERC20": [
        9137
      ],
      "SafeMath": [
        8277
      ]
    },
    "id": 6599,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6457,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:16"
      },
      {
        "id": 6458,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol",
        "file": "../Nutmeg.sol",
        "id": 6459,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 4628,
        "src": "90:23:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6460,
              "name": "Nutmeg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4627,
              "src": "238:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Nutmeg_$4627",
                "typeString": "contract Nutmeg"
              }
            },
            "id": 6461,
            "nodeType": "InheritanceSpecifier",
            "src": "238:6:16"
          }
        ],
        "contractDependencies": [
          4627,
          6233,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6470,
        "linearizedBaseContracts": [
          6470,
          4627,
          6233,
          6362,
          8343
        ],
        "name": "NutmegAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6468,
              "nodeType": "Block",
              "src": "365:35:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746d6567616c7461",
                    "id": 6466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "382:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_68fc9a7c0f4883b148292185cc10b645c38262342e4adeb1916364c2fbf9839c",
                      "typeString": "literal_string \"nutmegalta\""
                    },
                    "value": "nutmegalta"
                  },
                  "functionReturnParameters": 6465,
                  "id": 6467,
                  "nodeType": "Return",
                  "src": "375:19:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:16"
            },
            "returnParameters": {
              "id": 6465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6464,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6469,
                  "src": "350:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6463,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:15:16"
            },
            "scope": 6470,
            "src": "287:113:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "215:187:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6471,
              "name": "Nutmeg",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4627,
              "src": "427:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Nutmeg_$4627",
                "typeString": "contract Nutmeg"
              }
            },
            "id": 6472,
            "nodeType": "InheritanceSpecifier",
            "src": "427:6:16"
          }
        ],
        "contractDependencies": [
          4627,
          6233,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6481,
        "linearizedBaseContracts": [
          6481,
          4627,
          6233,
          6362,
          8343
        ],
        "name": "NutmegAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "554:35:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746d6567616c7462",
                    "id": 6477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "571:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2e3ccd6b44f634abcabf2edef977d7c19c871bd07742ae8d30f3fce19b16423a",
                      "typeString": "literal_string \"nutmegaltb\""
                    },
                    "value": "nutmegaltb"
                  },
                  "functionReturnParameters": 6476,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "564:19:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:16"
            },
            "returnParameters": {
              "id": 6476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6475,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "539:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6474,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:15:16"
            },
            "scope": 6481,
            "src": "476:113:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "404:187:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol",
        "file": "../NutDistributor.sol",
        "id": 6482,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 1346,
        "src": "593:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 6483,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 9138,
        "src": "625:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6484,
              "name": "NutDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "835:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NutDistributor_$1345",
                "typeString": "contract NutDistributor"
              }
            },
            "id": 6485,
            "nodeType": "InheritanceSpecifier",
            "src": "835:14:16"
          }
        ],
        "contractDependencies": [
          1345,
          5969,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6495,
        "linearizedBaseContracts": [
          6495,
          1345,
          5969,
          6362,
          8343
        ],
        "name": "NutDistributorAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1344
            ],
            "body": {
              "id": 6493,
              "nodeType": "Block",
              "src": "979:43:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746469737472696275746f72616c7461",
                    "id": 6491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "996:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0a17200a43d7aef32ea20fe9bb2eb3cc4b0506245e0a4cbde1844dd721469385",
                      "typeString": "literal_string \"nutdistributoralta\""
                    },
                    "value": "nutdistributoralta"
                  },
                  "functionReturnParameters": 6490,
                  "id": 6492,
                  "nodeType": "Return",
                  "src": "989:27:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6487,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "946:8:16"
            },
            "parameters": {
              "id": 6486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:2:16"
            },
            "returnParameters": {
              "id": 6490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6489,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6494,
                  "src": "964:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6488,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:15:16"
            },
            "scope": 6495,
            "src": "892:130:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "804:220:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6496,
              "name": "NutDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "1057:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NutDistributor_$1345",
                "typeString": "contract NutDistributor"
              }
            },
            "id": 6497,
            "nodeType": "InheritanceSpecifier",
            "src": "1057:14:16"
          }
        ],
        "contractDependencies": [
          1345,
          5969,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6507,
        "linearizedBaseContracts": [
          6507,
          1345,
          5969,
          6362,
          8343
        ],
        "name": "NutDistributorAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1344
            ],
            "body": {
              "id": 6505,
              "nodeType": "Block",
              "src": "1201:43:16",
              "statements": [
                {
                  "expression": {
                    "hexValue": "6e75746469737472696275746f72616c7462",
                    "id": 6503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1218:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a352badae58a92a08e1b10953e081ea6c05bc3f621b4fef7d9682a33a7037a1c",
                      "typeString": "literal_string \"nutdistributoraltb\""
                    },
                    "value": "nutdistributoraltb"
                  },
                  "functionReturnParameters": 6502,
                  "id": 6504,
                  "nodeType": "Return",
                  "src": "1211:27:16"
                }
              ]
            },
            "functionSelector": "05b540f2",
            "id": 6506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionString",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1168:8:16"
            },
            "parameters": {
              "id": 6498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:16"
            },
            "returnParameters": {
              "id": 6502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6501,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6506,
                  "src": "1186:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:15:16"
            },
            "scope": 6507,
            "src": "1114:130:16",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 6599,
        "src": "1026:220:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol",
        "file": "./MockERC20.sol",
        "id": 6508,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 7432,
        "src": "1248:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7441",
                "id": 6510,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1311:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4794095f97bc7bebfb2b077916ba07f410c8c7ef5e70409878e2b356d86555a9",
                  "typeString": "literal_string \"MockERC20AltA\""
                },
                "value": "MockERC20AltA"
              },
              {
                "hexValue": "4d4f434b4552433230414c5441",
                "id": 6511,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1328:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1954f40dd366fe296c52abcb57b295865f6a3112bfaae10360cb7d753ffc46f1",
                  "typeString": "literal_string \"MOCKERC20ALTA\""
                },
                "value": "MOCKERC20ALTA"
              },
              {
                "hexValue": "3138",
                "id": 6512,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1345:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 6509,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1301:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6513,
            "nodeType": "InheritanceSpecifier",
            "src": "1301:47:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6514,
        "linearizedBaseContracts": [
          6514,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltA",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1275:77:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7442",
                "id": 6516,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1390:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_2932fd420ebf44dda08858ac23f678fe7f6d305b3e44678914ed16ec6d702306",
                  "typeString": "literal_string \"MockERC20AltB\""
                },
                "value": "MockERC20AltB"
              },
              {
                "hexValue": "4d4f434b4552433230414c5442",
                "id": 6517,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1407:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_1475e0d2531587a7a406cb1943b50d036c5d602f4897fd573505d55cbd53204c",
                  "typeString": "literal_string \"MOCKERC20ALTB\""
                },
                "value": "MOCKERC20ALTB"
              },
              {
                "hexValue": "3138",
                "id": 6518,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1424:2:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 6515,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6519,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:47:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6520,
        "linearizedBaseContracts": [
          6520,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltB",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1354:77:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "4d6f636b4552433230416c7443",
                "id": 6522,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1469:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_ecc58c110f2e1d5eccf0d0c4fd12886bf45355cc139f8093e463082c9d401a3e",
                  "typeString": "literal_string \"MockERC20AltC\""
                },
                "value": "MockERC20AltC"
              },
              {
                "hexValue": "4d4f434b4552433230414c5443",
                "id": 6523,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1486:15:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_0747507ac0fd3ba2b509098565a0ff84efb11d9fc1c6a8b9a9252aa751b99602",
                  "typeString": "literal_string \"MOCKERC20ALTC\""
                },
                "value": "MOCKERC20ALTC"
              },
              {
                "hexValue": "36",
                "id": 6524,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1503:1:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              }
            ],
            "baseName": {
              "id": 6521,
              "name": "MockERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7431,
              "src": "1459:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$7431",
                "typeString": "contract MockERC20"
              }
            },
            "id": 6525,
            "nodeType": "InheritanceSpecifier",
            "src": "1459:46:16"
          }
        ],
        "contractDependencies": [
          7431,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6526,
        "linearizedBaseContracts": [
          6526,
          7431,
          8846,
          8924,
          9456
        ],
        "name": "MockERC20AltC",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6599,
        "src": "1433:76:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol",
        "file": "./MockCERC20.sol",
        "id": 6527,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 7395,
        "src": "1511:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6528,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1566:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6529,
            "nodeType": "InheritanceSpecifier",
            "src": "1566:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6542,
        "linearizedBaseContracts": [
          6542,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6540,
              "nodeType": "Block",
              "src": "1689:7:16",
              "statements": []
            },
            "id": 6541,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6534,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6531,
                    "src": "1637:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7441",
                    "id": 6535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1648:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4e4716bdda18cfdfb45f5d9b9b258592724ae322f8c6d6a7bd6c36abd1f466cd",
                      "typeString": "literal_string \"MockCERC20 AltA\""
                    },
                    "value": "MockCERC20 AltA"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5441",
                    "id": 6536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1667:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7e5d3292b791f24b9f7396f87e4036c10dacf0ff53c6ef136f8d52b816d575f8",
                      "typeString": "literal_string \"MOCKCERC20ALTA\""
                    },
                    "value": "MOCKCERC20ALTA"
                  },
                  {
                    "hexValue": "3138",
                    "id": 6537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1685:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 6538,
                "modifierName": {
                  "id": 6533,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1622:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1622:66:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6531,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6541,
                  "src": "1599:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1598:19:16"
            },
            "returnParameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1689:0:16"
            },
            "scope": 6542,
            "src": "1587:109:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1539:159:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6543,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1726:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6544,
            "nodeType": "InheritanceSpecifier",
            "src": "1726:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6557,
        "linearizedBaseContracts": [
          6557,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6555,
              "nodeType": "Block",
              "src": "1849:7:16",
              "statements": []
            },
            "id": 6556,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6549,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6546,
                    "src": "1797:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7442",
                    "id": 6550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1808:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7920623c35eeca5023e957c83f7494b39add9c6181a973a4e51a4149ebb7345d",
                      "typeString": "literal_string \"MockCERC20 AltB\""
                    },
                    "value": "MockCERC20 AltB"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5442",
                    "id": 6551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1827:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f68135a7b15ec8d6fd78bfedea8e8613392787a291ebbec336e70198d7ced0d9",
                      "typeString": "literal_string \"MOCKCERC20ALTB\""
                    },
                    "value": "MOCKCERC20ALTB"
                  },
                  {
                    "hexValue": "3138",
                    "id": 6552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1845:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 6553,
                "modifierName": {
                  "id": 6548,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1782:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1782:66:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6546,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6556,
                  "src": "1759:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:19:16"
            },
            "returnParameters": {
              "id": 6554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1849:0:16"
            },
            "scope": 6557,
            "src": "1747:109:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1699:159:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6558,
              "name": "MockCERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7379,
              "src": "1886:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockCERC20Base_$7379",
                "typeString": "contract MockCERC20Base"
              }
            },
            "id": 6559,
            "nodeType": "InheritanceSpecifier",
            "src": "1886:14:16"
          }
        ],
        "contractDependencies": [
          5940,
          7379,
          8846,
          8924,
          9456
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6572,
        "linearizedBaseContracts": [
          6572,
          7379,
          8846,
          8924,
          9456,
          5940
        ],
        "name": "MockCERC20AltC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6570,
              "nodeType": "Block",
              "src": "2008:7:16",
              "statements": []
            },
            "id": 6571,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6564,
                    "name": "tokenAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6561,
                    "src": "1957:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "hexValue": "4d6f636b43455243323020416c7443",
                    "id": 6565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1968:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_660d9a53823ace49920838655fc49235019dad2062c232237ec4efde95964ca9",
                      "typeString": "literal_string \"MockCERC20 AltC\""
                    },
                    "value": "MockCERC20 AltC"
                  },
                  {
                    "hexValue": "4d4f434b434552433230414c5443",
                    "id": 6566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1987:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1fff02425a6285e0e9e5b4c110f8b8b2a8718a36542dbcf67744f39727202c57",
                      "typeString": "literal_string \"MOCKCERC20ALTC\""
                    },
                    "value": "MOCKCERC20ALTC"
                  },
                  {
                    "hexValue": "36",
                    "id": 6567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2005:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_6_by_1",
                      "typeString": "int_const 6"
                    },
                    "value": "6"
                  }
                ],
                "id": 6568,
                "modifierName": {
                  "id": 6563,
                  "name": "MockCERC20Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7379,
                  "src": "1942:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MockCERC20Base_$7379_$",
                    "typeString": "type(contract MockCERC20Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1942:65:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6561,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6571,
                  "src": "1919:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1918:19:16"
            },
            "returnParameters": {
              "id": 6569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:16"
            },
            "scope": 6572,
            "src": "1907:108:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "1859:158:16"
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol",
        "file": "../adapters/CompoundAdapter.sol",
        "id": 6573,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 5819,
        "src": "2019:41:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol",
        "file": "../interfaces/INutmeg.sol",
        "id": 6574,
        "nodeType": "ImportDirective",
        "scope": 6599,
        "sourceUnit": 6234,
        "src": "2061:35:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6575,
              "name": "CompoundAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5818,
              "src": "2129:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CompoundAdapter_$5818",
                "typeString": "contract CompoundAdapter"
              }
            },
            "id": 6576,
            "nodeType": "InheritanceSpecifier",
            "src": "2129:15:16"
          }
        ],
        "contractDependencies": [
          5818,
          5881,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6586,
        "linearizedBaseContracts": [
          6586,
          5818,
          5881,
          6362,
          8343
        ],
        "name": "CompoundAdapterAltA",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6584,
              "nodeType": "Block",
              "src": "2211:7:16",
              "statements": []
            },
            "id": 6585,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6581,
                    "name": "nutmegAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6578,
                    "src": "2199:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  }
                ],
                "id": 6582,
                "modifierName": {
                  "id": 6580,
                  "name": "CompoundAdapter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5818,
                  "src": "2183:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CompoundAdapter_$5818_$",
                    "typeString": "type(contract CompoundAdapter)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2183:27:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6578,
                  "mutability": "mutable",
                  "name": "nutmegAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "2163:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INutmeg_$6233",
                    "typeString": "contract INutmeg"
                  },
                  "typeName": {
                    "id": 6577,
                    "name": "INutmeg",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6233,
                    "src": "2163:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2162:20:16"
            },
            "returnParameters": {
              "id": 6583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:0:16"
            },
            "scope": 6586,
            "src": "2151:67:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "2097:123:16"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6587,
              "name": "CompoundAdapter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5818,
              "src": "2254:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CompoundAdapter_$5818",
                "typeString": "contract CompoundAdapter"
              }
            },
            "id": 6588,
            "nodeType": "InheritanceSpecifier",
            "src": "2254:15:16"
          }
        ],
        "contractDependencies": [
          5818,
          5881,
          6362,
          8343
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6598,
        "linearizedBaseContracts": [
          6598,
          5818,
          5881,
          6362,
          8343
        ],
        "name": "CompoundAdapterAltB",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6596,
              "nodeType": "Block",
              "src": "2336:7:16",
              "statements": []
            },
            "id": 6597,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6593,
                    "name": "nutmegAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6590,
                    "src": "2324:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  }
                ],
                "id": 6594,
                "modifierName": {
                  "id": 6592,
                  "name": "CompoundAdapter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5818,
                  "src": "2308:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CompoundAdapter_$5818_$",
                    "typeString": "type(contract CompoundAdapter)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2308:27:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6590,
                  "mutability": "mutable",
                  "name": "nutmegAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 6597,
                  "src": "2288:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INutmeg_$6233",
                    "typeString": "contract INutmeg"
                  },
                  "typeName": {
                    "id": 6589,
                    "name": "INutmeg",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6233,
                    "src": "2288:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INutmeg_$6233",
                      "typeString": "contract INutmeg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:20:16"
            },
            "returnParameters": {
              "id": 6595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:16"
            },
            "scope": 6598,
            "src": "2276:67:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6599,
        "src": "2222:123:16"
      }
    ],
    "src": "33:2313:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/AltContracts.sol",
      "exportedSymbols": {
        "Address": [
          9433
        ],
        "CompoundAdapter": [
          5818
        ],
        "CompoundAdapterAltA": [
          6586
        ],
        "CompoundAdapterAltB": [
          6598
        ],
        "Context": [
          9456
        ],
        "ERC20": [
          8846
        ],
        "Governable": [
          6362
        ],
        "IAdapter": [
          5881
        ],
        "ICERC20": [
          5940
        ],
        "IERC20": [
          8924
        ],
        "INut": [
          5950
        ],
        "INutDistributor": [
          5969
        ],
        "INutmeg": [
          6233
        ],
        "IPriceOracle": [
          6243
        ],
        "Initializable": [
          8343
        ],
        "Math": [
          6455
        ],
        "MockCERC20": [
          7394
        ],
        "MockCERC20AltA": [
          6542
        ],
        "MockCERC20AltB": [
          6557
        ],
        "MockCERC20AltC": [
          6572
        ],
        "MockCERC20Base": [
          7379
        ],
        "MockERC20": [
          7431
        ],
        "MockERC20AltA": [
          6514
        ],
        "MockERC20AltB": [
          6520
        ],
        "MockERC20AltC": [
          6526
        ],
        "NutDistributor": [
          1345
        ],
        "NutDistributorAltA": [
          6495
        ],
        "NutDistributorAltB": [
          6507
        ],
        "Nutmeg": [
          4627
        ],
        "NutmegAltA": [
          6470
        ],
        "NutmegAltB": [
          6481
        ],
        "SafeERC20": [
          9137
        ],
        "SafeMath": [
          8277
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 6457,
        "name": "PragmaDirective",
        "src": "33:22:16"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 6458,
        "name": "PragmaDirective",
        "src": "56:33:16"
      },
      {
        "attributes": {
          "SourceUnit": 4628,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/Nutmeg.sol",
          "file": "../Nutmeg.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6459,
        "name": "ImportDirective",
        "src": "90:23:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4627,
            6233,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6470,
            4627,
            6233,
            6362,
            8343
          ],
          "name": "NutmegAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Nutmeg",
                  "referencedDeclaration": 4627,
                  "type": "contract Nutmeg"
                },
                "id": 6460,
                "name": "UserDefinedTypeName",
                "src": "238:6:16"
              }
            ],
            "id": 6461,
            "name": "InheritanceSpecifier",
            "src": "238:6:16"
          },
          {
            "attributes": {
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6470,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6462,
                "name": "ParameterList",
                "src": "312:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6469,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6463,
                        "name": "ElementaryTypeName",
                        "src": "350:6:16"
                      }
                    ],
                    "id": 6464,
                    "name": "VariableDeclaration",
                    "src": "350:13:16"
                  }
                ],
                "id": 6465,
                "name": "ParameterList",
                "src": "349:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6465
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746d6567616c7461",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutmegalta\"",
                          "value": "nutmegalta"
                        },
                        "id": 6466,
                        "name": "Literal",
                        "src": "382:12:16"
                      }
                    ],
                    "id": 6467,
                    "name": "Return",
                    "src": "375:19:16"
                  }
                ],
                "id": 6468,
                "name": "Block",
                "src": "365:35:16"
              }
            ],
            "id": 6469,
            "name": "FunctionDefinition",
            "src": "287:113:16"
          }
        ],
        "id": 6470,
        "name": "ContractDefinition",
        "src": "215:187:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4627,
            6233,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6481,
            4627,
            6233,
            6362,
            8343
          ],
          "name": "NutmegAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Nutmeg",
                  "referencedDeclaration": 4627,
                  "type": "contract Nutmeg"
                },
                "id": 6471,
                "name": "UserDefinedTypeName",
                "src": "427:6:16"
              }
            ],
            "id": 6472,
            "name": "InheritanceSpecifier",
            "src": "427:6:16"
          },
          {
            "attributes": {
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6481,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6473,
                "name": "ParameterList",
                "src": "501:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6480,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6474,
                        "name": "ElementaryTypeName",
                        "src": "539:6:16"
                      }
                    ],
                    "id": 6475,
                    "name": "VariableDeclaration",
                    "src": "539:13:16"
                  }
                ],
                "id": 6476,
                "name": "ParameterList",
                "src": "538:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6476
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746d6567616c7462",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutmegaltb\"",
                          "value": "nutmegaltb"
                        },
                        "id": 6477,
                        "name": "Literal",
                        "src": "571:12:16"
                      }
                    ],
                    "id": 6478,
                    "name": "Return",
                    "src": "564:19:16"
                  }
                ],
                "id": 6479,
                "name": "Block",
                "src": "554:35:16"
              }
            ],
            "id": 6480,
            "name": "FunctionDefinition",
            "src": "476:113:16"
          }
        ],
        "id": 6481,
        "name": "ContractDefinition",
        "src": "404:187:16"
      },
      {
        "attributes": {
          "SourceUnit": 1346,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/NutDistributor.sol",
          "file": "../NutDistributor.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6482,
        "name": "ImportDirective",
        "src": "593:31:16"
      },
      {
        "attributes": {
          "SourceUnit": 9138,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6483,
        "name": "ImportDirective",
        "src": "625:59:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1345,
            5969,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6495,
            1345,
            5969,
            6362,
            8343
          ],
          "name": "NutDistributorAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NutDistributor",
                  "referencedDeclaration": 1345,
                  "type": "contract NutDistributor"
                },
                "id": 6484,
                "name": "UserDefinedTypeName",
                "src": "835:14:16"
              }
            ],
            "id": 6485,
            "name": "InheritanceSpecifier",
            "src": "835:14:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                1344
              ],
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6495,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 6487,
                "name": "OverrideSpecifier",
                "src": "946:8:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6486,
                "name": "ParameterList",
                "src": "917:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6494,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6488,
                        "name": "ElementaryTypeName",
                        "src": "964:6:16"
                      }
                    ],
                    "id": 6489,
                    "name": "VariableDeclaration",
                    "src": "964:13:16"
                  }
                ],
                "id": 6490,
                "name": "ParameterList",
                "src": "963:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6490
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746469737472696275746f72616c7461",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutdistributoralta\"",
                          "value": "nutdistributoralta"
                        },
                        "id": 6491,
                        "name": "Literal",
                        "src": "996:20:16"
                      }
                    ],
                    "id": 6492,
                    "name": "Return",
                    "src": "989:27:16"
                  }
                ],
                "id": 6493,
                "name": "Block",
                "src": "979:43:16"
              }
            ],
            "id": 6494,
            "name": "FunctionDefinition",
            "src": "892:130:16"
          }
        ],
        "id": 6495,
        "name": "ContractDefinition",
        "src": "804:220:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1345,
            5969,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6507,
            1345,
            5969,
            6362,
            8343
          ],
          "name": "NutDistributorAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "NutDistributor",
                  "referencedDeclaration": 1345,
                  "type": "contract NutDistributor"
                },
                "id": 6496,
                "name": "UserDefinedTypeName",
                "src": "1057:14:16"
              }
            ],
            "id": 6497,
            "name": "InheritanceSpecifier",
            "src": "1057:14:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                1344
              ],
              "functionSelector": "05b540f2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionString",
              "scope": 6507,
              "stateMutability": "pure",
              "virtual": true,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 6499,
                "name": "OverrideSpecifier",
                "src": "1168:8:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6498,
                "name": "ParameterList",
                "src": "1139:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 6506,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6500,
                        "name": "ElementaryTypeName",
                        "src": "1186:6:16"
                      }
                    ],
                    "id": 6501,
                    "name": "VariableDeclaration",
                    "src": "1186:13:16"
                  }
                ],
                "id": 6502,
                "name": "ParameterList",
                "src": "1185:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6502
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "6e75746469737472696275746f72616c7462",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"nutdistributoraltb\"",
                          "value": "nutdistributoraltb"
                        },
                        "id": 6503,
                        "name": "Literal",
                        "src": "1218:20:16"
                      }
                    ],
                    "id": 6504,
                    "name": "Return",
                    "src": "1211:27:16"
                  }
                ],
                "id": 6505,
                "name": "Block",
                "src": "1201:43:16"
              }
            ],
            "id": 6506,
            "name": "FunctionDefinition",
            "src": "1114:130:16"
          }
        ],
        "id": 6507,
        "name": "ContractDefinition",
        "src": "1026:220:16"
      },
      {
        "attributes": {
          "SourceUnit": 7432,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockERC20.sol",
          "file": "./MockERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6508,
        "name": "ImportDirective",
        "src": "1248:25:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6514,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltA",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6509,
                "name": "UserDefinedTypeName",
                "src": "1301:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7441",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltA\"",
                  "value": "MockERC20AltA"
                },
                "id": 6510,
                "name": "Literal",
                "src": "1311:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5441",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTA\"",
                  "value": "MOCKERC20ALTA"
                },
                "id": 6511,
                "name": "Literal",
                "src": "1328:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 6512,
                "name": "Literal",
                "src": "1345:2:16"
              }
            ],
            "id": 6513,
            "name": "InheritanceSpecifier",
            "src": "1301:47:16"
          }
        ],
        "id": 6514,
        "name": "ContractDefinition",
        "src": "1275:77:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6520,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltB",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6515,
                "name": "UserDefinedTypeName",
                "src": "1380:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7442",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltB\"",
                  "value": "MockERC20AltB"
                },
                "id": 6516,
                "name": "Literal",
                "src": "1390:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5442",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTB\"",
                  "value": "MOCKERC20ALTB"
                },
                "id": 6517,
                "name": "Literal",
                "src": "1407:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 6518,
                "name": "Literal",
                "src": "1424:2:16"
              }
            ],
            "id": 6519,
            "name": "InheritanceSpecifier",
            "src": "1380:47:16"
          }
        ],
        "id": 6520,
        "name": "ContractDefinition",
        "src": "1354:77:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            7431,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6526,
            7431,
            8846,
            8924,
            9456
          ],
          "name": "MockERC20AltC",
          "nodes": [
            null
          ],
          "scope": 6599
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "name": "MockERC20",
                  "referencedDeclaration": 7431,
                  "type": "contract MockERC20"
                },
                "id": 6521,
                "name": "UserDefinedTypeName",
                "src": "1459:9:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d6f636b4552433230416c7443",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MockERC20AltC\"",
                  "value": "MockERC20AltC"
                },
                "id": 6522,
                "name": "Literal",
                "src": "1469:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "4d4f434b4552433230414c5443",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"MOCKERC20ALTC\"",
                  "value": "MOCKERC20ALTC"
                },
                "id": 6523,
                "name": "Literal",
                "src": "1486:15:16"
              },
              {
                "attributes": {
                  "hexvalue": "36",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 6",
                  "value": "6"
                },
                "id": 6524,
                "name": "Literal",
                "src": "1503:1:16"
              }
            ],
            "id": 6525,
            "name": "InheritanceSpecifier",
            "src": "1459:46:16"
          }
        ],
        "id": 6526,
        "name": "ContractDefinition",
        "src": "1433:76:16"
      },
      {
        "attributes": {
          "SourceUnit": 7395,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/mock/MockCERC20.sol",
          "file": "./MockCERC20.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6527,
        "name": "ImportDirective",
        "src": "1511:26:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6542,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6528,
                "name": "UserDefinedTypeName",
                "src": "1566:14:16"
              }
            ],
            "id": 6529,
            "name": "InheritanceSpecifier",
            "src": "1566:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6542,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6541,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6530,
                        "name": "ElementaryTypeName",
                        "src": "1599:7:16"
                      }
                    ],
                    "id": 6531,
                    "name": "VariableDeclaration",
                    "src": "1599:17:16"
                  }
                ],
                "id": 6532,
                "name": "ParameterList",
                "src": "1598:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6539,
                "name": "ParameterList",
                "src": "1689:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6533,
                    "name": "Identifier",
                    "src": "1622:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6531,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6534,
                    "name": "Identifier",
                    "src": "1637:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7441",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltA\"",
                      "value": "MockCERC20 AltA"
                    },
                    "id": 6535,
                    "name": "Literal",
                    "src": "1648:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5441",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTA\"",
                      "value": "MOCKCERC20ALTA"
                    },
                    "id": 6536,
                    "name": "Literal",
                    "src": "1667:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 6537,
                    "name": "Literal",
                    "src": "1685:2:16"
                  }
                ],
                "id": 6538,
                "name": "ModifierInvocation",
                "src": "1622:66:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6540,
                "name": "Block",
                "src": "1689:7:16"
              }
            ],
            "id": 6541,
            "name": "FunctionDefinition",
            "src": "1587:109:16"
          }
        ],
        "id": 6542,
        "name": "ContractDefinition",
        "src": "1539:159:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6557,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6543,
                "name": "UserDefinedTypeName",
                "src": "1726:14:16"
              }
            ],
            "id": 6544,
            "name": "InheritanceSpecifier",
            "src": "1726:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6557,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6556,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6545,
                        "name": "ElementaryTypeName",
                        "src": "1759:7:16"
                      }
                    ],
                    "id": 6546,
                    "name": "VariableDeclaration",
                    "src": "1759:17:16"
                  }
                ],
                "id": 6547,
                "name": "ParameterList",
                "src": "1758:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6554,
                "name": "ParameterList",
                "src": "1849:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6548,
                    "name": "Identifier",
                    "src": "1782:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6546,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6549,
                    "name": "Identifier",
                    "src": "1797:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7442",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltB\"",
                      "value": "MockCERC20 AltB"
                    },
                    "id": 6550,
                    "name": "Literal",
                    "src": "1808:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5442",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTB\"",
                      "value": "MOCKCERC20ALTB"
                    },
                    "id": 6551,
                    "name": "Literal",
                    "src": "1827:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3138",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 18",
                      "value": "18"
                    },
                    "id": 6552,
                    "name": "Literal",
                    "src": "1845:2:16"
                  }
                ],
                "id": 6553,
                "name": "ModifierInvocation",
                "src": "1782:66:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6555,
                "name": "Block",
                "src": "1849:7:16"
              }
            ],
            "id": 6556,
            "name": "FunctionDefinition",
            "src": "1747:109:16"
          }
        ],
        "id": 6557,
        "name": "ContractDefinition",
        "src": "1699:159:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5940,
            7379,
            8846,
            8924,
            9456
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6572,
            7379,
            8846,
            8924,
            9456,
            5940
          ],
          "name": "MockCERC20AltC",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MockCERC20Base",
                  "referencedDeclaration": 7379,
                  "type": "contract MockCERC20Base"
                },
                "id": 6558,
                "name": "UserDefinedTypeName",
                "src": "1886:14:16"
              }
            ],
            "id": 6559,
            "name": "InheritanceSpecifier",
            "src": "1886:14:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6572,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenAddr",
                      "scope": 6571,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6560,
                        "name": "ElementaryTypeName",
                        "src": "1919:7:16"
                      }
                    ],
                    "id": 6561,
                    "name": "VariableDeclaration",
                    "src": "1919:17:16"
                  }
                ],
                "id": 6562,
                "name": "ParameterList",
                "src": "1918:19:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6569,
                "name": "ParameterList",
                "src": "2008:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7379,
                      "type": "type(contract MockCERC20Base)",
                      "value": "MockCERC20Base"
                    },
                    "id": 6563,
                    "name": "Identifier",
                    "src": "1942:14:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6561,
                      "type": "address",
                      "value": "tokenAddr"
                    },
                    "id": 6564,
                    "name": "Identifier",
                    "src": "1957:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d6f636b43455243323020416c7443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MockCERC20 AltC\"",
                      "value": "MockCERC20 AltC"
                    },
                    "id": 6565,
                    "name": "Literal",
                    "src": "1968:17:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d4f434b434552433230414c5443",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MOCKCERC20ALTC\"",
                      "value": "MOCKCERC20ALTC"
                    },
                    "id": 6566,
                    "name": "Literal",
                    "src": "1987:16:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "36",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 6",
                      "value": "6"
                    },
                    "id": 6567,
                    "name": "Literal",
                    "src": "2005:1:16"
                  }
                ],
                "id": 6568,
                "name": "ModifierInvocation",
                "src": "1942:65:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6570,
                "name": "Block",
                "src": "2008:7:16"
              }
            ],
            "id": 6571,
            "name": "FunctionDefinition",
            "src": "1907:108:16"
          }
        ],
        "id": 6572,
        "name": "ContractDefinition",
        "src": "1859:158:16"
      },
      {
        "attributes": {
          "SourceUnit": 5819,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/adapters/CompoundAdapter.sol",
          "file": "../adapters/CompoundAdapter.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6573,
        "name": "ImportDirective",
        "src": "2019:41:16"
      },
      {
        "attributes": {
          "SourceUnit": 6234,
          "absolutePath": "/home/joe/local2/bench/git/nutmeg.0501/contracts/interfaces/INutmeg.sol",
          "file": "../interfaces/INutmeg.sol",
          "scope": 6599,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6574,
        "name": "ImportDirective",
        "src": "2061:35:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5818,
            5881,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6586,
            5818,
            5881,
            6362,
            8343
          ],
          "name": "CompoundAdapterAltA",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "CompoundAdapter",
                  "referencedDeclaration": 5818,
                  "type": "contract CompoundAdapter"
                },
                "id": 6575,
                "name": "UserDefinedTypeName",
                "src": "2129:15:16"
              }
            ],
            "id": 6576,
            "name": "InheritanceSpecifier",
            "src": "2129:15:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6586,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nutmegAddr",
                      "scope": 6585,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract INutmeg",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "INutmeg",
                          "referencedDeclaration": 6233,
                          "type": "contract INutmeg"
                        },
                        "id": 6577,
                        "name": "UserDefinedTypeName",
                        "src": "2163:7:16"
                      }
                    ],
                    "id": 6578,
                    "name": "VariableDeclaration",
                    "src": "2163:18:16"
                  }
                ],
                "id": 6579,
                "name": "ParameterList",
                "src": "2162:20:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6583,
                "name": "ParameterList",
                "src": "2211:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5818,
                      "type": "type(contract CompoundAdapter)",
                      "value": "CompoundAdapter"
                    },
                    "id": 6580,
                    "name": "Identifier",
                    "src": "2183:15:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6578,
                      "type": "contract INutmeg",
                      "value": "nutmegAddr"
                    },
                    "id": 6581,
                    "name": "Identifier",
                    "src": "2199:10:16"
                  }
                ],
                "id": 6582,
                "name": "ModifierInvocation",
                "src": "2183:27:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6584,
                "name": "Block",
                "src": "2211:7:16"
              }
            ],
            "id": 6585,
            "name": "FunctionDefinition",
            "src": "2151:67:16"
          }
        ],
        "id": 6586,
        "name": "ContractDefinition",
        "src": "2097:123:16"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5818,
            5881,
            6362,
            8343
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6598,
            5818,
            5881,
            6362,
            8343
          ],
          "name": "CompoundAdapterAltB",
          "scope": 6599
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "CompoundAdapter",
                  "referencedDeclaration": 5818,
                  "type": "contract CompoundAdapter"
                },
                "id": 6587,
                "name": "UserDefinedTypeName",
                "src": "2254:15:16"
              }
            ],
            "id": 6588,
            "name": "InheritanceSpecifier",
            "src": "2254:15:16"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6598,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "nutmegAddr",
                      "scope": 6597,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract INutmeg",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "INutmeg",
                          "referencedDeclaration": 6233,
                          "type": "contract INutmeg"
                        },
                        "id": 6589,
                        "name": "UserDefinedTypeName",
                        "src": "2288:7:16"
                      }
                    ],
                    "id": 6590,
                    "name": "VariableDeclaration",
                    "src": "2288:18:16"
                  }
                ],
                "id": 6591,
                "name": "ParameterList",
                "src": "2287:20:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6595,
                "name": "ParameterList",
                "src": "2336:0:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5818,
                      "type": "type(contract CompoundAdapter)",
                      "value": "CompoundAdapter"
                    },
                    "id": 6592,
                    "name": "Identifier",
                    "src": "2308:15:16"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6590,
                      "type": "contract INutmeg",
                      "value": "nutmegAddr"
                    },
                    "id": 6593,
                    "name": "Identifier",
                    "src": "2324:10:16"
                  }
                ],
                "id": 6594,
                "name": "ModifierInvocation",
                "src": "2308:27:16"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 6596,
                "name": "Block",
                "src": "2336:7:16"
              }
            ],
            "id": 6597,
            "name": "FunctionDefinition",
            "src": "2276:67:16"
          }
        ],
        "id": 6598,
        "name": "ContractDefinition",
        "src": "2222:123:16"
      }
    ],
    "id": 6599,
    "name": "SourceUnit",
    "src": "33:2313:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9E63417Fe35f67942A2BF2449c5A723DE970C558",
      "transactionHash": "0x64486af0878dc0942c6ff0ffbf7c83bd08a2c59eedf860af1fd48afc0b041383"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-04T05:14:42.006Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptGovernor()": {
        "details": "Accept to become the new governor. Must be called by the pending governor."
      },
      "collect()": {
        "details": "Collect Nut tokens"
      },
      "distribute()": {
        "details": "Distribute NUT tokens for the previous epoch"
      },
      "getCollectionAmount()": {
        "details": "getCollectionAmount get the # of NUT tokens for collection"
      },
      "setNutmegAddress(address)": {
        "details": "Set the Nutmeg"
      },
      "setPendingGovernor(address)": {
        "details": "Set the pending governor, which will be the governor once accepted.",
        "params": {
          "addr": "The address of the pending governor."
        }
      },
      "setPriceOracle(address)": {
        "details": "Set the oracle"
      },
      "updateVtb(address,address,uint256,uint256)": {
        "params": {
          "decAmount": "false=subtract/unstake true=add/stake",
          "incAmount": "to stake or unstake",
          "lender": "Address of the lender.",
          "token": "Base token of the pool."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "updateVtb(address,address,uint256,uint256)": {
        "notice": "Update valueTimesBlocks of pools and the lender when they stake or unstake"
      }
    },
    "version": 1
  }
}